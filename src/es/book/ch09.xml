<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- originated from English revision 652 -->
<!-- TODO a largo plazo, sincronizar con las traducciones encontradas
     en los ficheros .po del cliente -->
<chapter id="svn-ch-9">
  <title>Referencia completa de Subversion</title>
  
  <simplesect>
    <para>Este capítulo tiene el propósito de ser una referencia
      completa sobre el uso de Subversion. Incluye el
      cliente de línea de comando (<command>svn</command>)
      y todos sus subcomandos, al igual que los programas de
      administración del repositorio (<command>svnadmin</command>
      y <command>svnlook</command>) y sus respectivos subcomandos.
    </para>
  </simplesect>
  
  <!-- ================================================================= -->
  <!-- ======================== SECTION 1 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-9-sect-1">
    <title>El cliente de línea de comando de Subversion:
      <command>svn</command></title>
    
    <para>Para usar el cliente de línea de comando, debe teclear
      <command>svn</command>, el subcomando que desea usar
      <footnote><para>Si, de acuerdo, no necesita un subcomando para
      usar el parámetro <option>--version</option>, pero llegaremos
      a esto en un minuto.</para> </footnote>, y cualquier parámetro
      u objetivos sobre los cuales desea operar&mdash;no hay un
      orden específico en el cual deben aparecer los subcomandos
      y parámetros. Por ejemplo, todos los siguientes ejemplos de
      uso de <command>svn status</command> son válidos:</para>

    <screen>
$ svn -v status
$ svn status -v 
$ svn status -v myfile
</screen>

    <para>Puede encontrar más ejemplos de cómo usar la mayoria de
      los comandos del cliente en <xref linkend="svn-ch-3"/>
      y comandos para manejar propiedades en <xref
      linkend="svn-ch-7-sect-2"/>.</para>
    
    <sect2 id="svn-ch-9-sect-1.1">
      <title>Parámetros de <command>svn</command></title>
      
      <para>Aunque Subversion tiene diferentes parámetros para sus
        subcomandos, todos los parámetros son globales&mdash;es
        decir, se garantiza que cada parámetro significa la misma
        cosa sin importar el subcomando que use. Por ejemplo,
        <option>--verbose</option> (<option>-v</option>) siempre
        significa <quote>salida abundante de mensajes<!-- TODO
        verbose output tiene traducción literal? --></quote>,
        sin importar el subcomando con el que lo use.</para>

      <variablelist>
        
        <varlistentry>
          <term><option>--auto-props</option></term>
          <listitem>
            <para>Activa auto propiedades, reemplazando la directiva
            <literal>enable-auto-props</literal> del fichero
            <filename>config</filename>.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--config-dir</option>
            <replaceable>DIR</replaceable></term>
          <listitem>
            <para>Indica a Subversion que lea la información de
            configuración del directorio especificado en lugar del
            lugar por defecto (<filename>.subversion</filename>
            en el directorio home del usuario).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--diff-cmd</option>
            <replaceable>CMD</replaceable></term>
          <listitem>
            <para>Especifica el programa externo que desea usar para
            mostrar las diferencias entre ficheros. Cuando invoca
            <command>svn diff</command>, usa el motor diferencial
            interno de Subversion, el cual genera ficheros
            diferenciales en formato unificado por defecto. Si
            quiere usar un programa de diferenciación externo, use
            <option>--diff-cmd</option>.  Puede pasar parámetros
            a su programa de diferenciación con el parámetro
            <option>--extensions</option> (más sobre esto adelante
            en esta sección).</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--diff3-cmd</option>
            <replaceable>CMD</replaceable></term>
          <listitem>
            <para>Especifica el programa externo que desea usar para
            fusionar los ficheros.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--dry-run</option></term>
          <listitem>
            <para>Recorre todo el proceso interno de la ejecución
              del comando, pero en realidad no se realizan
              cambios&mdash;ya sea en disco on en el
              repositorio.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--editor-cmd</option>
            <replaceable>CMD</replaceable></term>
          <listitem>
            <para>Especifica el programa externo que desea usar
              para modificar mensajes de informes de cambios o
              valores de propiedades.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--encoding</option> <replaceable>ENC</replaceable></term>
          <listitem>
            <para>Indica a Subversion que el mensaje que escribe al
              enviar cambios al repositorio está en la codificación
              indicada. Por defecto se usa la configuración local
              nativa de su sistema operativo, y debería especificar
              la codificación si sus mensajes de cambios están en
              otra codificación.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--extensions</option> (<option>-x</option>)
          <replaceable>ARGS</replaceable></term>
          <listitem>
            <para>Especifica un parámetro o varios que Subversion
              debe pasar al comando de diferenciación externo cuando
              se muestran diferencias entre ficheros. Si desea
              pasar múltiples argumentos, debe entrecomillarlos
              todos (por ejemplo, <command>svn diff --diff-cmd
              /usr/bin/diff -x "-b -E"</command>).  Este parámetro
              <emphasis>sólo</emphasis> puede ser usado si también
              usa el parámetro <option>--diff-cmd</option>.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--file</option> (<option>-F</option>)
            <replaceable>FILENAME</replaceable>
          </term>
          <listitem>
            <para>Usa el contenido del fichero pasado como argumento
              de este parámetro para el subcomando
              especificado.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--force</option></term>
          <listitem>
            <para>Obliga la ejecución de un comando u operación
              particular.  Hay algunas operaciones que Subversion
              evitará hacer durante un uso normal, pero puede
              pasar el parámetro de forzado para decirle a
              Subversion <quote>Sé lo que estoy haciendo y las
              posibles repercusiones de mis actos, así que déjame
              hacerlos</quote>.  Este parámetro es el equivalente
              programático de realizar algún trabajo eléctrico sin
              desconectar la corriente&mdash;si no sabe lo que está
              haciendo, es probable que consiga una desagradable
              electrocución.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--force-log</option></term>
          <listitem>
            <para>Obliga la aceptación de parámetros sospechosos
              usados con las opciones <option>--message</option>
              (<option>-m</option>) o <option>--file</option>
              (<option>-F</option>). Por defecto, Subversion
              producirá un error si los parámetros de estas opciones
              perecen ser objetivos del subcomando. Por ejemplo,
              si pasa la ruta de un fichero versionado a la opción
              <option>--file</option> (<option>-F</option>),
              Subversion asumirá que ha cometido un fallo,
              y que esa ruta era en realidad el objetivo de la
              operación, y simplemente se equivocó al indicar
              el fichero&mdash;no versionado&mdash;que contiene
              el registro de mensajes de cambios. Para confirmar
              su intención y anular este tipo de errores, pase la
              opción <option>--force-log</option> a comandos que
              aceptan mensajes de cambios.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--help</option> (<option>-h</option> or
                <option>-?</option>)
          </term>
          <listitem>
            <para>Si se usa con uno o más subcomandos, muestra la
              ayuda de texto empotrada en el cliente para cada
              subcomando. Si se usa sin nada más, muestra la ayuda
              de texto genérica del cliente.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--ignore-ancestry</option></term>
          <listitem>
            <para>Indica a Subversion que ignore la ascendencia
              cuando calcule diferencias (sólo usará el contenido
              de las rutas).</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--incremental</option></term>
          <listitem>
            <para>Muestra la salida en un formato que permite la
              concatenación.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--message</option> (<option>-m</option>)
            <replaceable>MESSAGE</replaceable>
          </term>
          <listitem>
            <para>Indica que especificará el mensaje del informe de
              cambios en la línea de comando, siguiendo al
              parámetro. Por ejemplo:</para>
            
            <screen>
$ svn commit -m "They don't make Sunday."
</screen>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--new</option> <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Usa <replaceable>ARG</replaceable> como el objetivo
              nuevo.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--no-auth-cache</option></term>
          <listitem>
            <para>Previene el cacheado de información de
              autenticación (ej: nombre de usuario y clave de
              acceso) en los directorios administrativos de
              Subversion.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--no-auto-props</option></term>
          <listitem>
            <para>Desactiva las propiedades automáticas, reemplazando
              la directiva <literal>enable-auto-props</literal>
              del fichero <filename>config</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--no-diff-deleted</option></term>
        <listitem>
            <para>Evita que Subversion muestre diferencias para
              ficheros borrados.  El comportamiento por defecto
              cuando elimina un fichero es que <command>svn
              diff</command> imprima las mismas diferencias que
              vería si hubiese dejado el fichero pero eliminando
              su contenido.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--no-ignore</option></term>
          <listitem>
            <para>Muestra ficheros en el listado de estado que
              normalmente serían omitidos debido a que
              coinciden con un patrón de la propiedad
              <literal>svn:ignore</literal>. Vea <xref
              linkend="svn-ch-7-sect-1.3.2"/> para más
              información.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--non-interactive</option></term>
          <listitem>
            <para>En el caso de un fallo de autenticación, o
              credenciales insuficientes, evita que se soliciten
              las credenciales (ej: nombre de usuario o clave).
              Esto es útil si está ejecutando Subversion dentro de
              un script automático y le resulta más apropiado que
              Subversion falle en lugar de pedir más información de
              manera interactiva.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--non-recursive</option> (<option>-N</option>)</term>
          <listitem>
            <para>Evita que un subcomando entre de manera recursiva
              en subdirectorios.  La mayoría de los subcomandos
              son recursivos por defecto, pero algunos
              subcomandos&mdash;normalmente aquellos que tienen
              el potencial de borrar o deshacer sus modificaciones
              locales&mdash;no lo son.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--notice-ancestry</option></term>
          <listitem>
            <para>Presta atención a la ascendencia cuando calcula
              diferencias..</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--old</option> <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Usa <replaceable>ARG</replaceable> como el objetivo
              antiguo.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--password</option>
            <replaceable>PASS</replaceable></term>
          <listitem>
            <para>Indica en la línea de comando la palabra clave
              para la autenticación&mdash;de otro modo, siempre
              que sea necesario, Subversion le preguntará por
              ella.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--quiet</option> (<option>-q</option>)</term>
          <listitem>
            <para>Solicita que el cliente imprima solamente la
              información esencial mientras realiza su
              operación..</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--recursive</option> (<option>-R</option>)</term>
          <listitem>
            <para>Obliga a un subcomando a que entre de manera
              recursiva en subdirectorios.  La mayoría de los
              subcomandos son recursivos por defecto.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--relocate</option> <replaceable>FROM TO
          [PATH...]</replaceable></term>
          <listitem>
            <para>Usado con el subcomando <command>svn
              switch</command>, cambia la ubicación del repositorio
              que su copia local de trabajo referencia. Esto
              es útil si la ubicación de su repositorio cambia y
              tiene una copia local existente que querría continuar
              usando. Consulte <command>svn switch</command> para
              ver un ejemplo.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--revision</option> (<option>-r</option>)
            <replaceable>REV</replaceable>
          </term>
          <listitem>
            <para>Indica que va a proporcionar una revisión (o rango
              de revisiones) para una operación en particular. Puede
              proporcionar números de revisión, palabras clave o
              fechas (rodeadas por llaves), como argumentos del
              parámetro de revisión. Si quiere proporcionar un
              rango de revisiones, puede proporcionar dos revisiones
              separadas por dos puntos. Por ejemplo:</para>

            <screen>
$ svn log -r 1729
$ svn log -r 1729:HEAD
$ svn log -r 1729:1744
$ svn log -r {2001-12-04}:{2002-02-17}
$ svn log -r 1729:{2002-02-17}
</screen>

            <para>Vea <xref linkend="svn-ch-3-sect-3.2"/> para
              obtener más información.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--revprop</option></term>
          <listitem>
            <para>Opera sobre una propiedad de revisión en lugar de
              una propiedad Subversion particular de un
              fichero o directorio. Este parámetro requiere
              que también indique la revisión con el parámetro
              <option>--revision</option> (<option>-r</option>). Vea
              <xref linkend="svn-ch-5-sect-1.2"/> para más detalles
              sobre propiedades no versionadas.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--show-updates</option> (<option>-u</option>)</term>
          <listitem>
            <para>Hace que el cliente muestre la información sobre
              qué ficheros de su copia local de trabajo no están
              actualizados. Esto realmente no actualiza ninguno
              de sus ficheros&mdash;solamente muestra qué ficheros
              serían actualizados en caso de ejecutar <command>svn
              update</command>.
            </para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--stop-on-copy</option></term>
          <listitem>
            <para>Hace que el subcomando de Subversion que está
              recorriendo la historia de un recurso versionado deje
              de procesar esa información histórica cuando encuentre
              una copia&mdash;es decir, un punto en la historia
              cuando el recurso fue copiado desde otra ubicación
              del repositorio.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--strict</option></term>
          <listitem>
            <para>Hace que Subversion siga unas semánticas estrictas,
              una noción que es bastante vaga a no ser que hablemos
              de subcomandos específicos.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--targets</option>
            <replaceable>FILENAME</replaceable></term>
          <listitem>
            <para>Indica a Subversion que obtenga un listado de los
              ficheros sobre los que usted desea operar a partir
              del fichero proporcionado en lugar de listar todos
              sus nombres en la línea de comando.
            </para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--username</option>
            <replaceable>NAME</replaceable></term>
          <listitem>
            <para>Indica que está proporcionando su nombre de usuario
              para la autenticación en la línea de comando&mdash;de
              lo contrario, si es necesario, Subversion le preguntará
              por el.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--verbose</option> (<option>-v</option>)</term>
          <listitem>
            <para>Solicita que el cliente imprima tanta información
              como sea posible mientras ejecuta cualquier
              subcomando. Esto puede tener como resultado que
              Subversion imprima campos adicionales, información
              detallada sobre cada fichero, o información adicional
              relacionada con las acciones que toma.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--version</option></term>
          <listitem>
            <para>Imprime la información de versión del cliente. Esta
              información no sólo incluye el número del cliente,
              sino que tabién muestra un listado de todos los módulos
              de acceso a repositorio que el cliente puede usar para
              acceder a repositorios de Subversion.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--xml</option></term>
          <listitem>
            <para>Imprime la salida en formato XML.</para>
          </listitem>
        </varlistentry>
        
      </variablelist>
      
    </sect2>
    
    <sect2 id="svn-ch-9-sect-1.2">
      <title>Subcomandos de <command>svn</command></title>

      <refentry id="svn-ch-9-sect-1.2-re-add">
        <refnamediv>
          <refname>svn add</refname>
          <refpurpose>Añade ficheros y directorios.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn add PATH...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>
          
          <para>Añade ficheros y directorios a su copia de trabajo
            local y programa su adición al repositorio. Serán
            copiados al repositorio la próxima vez que envíe todos
            sus cambios al repositorio. Si añade algo o cambia de
            parecer antes del envío, puede desprogramar la adición
            usando <command>svn revert</command>.</para>
        </refsect1>
        
        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>
        
        <refsect1>
          <title>Cambios</title>
          <para>En copia local</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>No</para>
        </refsect1>
        
        <refsect1>
          <title>Parámetros</title>

          <screen>
--targets FILENAME
--non-recursive (-N)
--quiet (-q)
--config-dir DIR
--auto-props
--no-auto-props
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>
          
          <para>Para añadir un fichero a su copia de trabajo
            local:</para>

          <screen>
$ svn add foo.c 
A         foo.c
</screen>

          <para>Cuando añade un directorio, el comportamiento por
            defecto de <command>svn add</command> es recurrir
            dentro:</para>
          
          <screen>
$ svn add testdir
A         testdir
A         testdir/a
A         testdir/b
A         testdir/c
A         testdir/d
</screen>

          <para>Puede añadir un directorio sin añadir su
            contenido:</para>
          
          <screen>
$ svn add --non-recursive otherdir
A         otherdir
</screen>
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-blame">
        <refnamediv>
          <refname>svn blame</refname>
          <refpurpose>Muestra en línea información del autor y
            la revisión sobre los ficheros o URLs
            especificados.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn blame TARGET...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>
          
          <para>Muestra en línea información del autor y la revisión
            sobre los ficheros o URLs especificados. Cada línea de
            texto es anotada al principio con el autor (nombre de
            usuario) y el número de revisión para el último cambio
            de esa línea.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>praise, annotate, ann</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Si quiere ver el código fuente de readme.txt en su
            repositorio de pruebas anotado con la información de
            blame:</para>
          <screen>
$ svn blame http://svn.red-bean.com/repos/test/readme.txt
     3      sally This is a README file.
     5      harry You should read this.
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-cat">
        <refnamediv>
          <refname>svn cat</refname>
          <refpurpose>Vuelca el contenido de los ficheros o URLs
            especificados.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn cat TARGET...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>
          
          <para>Vuelca el contenido de los ficheros o URLs
            especificados.  Para obtener los contenidos de
            directorios, vea <command>svn list</command>.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Si quiere ver readme.txt de su repositorio sin
            obtener una copia local:</para>
          <screen>
$ svn cat http://svn.red-bean.com/repos/test/readme.txt
This is a README file.
You should read this.
</screen>

          <tip>
            <para>Si su copia local no está actualizada (o tiene
              modificaciones locales) y quiere ver la revisión
              <literal>HEAD</literal> de un fichero de su
              copia local, <command>svn cat</command> obtendrá
              automáticamente la revisión <literal>HEAD</literal>
              cuando especifica una ruta:</para>
          </tip>

          <screen>
$ cat foo.c
This file is in my local working copy 
and has changes that I've made.

$ svn cat foo.c
Latest revision fresh from the repository!
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-checkout">
        <refnamediv>
          <refname>svn checkout</refname>
          <refpurpose>Obtiene una copia local de trabajo de un
            repositorio.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn checkout URL... [PATH]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>
          
          <para>Obtiene una copia local de trabajo de un
            repositorio. Si omite <replaceable>PATH</replaceable>,
            el nombre base de la URL será usado como el destino. Si
            proporciona múltiples URLS, cada una será obtenida en un
            subdirectorio de PATH, con el nombre del subdirectorio
            como nombre base de la URL.</para>

        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>co</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Crea una copia local de trabajo.</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--revision (-r) REV
--quiet (-q)
--non-recursive (-N)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>

          <para>Obtener una copia local en un directorio llamado
            'mine':</para>

          <screen>
$ svn checkout file:///tmp/repos/test mine
A  mine/a
A  mine/b
Checked out revision 2.
$ ls
mine
</screen>

          <para>Obtener dos directorios diferentes en dos copias
            locales de trabajo separadas:</para>

          <screen>
$ svn checkout file:///tmp/repos/test  file:///tmp/repos/quiz
A  test/a
A  test/b
Checked out revision 2.
A  quiz/l
A  quiz/m
Checked out revision 2.
$ ls
quiz  test
</screen>

          <para>Obtener dos directorios diferentes en dos copias
            locales de trabajo separadas, pero guardando ambas en
            un directorio llamado 'working copies':</para>

          <screen>
$ svn checkout file:///tmp/repos/test  file:///tmp/repos/quiz working-copies
A  working-copies/test/a
A  working-copies/test/b
Checked out revision 2.
A  working-copies/quiz/l
A  working-copies/quiz/m
Checked out revision 2.
$ ls
working-copies
</screen>

          <para>Si interrumpe la operación (o alguna otra cosa
            interrumpe su operación de descarga como una pérdida de
            conectividad, etc), puede continuarla ya sea ejecutando
            el mismo comando para obtener la copia local de nuevo, o
            actualizando la copia local de trabajo incompleta:</para>

          <screen>
$ svn checkout file:///tmp/repos/test test
A  test/a
A  test/b
^C
svn: The operation was interrupted
svn: caught SIGINT

$ svn checkout file:///tmp/repos/test test
A  test/c
A  test/d
^C
svn: The operation was interrupted
svn: caught SIGINT

$ cd test
$ svn update
A  test/e
A  test/f
Updated to revision 3.
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-cleanup">
        <refnamediv>
          <refname>svn cleanup</refname>
          <refpurpose>Limpia la copia local de trabajo de forma
            recursiva.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn cleanup [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Limpia la copia local de trabajo de forma recursiva,
            eliminando bloqueos para continuar operaciones
            inacabadas. Si alguna vez obtiene el error <quote>copia
            local bloqueada</quote>, ejecute este comando para
            eliminar viejos bloqueos y llevar su copia local
            de trabajo de nuevo a un estado usable. Vea <xref
            linkend="svn-ap-b"/>.</para>

          <para>Si, por alguna razón, un comando <command>svn
            update</command> falla a causa de un problema relacionado
            con la ejecución de un programa de diferenciación externo
            (ej: error de entrada del usuario o de la red), pase
            el parámetro <option>--diff3-cmd</option> para que el
            proceso de limpiado complete fusionados pendientes
            con su programa de diferenciación externo. También
            puede especificar un directorio de configuración
            con el parámetro <option>--config-dir</option>,
            pero debería necesitar estos parámetros con extrema
            infrecuencia.</para>

        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En copia local</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>No</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--diff3-cmd CMD
--config-dir DIR
</screen>

        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Bueno, no hay muchos ejemplos aquí dado que
            <command>svn cleanup</command> no genera
            salida alguna. Si no indica una ruta, se usará
            <quote><filename>.</filename></quote>.</para>

          <screen>
$ svn cleanup

$ svn cleanup /path/to/working-copy
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-commit">
        <refnamediv>
          <refname>svn commit</refname>
          <refpurpose>Envía cambios desde su copia de trabajo local
            al repositorio.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn commit [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Envía cambios desde su copia de trabajo local
            al repositorio. Si no proporciona un mensaje de
            cambios en la operación, ya sea usando los parámetros
            <option>--file</option> o <option>--message</option>,
            <command>svn</command> abrirá su editor para que
            componga el mensaje del informe de cambios. Vea
            la sección <literal>editor-cmd</literal> en <xref
            linkend="svn-ch-7-sect-1.3.2"/>.</para>

          <tip>
            <para>Si comienza un envío y Subversion lanza su editor
              para componer el mensaje de cambios, todavía puede
              abortar sin enviar los cambios.  Si quiere cancelar
              su envío, simplemente salga de su editor sin salvar
              el mensaje de cambios y Subversion le preguntará si
              quiere abortar el envío, continuar sin mensaje alguno,
              o editar de nuevo el mensaje.</para>
          </tip>

        </refsect1>


        
        <refsect1>
          <title>Nombres alternativos</title>
          <para>ci (abreviación de <quote>check in</quote> y no
            <quote>co</quote>, que es la abreviación de
            <quote>checkout</quote>)</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Copia local de trabajo, repositorio</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--quiet (-q)
--non-recursive (-N)
--targets FILENAME
--force-log
--username USER
--password PASS
--no-auth-cache
--non-interactive
--encoding ENC
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Enviar al servidor una modificación simple a un
            fichero con el mensaje del informe de cambios en la línea
            de comando y el objetivo implícito del directorio actual
            (<quote><filename>.</filename></quote>):</para>
          
          <screen>
$ svn commit -m "added howto section."
Sending        a
Transmitting file data .
Committed revision 3.
</screen>

          <para>Enviar los cambios de una modificación al fichero
            <filename>foo.c</filename> (especificada de forma
            explícita en la línea de comando con el mensaje del
            informe de cambios contenido en un fichero llamado
            <literal>msg</literal>:</para>

          <screen>
$ svn commit -F msg foo.c
Sending        foo.c
Transmitting file data .
Committed revision 5.
</screen>

          <para>Si quiere usar un fichero que está bajo control
            de versiones para el mensaje del informe de cambios
            con <option>--file</option>, necesita pasar también el
            parámetro <option>--force-log</option>:</para>

          <screen>
$ svn commit --file file_under_vc.txt foo.c
svn: The log message file is under version control
svn: Log message file is a versioned file; use '--force-log' to override

$ svn commit --force-log --file file_under_vc.txt foo.c
Sending        foo.c
Transmitting file data .
Committed revision 6.
</screen>

          <para>Para enviar al repositorio el cambio de un fichero
            programado para ser borrado:</para>

          <screen>
$ svn commit -m "removed file 'c'."
Deleting       c

Committed revision 7.
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-copy">
        <refnamediv>
          <refname>svn copy</refname>
          <refpurpose>Copia un fichero o un directorio en la copia
            de trabajo local o en el repositorio.</refpurpose>
        </refnamediv>

        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn copy SRC DST</programlisting>
        </refsect1>

        <refsect1>
          <title>Descripción</title>
          
          <para>Copia un fichero en la copia de trabajo local o en
            el repositorio.  <replaceable>SRC</replaceable> y
            <replaceable>DST</replaceable> pueden ser ambos o bien la
            ruta de una copia de trabajo local (WC) o una URL:</para>
            
            <variablelist>

              <varlistentry>
                <term>WC  -&gt; WC</term>
                <listitem>
                  <para>Copia y programa la adición (con historia)
                    de un elemento.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>WC  -&gt; URL</term>
                <listitem>
                  <para>Envía al servidor inmediatamente una copia
                    de WC a URL.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>URL -&gt; WC</term>
                <listitem>
                  <para>Obtiene una copia local de URL en WC, y la
                    programa para una adición.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>URL -&gt; URL</term>
                <listitem>
                  <para>Copia realizada por completo en el
                    servidor. Esto normalmente se usa para crear
                    una rama o etiqueta.</para>
                </listitem>
              </varlistentry>

            </variablelist>

          <note>
            <para>Sólo puede copiar ficheros dentro de un mismo
              repositorio.  Subversion no permite realizar copias
              entre repositorios.</para>
          </note>

        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>cp</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En repositorio si el destino es una URL.</para>
          <para>En copia local si el destino es una ruta WC.</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si la fuente o el destino están en el repositorio,
            o si tiene que consultar el número de revisión de la
            fuente.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--revision (-r) REV
--quiet (-q)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--force-log
--editor-cmd EDITOR
--encoding ENC
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Copiar un elemento dentro de su copia de trabajo
            local (únicamente programa la copia&mdash;nada ocurre
            en el repositorio hasta que envíe los cambios):</para>

          <screen>
$ svn copy foo.txt bar.txt
A         bar.txt
$ svn status
A  +   bar.txt
</screen>

          <para>Copiar un elemento desde su copia de trabajo local
            a una URL en el repositorio (envía el cambio
            inmediatamente, así que debe proporcionar el mensaje
            para el informe de cambios):</para>

          <screen>
$ svn copy near.txt file:///tmp/repos/test/far-away.txt -m "Remote copy."

Committed revision 8.
</screen>

          <para>Copiar un elemento desde el repositorio a su copia
            de trabajo local (únicamente programa la copia&mdash;nada
            ocurre en el repositorio hasta que envíe los
            cambios):</para>

          <tip>
            <para>¡Este es el método recomendado para recuperar
              un fichero borrado en su repositorio!</para>
          </tip>

          <screen>
$ svn copy file:///tmp/repos/test/far-away near-here
A         near-here
</screen>

          <para>Y finalmente, una copia entre dos URLs:</para>

          <screen>
$ svn copy file:///tmp/repos/test/far-away file:///tmp/repos/test/over-there -m "remote copy."

Committed revision 9.
</screen>

          <tip>
            <para>Este es el modo más sencillo para
              <quote>etiquetar</quote> una revisión en su
              repositorio&mdash;simplemente haga <command>svn
              copy</command> de esa revisión (habitualmente
              <literal>HEAD</literal>) en su directorio de
              etiquetas.</para>
          </tip>

          <screen>
$ svn copy file:///tmp/repos/test/trunk file:///tmp/repos/test/tags/0.6.32-prerelease -m "tag tree"

Committed revision 12.
</screen>

          <para>Y no se preocupe si se olvidó de
            etiquetar&mdash;siempre puede especificar una revisión
            anterior y etiquetarla en cualquier momento:</para>

          <screen>
$ svn copy -r 11 file:///tmp/repos/test/trunk file:///tmp/repos/test/tags/0.6.32-prerelease -m "Forgot to tag at rev 11"

Committed revision 13.
</screen>
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-delete">
        <refnamediv>
          <refname>svn delete</refname>
          <refpurpose>Borra un elemento de una copia de trabajo
            local o del repositorio.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn delete PATH...</programlisting>
          <programlisting>svn delete URL...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Los elementos especificados por
            <replaceable>PATH</replaceable> son programados para
            ser borrados en el siguiente envío al repositorio.
            Los ficheros (y directorios que no han sido enviados
            al repositorio) son borrados inmediatamente de la
            copia de trabajo local. El comando no eliminará
            elementos no versionados o modificados; use el
            parámetro <option>--force</option> para invalidar este
            comportamiento.</para>

          <para>Los elementos especificados por una URL son
            eliminados del repositorio inmediatamente. Múltiples
            URLs se eliminan en una única transacción atómica.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>del, remove, rm</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Copia local de trabajo si se opera sobre ficheros,
            repositorio si se opera sobre URLs</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si se opera sobre URLs</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--force
--force-log
--message (-m) TEXT
--file (-F) FILE
--quiet (-q)
--targets FILENAME
--username USER
--password PASS
--no-auth-cache
--non-interactive
--editor-cmd EDITOR
--encoding ENC
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>

          <para>Usar <command>svn</command> para borrar un fichero
            de su copia local de trabajo meramente lo programa
            para ser borrado.  Cuando envía cambios al repositorio,
            el fichero es borrado del mismo.</para>

          <screen>
$ svn delete myfile
D         myfile

$ svn commit -m "Deleted file 'myfile'."
Deleting       myfile
Transmitting file data .
Committed revision 14.
</screen>

          <para>Borrar una URL es, no obstante, inmediato, por lo
            que debe proporcionar un mensaje para el informe de
            cambios:</para>

          <screen>
$ svn delete -m "Deleting file 'yourfile'" file:///tmp/repos/test/yourfile

Committed revision 15.
</screen>

          <para>Aquí tiene un ejemplo de cómo forzar el borrado de
            un fichero que tiene modificaciones locales:</para>

          <screen>
$ svn delete over-there 
svn: Attempting restricted operation for modified resource
svn: Use --force to override this restriction
svn: 'over-there' has local modifications

$ svn delete --force over-there 
D         over-there
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-diff">
        <refnamediv>
          <refname>svn diff</refname>
          <refpurpose>Muestra las diferencias entre dos rutas.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn diff [-r N[:M]] [--old OLD-TGT] [--new NEW-TGT] [PATH...]</programlisting>
          <programlisting>svn diff -r N:M URL</programlisting>
          <programlisting>svn diff [-r N[:M]] URL1[@N] URL2[@M]</programlisting>

        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Muestra las diferencias entre dos rutas. Puede usar
            <command>svn diff</command> de tres modos
            diferentes:</para>

          <para><command>svn diff [-r N[:M]] [--old OLD-TGT] [--new
            NEW-TGT] [PATH...]</command> muestra las diferencias
            entre <replaceable>OLD-TGT</replaceable>
            y <replaceable>NEW-TGT</replaceable>.  Si
            proporciona <replaceable>PATH</replaceable>s,
            éstas rutas son tratadas como relativas
            a <replaceable>OLD-TGT</replaceable> y
            <replaceable>NEW-TGT</replaceable> y la salida
            se restringe a diferencias en sólo aquellas
            rutas.  <replaceable>OLD-TGT</replaceable>
            y <replaceable>NEW-TGT</replaceable>
            pueden ser rutas de copias locales de trabajo o
            <replaceable>URL</replaceable><literal>[@</literal><replaceable>REV</replaceable><literal>]</literal>.
            <replaceable>OLD-TGT</replaceable> apunta
            por defecto al directorio de trabajo actual y
            <replaceable>NEW-TGT</replaceable> apunta por
            defecto a <replaceable>OLD-TGT</replaceable>.
            <replaceable>N</replaceable> es por
            defecto <literal>BASE</literal> o, si
            <replaceable>OLD-TGT</replaceable> es una URL,
            <literal>HEAD</literal>.  <replaceable>M</replaceable>
            es por defecto la versión actual o, si
            <replaceable>NEW-TGT</replaceable> es una
            URL, <literal>HEAD</literal>.  <command>svn
            diff -r N</command> ajusta la revisión
            de <replaceable>OLD-TGT</replaceable> a
            <replaceable>N</replaceable>, <command>svn diff
            -r N:M</command> también ajusta la revisión
            de <replaceable>NEW-TGT</replaceable> a
            <replaceable>M</replaceable>.</para>

          <para><command>svn diff -r N:M URL</command> es la versión
            abreviada de <command>svn diff -r N:M --old=URL
            --new=URL</command>.</para>

          <para><command>svn diff [-r N[:M]] URL1[@N]
            URL2[@M]</command> es la versión abreviada
            de <command>svn diff [-r N[:M]] --old=URL1
            --new=URL2</command>.</para>

          <para>Si <replaceable>TARGET</replaceable> es una URL,
            entonces las revisiones N y M pueden ser proporcionadas
            via <option>--revision</option> o usando la notación
            <quote>@</quote> descrita anteriormente.</para>

          <para>Si <replaceable>TARGET</replaceable> es
            una copia de trabajo local, entonces el parámetro
            <option>--revision</option> significa:</para>

          <variablelist>

            <varlistentry>
              <term><command>--revision N:M</command></term>
              <listitem>
                <para>El servidor compara
                <replaceable>TARGET</replaceable>@<replaceable>N</replaceable>
                y
                <replaceable>TARGET</replaceable>@<replaceable>M</replaceable>.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><command>--revision N</command></term>
              <listitem>
                <para>El cliente compara
                  <replaceable>TARGET</replaceable>@<replaceable>N</replaceable>
                contra la copia de trabajo local.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><command>(no --revision)</command></term>
              <listitem>
                <para>El cliente compara la versión base con la
                  versión de la copia local de trabajo de
                  <replaceable>TARGET</replaceable>.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>Si se usa la sintaxis alternativa, el servidor
            compara <replaceable>URL1</replaceable>
            y <replaceable>URL2</replaceable> en las
            revisiones <replaceable>N</replaceable> y
            <replaceable>M</replaceable> respectivamente. Si
            omite <replaceable>N</replaceable> o
            <replaceable>M</replaceable>, se asume el valor de
            <literal>HEAD</literal>.</para>

          <para>Por defecto, <command>svn diff</command> ignora la
            ascendencia de los ficheros y meramente
            compara el contenido entre dos ficheros.  Si usa
            <option>--notice-ancestry</option>, la ascendencia de
            las rutas especificadas será tomada en consideración
            durante la comparación de revisiones (es decir, si
            ejecuta <command>svn diff</command> sobre dos ficheros
            de contenido idéntico pero diferente ascendencia verá
            el contenido entero del fichero como si hubiese sido
            borrado y añadido de nuevo).</para>

        </refsect1>
        <refsect1>
          <title>Nombres alternativos</title>
          <para>di</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Para obtener las diferencias contra cualquier cosa
            menos la revisión <literal>BASE</literal> de su copia
            local de trabajo</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--old OLD-TARGET
--new NEW-TARGET
--extensions (-x) "ARGS"
--non-recursive (-N)
--diff-cmd CMD
--notice-ancestry
--username USER
--password PASS
--no-auth-cache
--non-interactive
--no-diff-deleted
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Para comparar la versión <literal>BASE</literal>
            con su copia local de trabajo (uno de los usos más
            populares de <command>svn diff</command>):</para>

          <screen>
$ svn diff COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 4404)
+++ COMMITTERS	(working copy)
</screen>

          <para>Compruebe cómo sus modificaciones locales son
            comparadas contra una versión anterior:</para>

          <screen>
$ svn diff -r 3900 COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3900)
+++ COMMITTERS	(working copy)
</screen>

          <para>Comparar la revisión 3000 con la 3500 usando la
            sintaxis <quote>@</quote>:</para>

          <screen>
$ svn diff http://svn.collab.net/repos/svn/trunk/COMMITTERS@3000 http://svn.collab.net/repos/svn/trunk/COMMITTERS@3500
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
&hellip;
</screen>

          <para>Comparar la revisión 3000 con la 3500 usando la
            notación de rango (en este caso sólo proporciona una
            URL):</para>

          <screen>
$ svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk/COMMITTERS
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
</screen>


          <para>Comparar la revisión 3000 con la 3500 de todos
            los ficheros en <filename>trunk</filename> usando la
            notación de rango:</para>

          <screen>
$ svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk
          </screen>


          <para>Comparar la revisión 3000 con la 3500 de sólo tres
            ficheros en <filename>trunk</filename> usando la notación
            de rango:</para>

          <screen>
$ svn diff -r 3000:3500 --old http://svn.collab.net/repos/svn/trunk COMMITTERS README HACKING
          </screen>

          <para>Si tiene una copia de trabajo local, puede obtener
            las diferencias sin necesidad de teclear largas
            URLs:</para>

          <screen>
$ svn diff -r 3000:3500 COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
</screen>

          <para>Use la opción <option>--diff-cmd</option>
            <replaceable>CMD</replaceable> <option>-x</option> para
            pasar argumentos de manera directa al programa externo
            de diferenciación</para>
          
          <screen>
$ svn diff --diff-cmd /usr/bin/diff -x "-i -b" COMMITTERS 
Index: COMMITTERS
===================================================================
0a1,2
&gt; This is a test
&gt; 
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-export">
        <refnamediv>
          <refname>svn export</refname>
          <refpurpose>Exporta un árbol de directorios limpio.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn export [-r REV] URL [PATH]</programlisting>
          <programlisting>svn export PATH1 PATH2</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>La primera forma exporta un árbol de directorios
            limpio desde el repositorio especificado por URL,
            en la revisión <replaceable>REV</replaceable>
            si ésta es proporcionada, en caso contrario
            se usará <literal>HEAD</literal>, en
            <replaceable>PATH</replaceable>. Si omite
            <replaceable>PATH</replaceable>, el último componente
            de <replaceable>URL</replaceable> será usado para el
            nombre del directorio local.</para>

          <para>La segunda forma exporta un árbol de directorios
            limpio desde una copia de trabajo local
            especificada por <replaceable>PATH1</replaceable> en
            <replaceable>PATH2</replaceable>.  Todos los cambios
            locales serán preservados, pero los ficheros que no
            estén bajo control de versiones no serán copiados.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Discos locales</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si se exporta desde una URL</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--quiet (-q)
--force
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Exportar desde su copia de trabajo local (no muestra
            cada fichero y directorio individual):</para>

          <screen>
$ svn export a-wc my-export
Export complete.
</screen>

          <para>Exportar desde un repositorio (muestra cada fichero
            y directorio):</para>

          <screen>
$ svn export file:///tmp/repos my-export
A  my-export/test
A  my-export/quiz
&hellip;
Exported revision 15.
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-help">
        <refnamediv>
          <refname>svn help</refname>
          <refpurpose>¡Ayuda!</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn help [SUBCOMMAND...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>¡Este es su mejor amigo cuando usa Subversion y
            este libro no está a su alcance!</para>
        </refsect1>
        
        <refsect1>
          <title>Nombres alternativos</title>
          <para>?, h</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>No</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--version
--quiet (-q)
</screen>
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-import">
        <refnamediv>
          <refname>svn import</refname>
          <refpurpose>Envía de forma recursiva los cambios de PATH
            en URL.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn import [PATH] URL</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Envía de forma recursiva los cambios de
            <replaceable>PATH</replaceable> a
            <replaceable>URL</replaceable>.  Si se omite
            <replaceable>PATH</replaceable> se asumirá
            <quote><filename>.</filename></quote>.  Los directorios
            padre son creados en el repositorio según son
            necesarios.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En repositorio</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--quiet (-q)
--non-recursive (-N)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--force-log
--editor-cmd EDITOR
--encoding ENC
--config-dir DIR
--auto-props
--no-auto-props
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Esto copia <!-- TODO: import != copy -->el
            directorio local <filename>myproj</filename> en la raíz
            de su repositorio:</para>

          <screen>
$ svn import -m "New import" myproj http://svn.red-bean.com/repos/test
Adding         myproj/sample.txt
&hellip;
Transmitting file data .........
Committed revision 16.
</screen>

          <para>Esto copia el directorio local
            <filename>myproj</filename> en el directorio
            <filename>trunk/vendors</filename> de su repositorio. No
            es necesario que <filename>trunk/vendors</filename>
            exista antes de realizar la copia&mdash;<command>svn
            import</command> creará de forma recursiva los
            directorios necesarios por usted:</para>
          <screen>
$ svn import -m "New import" myproj \
    http://svn.red-bean.com/repos/test/trunk/vendors/myproj
Adding         myproj/sample.txt
&hellip;
Transmitting file data .........
Committed revision 19.
</screen>

          <para>Tras copiar los datos, fíjese que el árbol original
            <emphasis>no</emphasis> está bajo control de
            versiones. Antes de comenzar a trabajar, necesita obtener
            una copia de trabajo local fresca del árbol mediante
            <command>svn checkout</command>.</para>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-info">
        <refnamediv>
          <refname>svn info</refname>
          <refpurpose>Imprime información sobre RUTAs.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn info [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Imprime información sobre las rutas de su copia
            local de trabajo, incluyendo:</para>

          <itemizedlist>
            <listitem><para>Ruta</para></listitem>
            <listitem><para>Nombre</para></listitem>
            <listitem><para>URL</para></listitem>
            <listitem><para>Revisión</para></listitem>
            <listitem><para>Tipo de nodo</para></listitem>
            <listitem><para>Autor del último cambio</para></listitem>
            <listitem><para>Revisión del último cambio</para></listitem>
            <listitem><para>Fecha del último cambio</para></listitem>
            <listitem><para>Texto actualizado por última vez</para></listitem>
            <listitem><para>Propiedades actualizadas por última vez</para></listitem>
            <listitem><para>Suma de verificación</para></listitem>
          </itemizedlist>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>No</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--targets FILENAME
--recursive (-R)
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para><command>svn info</command> mostrará toda la
            información útil que tiene para los elementos en su
            copia local de trabajo. Mostrará información sobre
            ficheros:</para>

          <screen>
$ svn info foo.c
Path: foo.c
Name: foo.c
URL: http://svn.red-bean.com/repos/test/foo.c
Revision: 4417
Node Kind: file
Schedule: normal
Last Changed Author: sally
Last Changed Rev: 20
Last Changed Date: 2003-01-13 16:43:13 -0600 (Mon, 13 Jan 2003)
Text Last Updated: 2003-01-16 21:18:16 -0600 (Thu, 16 Jan 2003)
Properties Last Updated: 2003-01-13 21:50:19 -0600 (Mon, 13 Jan 2003)
Checksum: /3L38YwzhT93BWvgpdF6Zw==
</screen>

          <para>Y también mostrará información sobre directorios:</para>

          <screen>
$ svn info vendors
Path: trunk
URL: http://svn.red-bean.com/repos/test/vendors
Revision: 19
Node Kind: directory
Schedule: normal
Last Changed Author: harry
Last Changed Rev: 19
Last Changed Date: 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003)
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-list">
        <refnamediv>
          <refname>svn list</refname>
          <refpurpose>Lista las entradas de directorio en el repositorio.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn list [TARGET...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Lista cada fichero
            <replaceable>OBJETIVO</replaceable> y los contenidos de
            cada directorio <replaceable>OBJETIVO</replaceable>
            tal y como existen en el repositorio. Si
            <replaceable>OBJETIVO</replaceable> es una ruta de una
            copia de trabajo local, se usará la URL de repositorio
            correspondiente.</para>

          <para>El <replaceable>OBJETIVO</replaceable> por defecto es
            <quote><filename>.</filename></quote>, lo que equivale
            a la URL del repositorio correspondiente al directorio
            actual en la copia local de trabajo.</para>

          <para>Con <option>--verbose</option>, se muestran los
            siguientes campos del estado de los elementos:</para>

          <itemizedlist>
            <listitem><para>Número de revisión del último envío
              de cambios al repositorio</para></listitem>
            <listitem><para>Autor del último
              envío de cambios al repositorio</para></listitem>
            <listitem><para>Tamaño  (en bytes)</para></listitem>
            <listitem><para>Fecha y marca de tiempo del último
              envío de cambios al repositorio</para></listitem>
          </itemizedlist>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>ls</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--verbose (-v)
--recursive (-R)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para><command>svn list</command> es útil sobre todo
            cuando desea ver qué ficheros contiene un repositorio
            sin tener que descargar una copia local de trabajo del
            mismo:</para>

          <screen>
$ svn list http://svn.red-bean.com/repos/test/support
README.txt
INSTALL
examples/
&hellip;
</screen>

          <para>Al igual que el comando UNIX <command>ls</command>,
            puede pasar el parámetro <option>--verbose</option>
            para obtener información adicional:</para>

          <screen>
$ svn list --verbose file:///tmp/repos
     16 sally         28361 Jan 16 23:18 README.txt
     27 sally             0 Jan 18 15:27 INSTALL
     24 harry               Jan 18 11:27 examples/
</screen>

          <para>Para más detalles, vea <xref
              linkend="svn-ch-3-sect-5.4"/>.</para>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-log">
        <refnamediv>
          <refname>svn log</refname>
          <refpurpose>Muestra los mensajes de los informes de
            cambios.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn log [PATH]</programlisting>
          <programlisting>svn log URL [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>El objetivo por defecto es la ruta de su directorio
            actual. Si no proporciona parámetro alguno, <command>svn
            log</command> muestra los mensajes de los informes de
            cambios de todos los ficheros y directorios dentro del
            (e incluyendo) directorio actual de trabajo en su copia
            local. Puede refinar los resultados especificando una
            ruta, una o más revisiones, o cualquier combinación de
            ambas. El rango de revisión por defecto para una ruta
            local es <literal>BASE:1</literal>.</para>

          <para>Si especifica una URL sola, entonces imprime los
            mensajes de los informes de cambios para todo lo
            que contenga esa URL. Si añade rutas tras la URL,
            sólo los mensajes de esas rutas bajo esa URL serán
            mostrados. El rango de revisión por defecto de una URL
            es <literal>HEAD:1</literal>.</para>

          <para>Con <option>--verbose</option>, <command>svn
            log</command> también mostrará todas las
            rutas afectadas por cada mensaje de informe de
            cambios. Con <option>--quiet</option>, <command>svn
            log</command> no mostrará el cuerpo del mensaje
            del informe de cambios (esto es compatible con
            <option>--verbose</option>).</para>

          <para>Cada mensaje de informe de cambios es impreso una
            única vez, incluso si solicitó de forma explícita
            más de una ruta afectadas por la misma revisión. Por
            defecto se sigue la historia de copiado de los ficheros.
            Use <option>--stop-on-copy</option> para desactivar este
            comportamiento, lo cual puede ser útil para encontrar
            puntos de creación de ramas.</para>

        </refsect1>
        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--quiet (-q)
--verbose (-v)
--targets FILENAME
--stop-on-copy
--incremental
--xml
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Puede ver los mensajes de informes de cambios para
            todas las rutas que fueron modificadas en su copia
            local ejecutando <command>svn log</command><!-- TODO
            esta traducción es muy rara, no entiendo la versión en
            inglés -->:</para>

          <screen>
$ svn log
------------------------------------------------------------------------
r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line

Tweak.
------------------------------------------------------------------------
r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines
&hellip;
</screen>

          <para>Examinar todos los mensajes de informes de cambios
            para un fichero particular de su copia local de
            trabajo:</para>

          <screen>
$ svn log foo.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
&hellip;
</screen>

          <para>Si no tiene a mano una copia local, puede obtener
            los mensajes de informes de cambios a partir de una
            URL:</para>

          <screen>
$ svn log http://svn.red-bean.com/repos/test/foo.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
&hellip;
</screen>

          <para>Si quiere usar varias rutas distintas bajo una
            misma URL, puede usar la sintaxis <literal>URL
            [PATH...]</literal>.</para>

          <screen>
$ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line

Added new file bar.c
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
&hellip;
</screen>

          <para>Eso es igual que poner de forma explícita ambas URLs
            en la línea de comando:</para>

          <screen>
$ svn log http://svn.red-bean.com/repos/test/foo.c \
          http://svn.red-bean.com/repos/test/bar.c
&hellip;
</screen>

          <para>Cuando concatene los resultados de múltiples llamadas
            al comando log, quizás desee usar el parámetro
            <option>--incremental</option>. <command>svn
            log</command> normalmente imprime una línea de guiones
            al comienzo de cada mensaje de informe de cambios, entre
            mensajes, y después el último. Si ejecuta <command>svn
            log</command> sobre un rango de dos revisiones, obtendría
            esto:</para>
          <screen>
$ svn log -r 14:15
------------------------------------------------------------------------
r14 | ... 

------------------------------------------------------------------------
r15 | ... 

------------------------------------------------------------------------
</screen>

          <para>No obstante, si quisiese recoger dos mensajes de
            informes de cambios no secuenciales en un mismo fichero,
            podría hacer algo como esto:</para>

          <screen>
$ svn log -r 14 &gt; mylog
$ svn log -r 19 &gt;&gt; mylog
$ svn log -r 27 &gt;&gt; mylog
$ cat mylog
------------------------------------------------------------------------
r14 | ... 

------------------------------------------------------------------------
------------------------------------------------------------------------
r19 | ... 

------------------------------------------------------------------------
------------------------------------------------------------------------
r27 | ... 

------------------------------------------------------------------------
</screen>

          <para>Puede evitar la duplicidad de líneas de guiones en la
            salida usando el parámetro incremental:</para>


          <screen>
$ svn log --incremental -r 14 &gt; mylog
$ svn log --incremental -r 19 &gt;&gt; mylog
$ svn log --incremental -r 27 &gt;&gt; mylog
$ cat mylog
------------------------------------------------------------------------
r14 | ... 

------------------------------------------------------------------------
r19 | ... 

------------------------------------------------------------------------
r27 | ... 
</screen>

          <para>El parámetro <option>--incremental</option>
            proporciona un control de la salida similar cuando usa
            el parámetro <option>--xml</option>.</para>



          <tip>
            <para>Si ejecuta <command>svn log</command> sobre una
              ruta específica e indica una revisión específica pero
              no obtiene ninguna salida en absoluto</para>

            <screen>
$ svn log -r 20 http://svn.red-bean.com/untouched.txt
------------------------------------------------------------------------
</screen>

            <para>Eso sólo significa que esa ruta no fue modificada
              en esa revisión. Si ejecuta estos comandos <!-- TODO
              de nuevo, log == ejecutar comandos de log?-->desde
              la raíz del repositorio, o sabe qué fichero cambió
              en aquella revisión, puede especificarlo de forma
              explícita:</para>
            
            <screen>
$ svn log -r 20 touched.txt 
------------------------------------------------------------------------
r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line

Made a change.
------------------------------------------------------------------------
</screen>
          </tip>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-merge">
        <refnamediv>
          <refname>svn merge</refname>
          <refpurpose>Aplica las diferencias entre dos fuentes a
            una ruta de su copia local de trabajo.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn merge sourceURL1[@N] sourceURL2[@M] [WCPATH]</programlisting>
          <programlisting>svn merge -r N:M SOURCE [PATH]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>En su primera forma, las URLs fuente son acotadas
            a las revisiones <replaceable>N</replaceable> y
            <replaceable>M</replaceable>.  Éstas son las dos fuentes
            que serán comparadas. Por defecto las revisiones son
            <literal>HEAD</literal> si se omiten.</para>

          <para>En su segunda forma,
            <replaceable>SOURCE</replaceable> puede ser una
            URL o un elemento de su copia local de trabajo,
            en cuyo caso se usará su URL correspondiente. Esta
            URL, en sus revisiones <replaceable>N</replaceable>
            y <replaceable>M</replaceable>, define las dos fuentes
            que serán comparadas.</para>

          <para><replaceable>WCPATH</replaceable> es la ruta de la copia
            local de trabajo que recibirá los cambios. Si se omite
            <replaceable>WCPATH</replaceable>, se asumirá un valor
            por defecto de <quote><filename>.</filename></quote>,
            a no ser que que las fuentes tengan nombres base
            idénticos que concuerden con un fichero dentro de
            <quote><filename>.</filename></quote>: en cuyo caso,
            las diferencias serán aplicadas a aquel fichero.</para>

          <para>A diferencia de <command>svn diff</command>, el
            comando de fusionado toma en consideración la scendencia
            de los ficheros cuando realiza sus operaciones. Esto
            es muy importante cuando está fusionando cambios
            provenientes de una rama en otra y ha renombrado un
            fichero en una, pero no en la otra.
          </para>

        </refsect1>
        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En copia local</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si trabaja con URLs</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--non-recursive (-N)
--quiet (-q)
--force
--dry-run
--diff3-cmd CMD
--ignore-ancestry
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Fusionar una rama de nuevo en el tronco (asumiendo
            que tiene una copia local del tronco, y que la rama fue
            creada en la revisión 250):</para>

          <screen>
$ svn merge -r 250:HEAD http://svn.red-bean.com/repos/branches/my-branch
U  myproj/tiny.txt
U  myproj/thhgttg.txt
U  myproj/win.txt
U  myproj/flo.txt
</screen>

          <para>Si creó una rama en la revisión 23, y quiere
            fusionar los cambios del tronco en ella, puede hacer
            lo siguiente desde su copia local de trabajo de la
            rama:</para>

          <screen>
$ svn merge -r 23:30 file:///tmp/repos/trunk/vendors
U  myproj/thhgttg.txt
&hellip;
</screen>
          
        <para>Para fusionar cambios en un único fichero:</para>

        <screen>
$ cd myproj
$ svn merge -r 30:31 thhgttg.txt 
U  thhgttg.txt
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-mkdir">
        <refnamediv>
          <refname>svn mkdir</refname>
          <refpurpose>Crea un nuevo directorio bajo control de versiones.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn mkdir PATH...</programlisting>
          <programlisting>svn mkdir URL...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Crea un directorio con el nombre proporcionado por
            el componente final de <replaceable>PATH</replaceable>
            o URL. Un directorio especificado por la ruta de una
            copia local de trabajo es programado para ser añadido en
            la copia local. Un directorio especificado por una URL es
            creado en el repositorio de manera inmediata. Múltiples
            directorios con URLs son creados de forma atómica.
            En ambos casos, todos los directorios intermedios deben
            existir previamente.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En la copia local de trabajo, en el repositorio si
            se opera sobre una URL</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo cuando opera sobre una URL</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--quiet (-q)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--editor-cmd EDITOR
--encoding ENC
--force-log
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Crear un directorio en su copia local de trabajo:</para>

          <screen>
$ svn mkdir newdir
A         newdir
</screen>

          <para>Creación de un directorio en el repositorio (la
            creación es inmediata, por lo que se requiere un mensaje
            de informe de cambios):</para>

          <screen>
$ svn mkdir -m "Making a new dir." http://svn.red-bean.com/repos/newdir

Committed revision 26.
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-move">
        <refnamediv>
          <refname>svn move</refname>
          <refpurpose>Mover un fichero o directorio.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn move SRC DST</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Este comando mueve un fichero o directorio en su
            copia local de trabajo o en el repositorio.</para>

          <tip>
            <para>Este comando es equivalente a un <command>svn
              copy</command> seguido de un <command>svn
              delete</command>.</para>
          </tip>

          <note>
            <para>Subversion no soporta operaciones de movimiento
              entre copias locales y URLs. Adicionalmente,
              sólo puede mover ficheros dentro de un único
              repositorio&mdash;Subversion no soporta movimientos
              entre repositorios.</para>
          </note>

          <variablelist>

            <varlistentry>
              <term>WC  -&gt; WC</term>
              <listitem>
                <para>Mueve y programa un fichero o directorio
                  para que sea añadido (con historia).</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>URL -&gt; URL</term>
              <listitem>
                <para>Renombramiento que se realiza por completo
                  en el lado del servidor.</para>
              </listitem>
            </varlistentry>

          </variablelist>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>mv, rename, ren</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Copia local de trabajo, repositorio si opera sobre
            una URL</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si opera sobre una URL</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--revision (-r) REV
--quiet (-q)
--force
--username USER
--password PASS
--no-auth-cache
--non-interactive
--editor-cmd EDITOR
--encoding ENC
--force-log
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Mover un fichero en su copia local de trabajo:</para>

          <screen>
$ svn move foo.c bar.c
A         bar.c
D         foo.c
</screen>

          <para>Mover un fichero en el repositorio (el cambio es
            inmediato, por lo que se requiere un mensaje de informe
            de cambios):</para>

          <screen>
$ svn move -m "Move a file" http://svn.red-bean.com/repos/foo.c \
                            http://svn.red-bean.com/repos/bar.c

Committed revision 27.
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-propdel">
        <refnamediv>
          <refname>svn propdel</refname>
          <refpurpose>Borrar la propiedad de un elemento.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn propdel PROPNAME [PATH...]</programlisting>
          <programlisting>svn propdel PROPNAME --revprop -r REV [URL]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Esto elimina las propiedades de ficheros,
            directorios, or evisiones.  La primera forma elimina
            propiedades versionadas en su copia local de trabajo,
            mientras que la segunda elimina propiedades remotas no
            versionadas en una revisión de repositorio.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>pdel, pd</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Copia local, repositorio si opera sobre
            una URL</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si opera sobre una URL</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--quiet (-q)
--recursive (-R)
--revision (-r) REV
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Borrar la propiedad de un fichero de su copia local
            de trabajo</para>

          <screen>
$ svn propdel svn:mime-type  some-script
property 'svn:mime-type' deleted from 'some-script'.
</screen>

          <para>Borrar la propiedad de una revisión:</para>

          <screen>
$ svn propdel --revprop -r 26 release-date 
property 'release-date' deleted from repository revision '26'
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-propedit">
        <refnamediv>
          <refname>svn propedit</refname>
          <refpurpose>Editar la propiedad de uno o más elementos
            bajo control de versiones..</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn propedit PROPNAME PATH...</programlisting>
          <programlisting>svn propedit PROPNAME --revprop -r REV [URL]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Edite una o más propiedades usando su editor
            favorito. La primera forma permite editar propiedades
            versionadas en su copia local de trabajo, mientras que
            la segunda edita propiedades remotas no versionadas en
            una revisión de repositorio.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>pedit, pe</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Copia local, repositorio si opera sobre
            una URL</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si opera sobre una URL</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--encoding ENC
--editor-cmd EDITOR
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para><command>svn propedit</command> facilita la
            modificación de propiedades que tienen múltiples
            valores:</para>

          <screen>
$ svn propedit svn:keywords  foo.c 
    &lt;svn will launch your favorite editor here, with a buffer open
    containing the current contents of the svn:keywords property.  You
    can add multiple values to a property easily here by entering one
    value per line.&gt;
Set new value for property 'svn:keywords' on 'foo.c'
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-propget">
        <refnamediv>
          <refname>svn propget</refname>
          <refpurpose>Imprime el valor de una propiedad.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn propget PROPNAME [PATH...]</programlisting>
          <programlisting>svn propget PROPNAME --revprop -r REV [URL]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Imprime el valor de propiedades de ficheros,
            directorios o revisiones.  La primera forma imprime la
            propiedad versionada de un elemento o elementos en su
            copia local de trabajo, mientras que la segunda imprime
            propiedades remotas no versionadas en una revisión
            de repositorio. Vea <xref linkend="svn-ch-7-sect-2"/>
            para más información sobre propiedades.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>pget, pg</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Copia local, repositorio si opera sobre
            una URL</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si opera sobre una URL</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--recursive (-R)
--revision (-r) REV
--revprop
--strict
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Examinar la propiedad de un fichero en su copia
            local de trabajo:</para>
          
          <screen>
$ svn propget svn:keywords foo.c
Author
Date
Rev
</screen>

          <para>Lo mismo sirve para una propiedad de revisión:</para>

          <screen>
$ svn propget svn:log --revprop -r 20 
Began journal.
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-proplist">
        <refnamediv>
          <refname>svn proplist</refname>
          <refpurpose>Mostrar todas las propiedades.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn proplist [PATH...]</programlisting>
          <programlisting>svn proplist --revprop -r REV [URL]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Muestra todas las propiedades de ficheros,
            directorios o revisiones.  La primera forma muestra las
            propiedades versionadas de su copia local de trabajo,
            mientras que la segunda muetras las propiedades remotas
            no versionadas en una revisión de repositorio.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>plist, pl</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Copia local, repositorio si opera sobre
            una URL</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si opera sobre una URL</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--verbose (-v)
--recursive (-R)
--revision (-r) REV
--quiet (-q)
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>

          <para>Puede usar proplist para ver las propiedades
            asociadas a un elemento en su copia local de
            trabajo:</para>

          <screen>
$ svn proplist foo.c
Properties on 'foo.c':
  svn:mime-type
  svn:keywords
  owner
</screen>

          <para>Pero con el parámetro <option>--verbose</option>, svn
            proplist es extremadamente útil ya que también muestra
            los valores de las propiedades:</para>

          <screen>
$ svn proplist --verbose foo.c
Properties on 'foo.c':
  svn:mime-type : text/plain
  svn:keywords : Author Date Rev
  owner : sally
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-propset">
        <refnamediv>
          <refname>svn propset</refname>
          <refpurpose>Asocia PROPNAME a PROPVAL en ficheros,
            directorios, o revisiones.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn propset PROPNAME [PROPVAL | -F VALFILE] PATH...</programlisting>
          <programlisting>svn propset PROPNAME --revprop -r REV [PROPVAL | -F VALFILE] [URL]</programlisting>
        </refsect1>

        <refsect1>
          <title>Descripción</title>

          <para>Asocia <replaceable>PROPNAME</replaceable> a
            <replaceable>PROPVAL</replaceable> en ficheros,
            directorios o revisiones.  La primera forma crea un
            cambio versionado de una propiedad en su copia local de
            trabajo, la segunda forma crea un cambio no versionado
            de una propiedad en una revisión de repositorio.</para>

          <tip>
            <para>Subversion tiene un número de propiedades
              <quote>especiales</quote> que afectan su
              comportamiento. Vea <xref linkend="svn-ch-7-sect-2.3"/>
              para más información sobre estas propiedades.</para>
          </tip>

        </refsect1>
        <refsect1>
          <title>Nombres alternativos</title>
          <para>pset, ps</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Copia local, repositorio si opera sobre
            una URL</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si opera sobre una URL</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--file (-F) FILE
--quiet (-q)
--revision (-r) REV
--targets FILENAME
--recursive (-R)
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--encoding ENC
--force
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Establecer el tipo mime de un fichero:</para>

          <screen>
$ svn propset svn:mime-type image/jpeg foo.jpg 
property 'svn:mime-type' set on 'foo.jpg'
</screen>

          <para>En sistemas UNIX, si quiere que un fichero tenga
            activado el permiso de ejecución:</para>

          <screen>
$ svn propset svn:executable ON somescript
property 'svn:executable' set on 'somescript'
</screen>

          <para>Quizás tenga una política interna de creación de
            propiedades para beneficio de sus colaboradores:</para>

          <screen>
$ svn propset owner sally foo.c
property 'owner' set on 'foo.c'
</screen>

          <para>Si cometió un error en un mensaje de informe de
            cambios de una revisión particular y desea corregirlo,
            use <option>--revprop</option> y cambie svn:log para
            que refleje el nuevo mensaje:</para>

          <screen>
$ svn propset --revprop -r 25 svn:log "Journaled about trip to New York."
property 'svn:log' set on repository revision '25'
</screen>

          <para>O, si no tiene una copia de trabajo local, puede
            proporcionar una URL.</para>
          
          <screen>
$ svn propset --revprop -r 26 svn:log "Document nap." http://svn.red-bean.com/repos
property 'svn:log' set on repository revision '25'
</screen>

          <para>Por último, puede decirle a propset que obtenga
            los datos de entrada de un fichero. Puede usar esto
            incluso para modificar el contenido de una propiedad a
            algo binario:</para>

          <screen>
$ svn propset owner-pic -F sally.jpg moo.c 
property 'owner-pic' set on 'moo.c'
</screen>

          <note>
            <para>Por defecto, no puede modificar propiedades de
              revisiones en un repositorio de Subversion. El
              administrador del repositorio debe activar de
              forma explícita la modificación de propiedades
              de revisión creando un gancho llamado
              <literal>pre-revprop-change</literal>. Vea <xref
              linkend="svn-ch-5-sect-2.1"/> para más información
              sobre scripts de enganche.</para>
          </note>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-resolved">
        <refnamediv>
          <refname>svn resolved</refname>
          <refpurpose>Resuelve el estado <quote>conflictivo</quote>
            en ficheros o directorios de la copia de trabajo
            local.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn resolved PATH...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Resuelve el estado <quote>conflictivo</quote> en
            ficheros o directorios de la copia de trabajo local. Esta
            rutina no resuelve marcas de conflicto a nivel semántico;
            meramente elimina los ficheros artefacto relacionados
            con el conflicto y permite que PATH pueda ser enviado
            de nuevo al repositorio; es decir, le dice a Subversion
            que los conflictos han sido <quote>resueltos</quote>.
            Vea <xref linkend="svn-ch-3-sect-4.4"/> para una visión
            pormenorizada sobre la resolución de conflictos.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En copia local</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>No</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--targets FILENAME
--recursive (-R)
--quiet (-q)
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>
          
          <para>Si obtiene un conflicto tras una actualización,
            su copia de trabajo local generará <!-- TODO slang
            español para sprout? -->tres nuevos ficheros:</para>

          <screen>
$ svn update
C  foo.c
Updated to revision 31.
$ ls
foo.c
foo.c.mine
foo.c.r30
foo.c.r31
</screen>

          <para>Una vez haya resuelto el conflicto y
            <filename>foo.c</filename> esté listo para ser enviado
            al repositorio, ejecute <command>svn resolved</command>
            para indicarle a su copia de trabajo local que se ha
            encargado de todo.</para>

          <warning>
            <para>Usted <emphasis>puede</emphasis> simplemente
              eliminar los ficheros del conflicto y enviar los
              cambios, pero <command>svn resolved</command> corrige
              algunos datos de gestión del área administrativa
              de su copia local aparte de eliminar los ficheros
              del conflicto, así que le recomendamos que use este
              comando.</para>
          </warning>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-revert">
        <refnamediv>
          <refname>svn revert</refname>
          <refpurpose>Deshacer todas las modificaciones locales.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn revert PATH...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Revierte cualquier cambio local sobre un fichero o
            directorio y resuelve cualquier estado de conflicto.
            <command>svn revert</command> no solamente revertirá
            el contenido de un elemento en su copia local de
            trabajo, sino también cualquier cambio de propiedades.
            Finalmente, puede usarlo para deshacer cualquier
            operación anteriormente programada (ej: ficheros
            programados para ser añadidos o borrados pueden ser
            <quote>unscheduled</quote>).</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En copia local</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>No</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--targets FILENAME
--recursive (-R)
--quiet (-q)
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Descartar cambios de un fichero:</para>

          <screen>
$ svn revert foo.c
Reverted foo.c
</screen>

          <para>Si quiere revertir todo un directorio de ficheros,
            use el parámetro <option>--recursive</option>
            flag:</para>

          <screen>
$ svn revert --recursive .
Reverted newdir/afile
Reverted foo.c
Reverted bar.txt
</screen>

          <para>Por último, puede deshacer cualquier operación
            programada:</para>

          <screen>
$ svn add mistake.txt whoops
A         mistake.txt
A         whoops
A         whoops/oopsie.c

$ svn revert mistake.txt whoops
Reverted mistake.txt
Reverted whoops

$ svn status
?      mistake.txt
?      whoops
</screen>

          <note>
            <para>Si no proporciona objetivos a <command>svn
              revert</command>, no hará nada&mdash;para protegerle de
              perder accidentalmente los cambios de su copia local
              de trabajo, <command>svn revert</command> requiere
              que proporcione al menos un objetivo.</para>
          </note>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-status">
        <refnamediv>
          <refname>svn status</refname>
          <refpurpose>Imprime el estado de los ficheros y directorios
            de su copia local de trabjo.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn status [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Imprime el estado de los ficheros y directorios de
            su copia local de trabajo. Sin argumentos, sólo
            imprime los elementos que han sido modificados
            localmente (sin acceder al repositorio). Con
            <option>--show-updates</option>, añade información sobre
            la revisión de trabajo y des-sincronización <!-- TODO
            out-of-date != dessincronizar? --> con el servidor. Con
            <option>--verbose</option>, imprime toda la información
            de revisión de cada elemento.</para>

          <para>Las primeras cinco columnas de la salida miden cada
            una un carácter, y cada columna proporciona información
            sobre diferentes aspectos de cada elemento de su copia
            local de trabajo.</para>
          
          <para>La primera columna indica si un elemento fue añadido,
            borrado, o modificado de algún modo.</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>Sin modificaciones.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'A'</term>
              <listitem>
                <para>El elemento está programado para ser añadido.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'D'</term>
              <listitem>
                <para>El elemento está programado para ser borrado.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'M'</term>
              <listitem>
                <para>El elemento ha sido modificado.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'C'</term>
              <listitem>
                <para>El elemento está en conflicto tras recibir
                  actualizaciones del repositorio.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'X'</term>
              <listitem>
                <para>El elemento está relacionado con una definición
                  externa.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'I'</term>
              <listitem>
                <para>El elemento está siendo ignorado (ej: con
                  la propiedad svn:ignore).</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'?'</term>
              <listitem>
                <para>El elemento no está bajo control de versiones.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'!'</term>
              <listitem>
                <para>Falta el elemento (ej: lo ha movido o borado
                  sin usar <command>svn</command>).  Esto también
                  indica que un directorio es incompleto (la
                  obtención del servidor o actualización del mismo
                  fue interrumpida). </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'~'</term>
              <listitem>
                <para>El elemento está versionado como un directorio,
                  pero ha sido reemplazado por un fichero, o vice
                  versa.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>La segunda columna indica el estado de las
            propiedades del fichero o directorio.</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>Sin modificaciones.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'M'</term>
              <listitem>
                <para>Las propiedades de este elemento han sido
                  modificadas.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'C'</term>
              <listitem>
                <para>Las propiedades de este elemento están en
                  conflicto con la actualización de propiedades
                  recibida del repositorio.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>La tercera columna sólo se rellena si la copia local
            de trabajo está bloqueada.</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>Elemento no bloqueado.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>'L'</term>
              <listitem>
                <para>Elemento bloqueado.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>La cuarta columna sólo se rellena si el elemento está
            programado para ser añadido con historia.</para>
          
          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>No se programó historia para el envío.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>'+'</term>
              <listitem>
                <para>Historia programada para el envío.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>La quinta columna sólo se rellena si la ubicación
            del elemento no está relacionada con su padre (vea <xref
            linkend="svn-ch-4-sect-5"/>).</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>El elemento es hijo de su directorio padre.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>'S'</term>
              <listitem>
                <para>El elemento es de otra ubicación.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>La información de desfase <!-- TODO out-of-date? -->
            aparece en la octava columna (sólo si pasa el parámetro
            <option>--show-updates</option>).</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>El elemento en su copia loca de trabajo está
                  actualizado.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>'*'</term>
              <listitem>
                <para>Existe una nueva versión del elemento en el
                  servidor.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>Los campos restantes tienen una anchura variable
            y están delimitados por espacios. La revisión de
            trabajo es el siguiente campo si se pasan los
            parámetros <option>--show-updates</option> o
            <option>--verbose</option>.</para>
          
          <para>Si pasa el parámetro <option>--verbose</option>,
            se muestra a continuación la última revisión enviada al
            repositorio junto con su autor.</para>
          
          <para>La ruta de la copia local de trabajo es siempre
            el último campo, por lo que puede incluir
            espacios.</para>

        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>stat, st</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>Ninguno</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Sólo si usa <option>--show-updates</option></para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--show-updates (-u)
--verbose (-v)
--non-recursive (-N)
--quiet (-q)
--no-ignore
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Este es el modo más fácil para descubrir qué
            cambios ha realizado en su copia local de trabajo:</para>

          <screen>
$ svn status wc
 M     wc/bar.c
A  +   wc/qax.c
</screen>

          <para>Si quiere averiguar qué ficheros de su copia local
            de trabajo están desfasados, pase el
            parámetro <option>--show-updates</option>
            (esto <emphasis>no</emphasis> realizará cambio
            alguno en su copia local). Aquí puede ver que
            <filename>wc/foo.c</filename> ha cambiado en el
            repositorio desde la última vez que actualizamos nuestra
            copia local de trabajo:</para>

          <screen>
$ svn status --show-updates wc
 M           965    wc/bar.c
       *     965    wc/foo.c
A  +         965    wc/qax.c
Status against revision:    981
</screen>

          <note>
            <para><option>--show-updates</option>
            <emphasis>solamente</emphasis> muestra un asterisco
            junto a los elementos desfasados (es decir, elementos
            que serán actualizados desde el repositorio en
            cuanto ejecute <command>svn update</command>).
            <option>--show-updates</option> <emphasis>no</emphasis>
            hace que la lista de estado refleje la versión que hay
            del elemento en el repositorio.</para>
          </note>

          <para>Y finalmente, la mayor cantidad posible de
            información que puede obtener del subcomando de
            estado:</para>

          <screen>
$ svn status --show-updates --verbose wc
 M           965       938 sally        wc/bar.c
       *     965       922 harry        wc/foo.c
A  +         965       687 harry        wc/qax.c
             965       687 harry        wc/zig.c
Head revision:   981
</screen>

          <para>Para ver muchos más ejemplos de <command>svn
            status</command>, vea <xref
            linkend="svn-ch-3-sect-4.3.1"/>.</para>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-switch">
        <refnamediv>
          <refname>svn switch</refname>
          <refpurpose>Actualizar una copia local de trabajo a una
            URL diferente.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn switch URL [PATH]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Este comando actualiza su copia local de trabajo a
            una nueva URL&mdash;habitualmente una URL que comparte
            un ancestro común con su copia de trabajo local, aunque
            no necesariamente.  Este es el modo de Subversion de
            mover su copia de trabajo local a una nueva rama. Vea
            <xref linkend="svn-ch-4-sect-5"/> para un vistazo en
            profundidad sobre estas operaciones.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>sw</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En copia local</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--non-recursive (-N)
--quiet (-q)
--diff3-cmd CMD
--relocate
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>

          <para>Si está actualmente dentro del directorio
            <filename>vendors</filename> el cual fue ramificado a
            <filename>vendors-with-fix</filename> y desea cambiar
            su copia local de trabajo a esta rama:</para>

          <screen>
$ svn switch http://svn.red-bean.com/repos/branches/vendors-with-fix .
U  myproj/foo.txt
U  myproj/bar.txt
U  myproj/baz.c
U  myproj/qux.c
Updated to revision 31.
</screen>

          <para>Y para cambiar de vuelta, simplemente proporcione
            la URL de la ubicación del repositorio del cual
            originalmente obtuvo su copia local de trabajo:</para>

          <screen>
$ svn switch http://svn.red-bean.com/repos/trunk/vendors .
U  myproj/foo.txt
U  myproj/bar.txt
U  myproj/baz.c
U  myproj/qux.c
Updated to revision 31.
</screen>

          <tip>
            <para>Puede cambiar parte de su copia local de trabajo
              a una rama si no desea cambiar toda su copia local
              de trabajo.</para>
          </tip>

          <para>Si el lugar de su repositorio cambia y tiene una
            copia local de trabajo existente que querría
            continuar usando, puede usar <command>svn switch
            --relocate</command> para cambiar la URL de su copia
            local a otra:</para>

          <screen>
$ svn checkout file:///tmp/repos test
A  test/a
A  test/b
&hellip;

$ mv repos newlocation
$ cd test/

$ svn update
svn: Unable to open an ra_local session to URL
svn: Unable to open repository 'file:///tmp/repos'

$ svn switch --relocate file:///tmp/repos file:///tmp/newlocation .
$ svn update
At revision 3.
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-1.2-re-update">
        <refnamediv>
          <refname>svn update</refname>
          <refpurpose>Actualiza su copia local de trabajo.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svn update [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para><command>svn update</command> trae cambios del
            repositorio a su copia local de trabajo. Si no se
            indica revisión alguna, actualizará su copia local de
            trabajo con la revisión <literal>HEAD</literal>.
            En caso contrario, sincronizará la copia
            local a la revisión indicada por el parámetro
            <option>--revision</option>.</para>

          <para>Por cada elemento actualizado se mostrará una
            línea con un caracter representativo de la acción
            tomada. Estos indicadores tienen el siguiente
            significado:</para>

          <variablelist>

            <varlistentry>
              <term>A</term>
              <listitem>
                <para>Añadido</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>D</term>
              <listitem>
                <para>Borrado</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>U</term>
              <listitem>
                <para>Actualizado</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>C</term>
              <listitem>
                <para>En conflicto</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>G</term>
              <listitem>
                <para>Fusionado</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>Un caracter en la primera columna significa una
            actualización del fichero, mientras que las
            actualizaciones de las propiedades se muestran en la
            segunda columna.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>up</para>
        </refsect1>

        <refsect1>
          <title>Cambios</title>
          <para>En copia local</para>
        </refsect1>

        <refsect1>
          <title>Accede al repositorio</title>
          <para>Si</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) REV
--non-recursive (-N)
--quiet (-q)
--diff3-cmd CMD
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Obtener cambios del repositorio que ocurrieron desde
            su última actualización:</para>

          <screen>
$ svn update
A  newdir/toggle.c
A  newdir/disclose.c
A  newdir/launch.c
D  newdir/README
Updated to revision 32.
</screen>

          <para>También puede actualizar su copia local de trabajo
            a una revisión anterior (Subversion no tiene el concepto
            de ficheros <quote>pegajosos</quote> como CVS; vea <xref
            linkend="svn-ap-a"/>):</para>

          <screen>
$ svn update -r30
A  newdir/README
D  newdir/toggle.c
D  newdir/disclose.c
D  newdir/launch.c
U  foo.c
Updated to revision 30.
</screen>

          <tip>
            <para>Si quiere examinar una versión antigua de un único
              fichero, quizás prefiera usar <command>svn
              cat</command>.</para>
          </tip>
          
        </refsect1>
      </refentry>
    </sect2>
    
  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 2 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-9-sect-2">
    <title><command>svnadmin</command></title>
    
    <para><command>svnadmin</command> es la herramienta
      administrativa para monitorizar y reparar su repositorio
      Subversion. Para más información detallada, vea <xref
      linkend="svn-ch-5-sect-3.1.2"/>.</para>

    <para>Dado que <command>svnadmin</command> trabaja vía acceso
      directo al repositorio (y por lo tanto sólo puede ser usado
      en la máquina que almacena el mismo), hace referencia al
      repositorio con una ruta, no una URL.</para>
      
    <sect2 id="svn-ch-9-sect-2.1">
      <title>Parámetros de <command>svnadmin</command></title>
      
      <variablelist>
        
        <varlistentry>
          <term><option>--bdb-log-keep</option></term>
          <listitem>
            <para>(Específico de la BD Berkeley) Desactivar el
              borrado automático de los ficheros de registro de la
              base de datos.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--bdb-txn-nosync</option></term>
          <listitem>
            <para>(Específico de la BD Berkeley) Desactivar fsync
              cuando se finalizan transacciones de la base de
              datos.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--bypass-hooks</option></term>
          <listitem>
            <para>Bypass the repository hook system.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--clean-logs</option></term>
          <listitem>
            <para>Removes unused Berkeley DB logs.</para>
          </listitem>
        </varlistentry>

        <!-- TODO config-dir? Is it really used? -->

        <varlistentry>
          <term><option>--force-uuid</option></term>
          <listitem>
            <para>By default, when loading data into repository that
            already contains revisions, <command>svnadmin</command>
            will ignore the <literal>UUID</literal> from the dump
            stream.  This switch will cause the repository's
            <literal>UUID</literal> to be set to the
            <literal>UUID</literal> from the stream.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--ignore-uuid</option></term>
          <listitem>
            <para>By default, when loading an empty repository,
            <command>svnadmin</command> will use the
            <literal>UUID</literal> from the dump stream.  This switch
            will cause that UUID to be ignored.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--incremental</option></term>
          <listitem>
            <para>Dump a revision only as a diff against the
              previous revision, instead of the usual
              fulltext.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--parent-dir
          <replaceable>DIR</replaceable></option></term>
          <listitem>
            <para>When loading a dumpfile, root paths at
            <replaceable>DIR</replaceable> instead of
            <replaceable>/</replaceable>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--revision</option> (<option>-r</option>)
          <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Specify a particular revision to operate
              on.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--quiet</option></term>
          <listitem>
            <para>Do not show normal progress&mdash;show only
            errors.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <!-- ================================================================= -->
    <sect2 id="svn-ch-9-sect-2.2">
      <title><command>svnadmin</command> Subcommands</title>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-create">
        <refnamediv>
          <refname>svnadmin create</refname>
          <refpurpose>Create a new, empty repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin create REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

            <para>Create a new, empty repository at the path provided.
              If the provided directory does not exist, it will be
              created for you.<footnote><para>Remember,
              <command>svnadmin</command> works only with local
              <emphasis>paths</emphasis>, not
              <emphasis>URL</emphasis>s.</para></footnote></para>
          </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--bdb-txn-nosync
--bdb-log-keep
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Creating a new repository is just this easy:</para>

          <screen>
$ svnadmin create /usr/local/svn/repos
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-deltify">
        <refnamediv>
          <refname>svnadmin deltify</refname>
          <refpurpose>Deltify changed paths in a revision range.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin deltify [-r LOWER[:UPPER]] REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para><command>svnadmin deltify</command> only exists in
            1.0.x due to historical reasons.  This command is
            deprecated and no longer needed.</para>

          <para>It dates from a time when Subversion offered
            administrators greater control over compression strategies
            in the repository.  This turned out to be a lot of
            complexity for <emphasis>very</emphasis> little gain, and
            this <quote>feature</quote> was deprecated.</para>

          <para></para>

            </refsect1>
        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--revision (-r)
--quiet
</screen>
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-dump">
        <refnamediv>
          <refname>svnadmin dump</refname>
          <refpurpose>Dump the contents of filesystem to stdout.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin dump REPOS_PATH [-r LOWER[:UPPER]] [--incremental]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Dump the contents of filesystem to stdout in a
            <quote>dumpfile</quote> portable format, sending feedback
            to stderr.  Dump revisions
            <replaceable>LOWER</replaceable> rev through
            <replaceable>UPPER</replaceable> rev.  If no revisions are
            given, dump all revision trees.  If only
            <replaceable>LOWER</replaceable> is given, dump that one
            revision tree.  See <xref linkend="svn-ch-5-sect-3.5"/>
            for a practical use. </para>
            </refsect1>
        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--revision (-r)
--incremental
--quiet
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>

          <para>Dump your whole repository:</para>

          <screen>
$ svnadmin dump /usr/local/svn/repos
SVN-fs-dump-format-version: 1
Revision-number: 0
* Dumped revision 0.
Prop-content-length: 56
Content-length: 56
&hellip;
</screen>

          <para>Incrementally dump a single transaction from your
            repository: </para>

          <screen>
$ svnadmin dump /usr/local/svn/repos -r 21 --incremental 
* Dumped revision 21.
SVN-fs-dump-format-version: 1
Revision-number: 21
Prop-content-length: 101
Content-length: 101
&hellip;
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-help">
        <refnamediv>
          <refname>svnadmin help</refname>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin help [SUBCOMMAND...]</programlisting>
        </refsect1>

        <refsect1>
          <title>Descripción</title>

          <para>This subcommand is useful when you're trapped on a
            desert island with neither a net connection nor a copy of
            this book.</para>

        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>?, h</para>
        </refsect1>

      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-hotcopy">
        <refnamediv>
          <refname>svnadmin hotcopy</refname>
          <refpurpose>Make a hot copy of a repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin hotcopy OLD_REPOS_PATH NEW_REPOS_PATH</programlisting>
        </refsect1>

        <refsect1>
          <title>Descripción</title>

          <para>This subcommand makes a full <quote>hot</quote> backup
          of your repository, including all hooks, configuration
          files, and, of course, database files.  If you pass the
          <literal>--clean-logs</literal> switch,
          <command>svnadmin</command> will perform a hotcopy of your
          repository, and then remove unused Berkeley DB logs from the
          original repository.  You can run this command at any time and make
          a safe copy of the repository, regardless of whether other processes
          are using the repository.</para>

        </refsect1>

        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--clean-logs
</screen>
        </refsect1>

      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-list-dblogs">
        <refnamediv>
          <refname>svnadmin list-dblogs</refname>
          <refpurpose>Ask Berkeley DB which log files exist for a given
          svn repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin list-dblogs REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

            <para>Berkeley DB creates logs of all changes to the
            repository, which allow it to recover in the face of
            catastrophe.  Unless you enable
            <literal>DB_LOGS_AUTOREMOVE</literal>, the log files
            accumulate, although most are no longer used and can be
            deleted to reclaim disk space. See <xref
            linkend="svn-ch-5-sect-3.3"/> for more
            information.</para>
          </refsect1>

      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-list-unused-dblogs">
        <refnamediv>
          <refname>svnadmin list-unused-dblogs</refname>
          <refpurpose>Ask Berkeley DB which log files can be safely
          deleted.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin list-unused-dblogs REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

            <para>Berkeley DB creates logs of all changes to the
            repository, which allow it to recover in the face of
            catastrophe.  Unless you enable
            <literal>DB_LOGS_AUTOREMOVE</literal>, the log files
            accumulate, although most are no longer used and can be
            deleted to reclaim disk space. See <xref
            linkend="svn-ch-5-sect-3.3"/> for more
            information.</para>
          </refsect1>

        <refsect1>
          <title>Ejemplos</title>
          
          <para>Remove all unused log files from a repository:</para>

        <screen>
$ svnadmin list-unused-dblogs /path/to/repos
/path/to/repos/log.0000000031
/path/to/repos/log.0000000032
/path/to/repos/log.0000000033

$ svnadmin list-unused-dblogs /path/to/repos | xargs rm
## disk space reclaimed!
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-load">
        <refnamediv>
          <refname>svnadmin load</refname> <refpurpose>Read a
            <quote>dumpfile-formatted</quote> stream from
            stdin.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin load REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Read a <quote>dumpfile</quote>-formatted stream from
            stdin, committing new revisions into the repository's
            filesystem.  Send progress feedback to stdout.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--quiet (-q)
--ignore-uuid
--force-uuid
--parent-dir
</screen>
        </refsect1>

        <refsect1>
          <title>Example</title>

          <para>This shows the beginning of loading a repository from
            a backup file (made, of course, with <command>svn
            dump</command>):</para>

          <screen>
$ svnadmin load /usr/local/svn/restored &lt; repos-backup
&lt;&lt;&lt; Started new txn, based on original revision 1
     * adding path : test ... done.
     * adding path : test/a ... done.
&hellip;
</screen>

          <para>Or if you want to load into a subdirectory:</para>

          <screen>
$ svnadmin load --parent-dir new/subdir/for/project /usr/local/svn/restored &lt; repos-backup
&lt;&lt;&lt; Started new txn, based on original revision 1
     * adding path : test ... done.
     * adding path : test/a ... done.
&hellip;
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-lstxns">
        <refnamediv>
          <refname>svnadmin lstxns</refname>
          <refpurpose>Print the names of all uncommitted transactions.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin lstxns REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the names of all uncommitted transactions.  See
            <xref linkend="svn-ch-5-sect-3.2"/> for information on how
            uncommitted transactions are created and what you should
            do with them.</para>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>List all outstanding transactions in a
            repository.</para>

          <screen>
$ svnadmin lstxns /usr/local/svn/repos/ 
1w
1x
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-recover">
        <refnamediv>
          <refname>svnadmin recover</refname>
          <refpurpose>Recover any lost state in a repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin recover REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Run this command if you get an error indicating that
            your repository needs to be recovered.</para>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>
          
          <para>Recover a hung repository:</para>

          <screen>
$ svnadmin recover /usr/local/svn/repos/ 
Acquiring exclusive lock on repository db.
Recovery is running, please stand by...
Recovery completed.
The latest repos revision is 34.
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->

      <refentry id="svn-ch-9-sect-2.2-re-rmtxns">
        <refnamediv>
          <refname>svnadmin rmtxns</refname>
          <refpurpose>Delete transactions from a repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin rmtxns REPOS_PATH TXN_NAME...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Delete outstanding transactions from a repository.
            This is covered in detail in <xref
            linkend="svn-ch-5-sect-3.2"/>.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--quiet (-q)
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Remove named transactions:</para>

          <screen>
$ svnadmin rmtxns /usr/local/svn/repos/ 1w 1x
</screen>

          <para>Fortunately, the output of svn lstxns works great as
            the input for rmtxns:</para>

          <screen>
$ svnadmin rmtxns /usr/local/svn/repos/  `svnadmin lstxns /usr/local/svn/repos/`
</screen>

          <para>Which will remove all uncommitted transactions from
            your repository.</para>

        </refsect1>
      </refentry>


      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-setlog">
        <refnamediv>
          <refname>svnadmin setlog</refname>
          <refpurpose>Set the log-message on a revision.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin setlog REPOS_PATH -r REVISION FILE</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Set the log-message on revision REVISION to the
            contents of FILE.</para>

          <para>This is similar to using <command>svn propset
            --revprop</command> to set the <literal>svn:log</literal> property
            on a revision, except that you can also use the option
            <option>--bypass-hooks</option> to avoid running any pre- or
            post-commit hooks, which is useful if the modification of
            revision properties has not been enabled in the pre-revprop-change
            hook.</para>

          <warning>
            <para>Revision properties are not under version control,
              so this command will permanently overwrite the previous
              log message.</para>
          </warning>

        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r) ARG
--bypass-hooks
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>Set the log message for revision 19 to the contents of
            the file <filename>msg</filename>:</para>

          <screen>
$ svnadmin setlog /usr/local/svn/repos/ -r 19 msg
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-2.2-re-verify">
        <refnamediv>
          <refname>svnadmin verify</refname>
          <refpurpose>Verify the data stored in the repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnadmin verify REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Run this command if you wish to verify the integrity
          of your repository.  This basically iterates through all
          revisions in the repository by internally dumping all
          revisions and discarding the output.</para>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>
          
          <para>Verify a hung repository:</para>

          <screen>
$ svnadmin verify /usr/local/svn/repos/ 
* Verified revision 1729.
</screen>

        </refsect1>
      </refentry>

    </sect2>

  </sect1>
  
  <!-- ================================================================= -->
  <!-- ======================== SECTION 3 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-9-sect-3">
    <title><command>svnlook</command></title>
    
    <para><command>svnlook</command> is a command-line utility for
      examining different aspects of a Subversion repository.  It
      does not make any changes to the repository&mdash;it's just
      used for <quote>peeking</quote>.
      <command>svnlook</command> is typically used by the
      repository hooks, but a repository administrator might find it
      useful for diagnostic purposes.</para>

    <para>Since <command>svnlook</command> works via direct repository access
      (and thus can only be used on the machine that holds the
      repository), it refers to the repository with a path, not a URL.</para>

    <para>If no revision or transaction is specified,
      <command>svnlook</command> defaults to the youngest (most
      recent) revision of the repository.</para>
    
    <sect2 id="svn-ch-9-sect-3.1">
      <title><command>svnlook</command> Switches</title>
      
      <para>Switches in <command>svnlook</command> are global, just
        like in <command>svn</command> and
        <command>svnadmin</command>; however, most switches only
        apply to one subcommand since the functionality of
        <command>svnlook</command> is (intentionally) limited in
        scope.</para>

      <variablelist>

        <varlistentry>
          <term><option>--no-diff-deleted</option></term>
          <listitem>
            <para>Prevents <command>svnlook</command> from printing
              differences for deleted files.  The default behavior
              when a file is deleted in a transaction/revision is
              to print the same differences that you would see if
              you had left the file but removed all the content.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--revision</option>
            (<option>-r</option>)</term>
          <listitem>
            <para>Specify a particular revision number that you wish
              to examine.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--transaction</option>
            (<option>-t</option>)</term>
          <listitem>
            <para>Specify a particular transaction ID that you wish to
              examine. </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--show-ids</option></term>
          <listitem>
            <para>Show the filesystem node revision IDs for each path in the filesystem
              tree.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <!-- ================================================================= -->
    <sect2 id="svn-ch-9-sect-3.2">
      <title><command>svnlook</command></title>

      <refentry id="svn-ch-9-sect-3.2-re-author">
        <refnamediv>
          <refname>svnlook author</refname>
          <refpurpose>Print the author.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook author REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the author of a revision or transaction in
            the repository.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--revision (-r)
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

        <para><command>svnlook author</command> is handy, but not
            very exciting:</para>

          <screen>
$ svnlook author -r 40 /usr/local/svn/repos 
sally
</screen>            

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-cat">
        <refnamediv>
          <refname>svnlook cat</refname>
          <refpurpose>Print the contents of a file.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook cat REPOS_PATH PATH_IN_REPOS</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the contents of a file.</para>

          </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>This shows the contents of a file in transaction
            <literal>ax8</literal>, located at 
            <filename>/trunk/README</filename>:</para>

          <screen>
$ svnlook cat -t ax8 /usr/local/svn/repos /trunk/README

               Subversion, a version control system.
               =====================================

$LastChangedDate: 2003-07-17 10:45:25 -0500 (Thu, 17 Jul 2003) $

Contents:

     I. A FEW POINTERS
    II. DOCUMENTATION
   III. PARTICIPATING IN THE SUBVERSION COMMUNITY
&hellip;
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-changed">
        <refnamediv>
          <refname>svnlook changed</refname>
          <refpurpose>Print the paths that were changed.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook changed REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the paths that were changed in a particular
            revision or transaction, as well as an <quote>svn
            update-style</quote> status letter in the first column:
            <literal>A</literal> for added, <literal>D</literal> for
            deleted, and <literal>U</literal> for updated
            (modified).</para>

          </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>This shows a list of all the changed files in
            revision 39 of a test repository:</para>

          <screen>
$ svnlook changed -r 39 /usr/local/svn/repos
A   trunk/vendors/deli/
A   trunk/vendors/deli/chips.txt
A   trunk/vendors/deli/sandwich.txt
A   trunk/vendors/deli/pickle.txt
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-date">
        <refnamediv>
          <refname>svnlook date</refname>
          <refpurpose>Print the datestamp.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook date REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the datestamp of a revision or transaction in
            a repository.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--transaction (-t)
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>
          
          <para>This shows the date of revision 40 of a test
            repository:</para>

          <screen>            
$ svnlook date -r 40 /tmp/repos/
2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003)
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-diff">
        <refnamediv>
          <refname>svnlook diff</refname>
          <refpurpose>Print differences of changed files and properties.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook diff REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print GNU-style differences of changed files and
            properties in a repository.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--revision (-r)
--transaction (-t)
--no-diff-deleted
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>
          
          <para>This shows a newly added (empty) file, a deleted
          file, and a copied file:</para>

          <screen>
$ svnlook diff -r 40 /usr/local/svn/repos/
Copied: egg.txt (from rev 39, trunk/vendors/deli/pickle.txt)

Added: trunk/vendors/deli/soda.txt
==============================================================================

Modified: trunk/vendors/deli/sandwich.txt
==============================================================================
--- trunk/vendors/deli/sandwich.txt	(original)
+++ trunk/vendors/deli/sandwich.txt	2003-02-22 17:45:04.000000000 -0600
@@ -0,0 +1 @@
+Don't forget the mayo!

Modified: trunk/vendors/deli/logo.jpg
==============================================================================
(Binary files differ)

Deleted: trunk/vendors/deli/chips.txt
==============================================================================

Deleted: trunk/vendors/deli/pickle.txt
==============================================================================
</screen>
          
       <para>
       If a file has a non-textual <literal>svn:mime-type</literal>
       property, then the differences are not explicitly shown.
       </para>
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-dirs-changed">
        <refnamediv>
          <refname>svnlook dirs-changed</refname>
          <refpurpose>Print the directories that were themselves changed.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook dirs-changed REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the directories that were themselves changed
            (property edits) or whose file children were
            changed.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>This shows the directories that changed in
            revision 40 in our sample repository:</para>

          <screen>
$ svnlook dirs-changed -r 40 /usr/local/svn/repos
trunk/vendors/deli/
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-help">
        <refnamediv>
          <refname>svnlook help</refname>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>Also svnlook -h and svnlook -?.</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Displays the help message for svnlook.  This
            command, like its brother <command>svn help</command>, is
            also your friend, even though you never call it anymore
            and forgot to invite it to your last party.</para>
        </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>?, h</para>
        </refsect1>

      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-history">
        <refnamediv>
          <refname>svnlook history</refname>
          <refpurpose>Print information about the history of a path in
            the repository (or the root directory if no path is
            supplied).</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook history REPOS_PATH 
            [PATH_IN_REPOS]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print information about the history of a path in
            the repository (or the root directory if no path is
            supplied).</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--show-ids
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>This shows the history output for the path
            <filename>/tags/1.0</filename> as of revision 20 in our
            sample repository.</para>

          <screen>
$ svnlook history -r 20 /usr/local/svn/repos /tags/1.0 --show-ids
REVISION   PATH &lt;ID&gt;
--------   ---------
      19   /tags/1.0 &lt;1.2.12&gt;
      17   /branches/1.0-rc2 &lt;1.1.10&gt;
      16   /branches/1.0-rc2 &lt;1.1.x&gt;
      14   /trunk &lt;1.0.q&gt;
      13   /trunk &lt;1.0.o&gt;
      11   /trunk &lt;1.0.k&gt;
       9   /trunk &lt;1.0.g&gt;
       8   /trunk &lt;1.0.e&gt;
       7   /trunk &lt;1.0.b&gt;
       6   /trunk &lt;1.0.9&gt;
       5   /trunk &lt;1.0.7&gt;
       4   /trunk &lt;1.0.6&gt;
       2   /trunk &lt;1.0.3&gt;
       1   /trunk &lt;1.0.2&gt;
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-info">
        <refnamediv>
          <refname>svnlook info</refname>
          <refpurpose>Print the author, datestamp, log message size,
            and log message.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook info REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the author, datestamp, log message size, and
            log message.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>This shows the info output for revision 40 in our
            sample repository.</para>

          <screen>
$ svnlook info -r 40 /usr/local/svn/repos
sally
2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003)
15
Rearrange lunch.
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-log">
        <refnamediv>
          <refname>svnlook log</refname>
          <refpurpose>Print the log message.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook log REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the log message.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>
          
          <screen>
--revision (-r)
--transaction (-t)
</screen>
        </refsect1>
        
        <refsect1>
          <title>Ejemplos</title>
          
          <para>This shows the log output for revision 40 in our sample
          repository:</para>

          <screen>
$ svnlook log /tmp/repos/
Rearrange lunch.
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-propget">
        <refnamediv>
          <refname>svnlook propget</refname>
          <refpurpose>Print the raw value of a property on a path in
            the repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook propget REPOS_PATH PROPNAME PATH_IN_REPOS</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>List the value of a property on a path in the
            repository.</para>

          </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>pg, pget</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>This shows the value of the <quote>seasonings</quote> property
            on the file <filename>/trunk/sandwich</filename> in the
            <literal>HEAD</literal> revision:</para>

          <screen>
$ svnlook pg /usr/local/svn/repos seasonings /trunk/sandwich
mustard
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-proplist">
        <refnamediv>
          <refname>svnlook proplist</refname>
          <refpurpose>Print the names and values of versioned file and
            directory properties.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook proplist REPOS_PATH PATH_IN_REPOS</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>List the properties of a path in the repository.  With
            <option>--verbose</option>, show the property values too.</para>

          </refsect1>

        <refsect1>
          <title>Nombres alternativos</title>
          <para>pl, plist</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--transaction (-t)
--verbose (-v)
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <para>This shows the names of properties set on the file
            <filename>/trunk/README</filename> in the
            <literal>HEAD</literal> revision:</para>

          <screen>
$ svnlook proplist /usr/local/svn/repos /trunk/README
  original-author
  svn:mime-type
</screen>

          <para>This is the same command as in the previous example,
            but this time showing the property values as well:</para>

          <screen>
$ svnlook proplist /usr/local/svn/repos /trunk/README
  original-author : fitz
  svn:mime-type : text/plain
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-tree">
        <refnamediv>
          <refname>svnlook tree</refname>
          <refpurpose>Print the tree.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook tree REPOS_PATH [PATH_IN_REPOS]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the tree, starting at <replaceable>PATH_IN_REPOS</replaceable> (if
            supplied, at the root of the tree otherwise), optionally
            showing node revision IDs.</para>
        </refsect1>

        <refsect1>
          <title>Parámetros</title>

          <screen>
--revision (-r)
--transaction (-t)
--show-ids
</screen>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>
          
          <para>This shows the tree output (with node-IDs) for revision
            40 in our sample repository:</para>

          <screen>
$ svnlook tree -r 40 /usr/local/svn/repos --show-ids
/ &lt;0.0.2j&gt;
 trunk/ &lt;p.0.2j&gt;
  vendors/ &lt;q.0.2j&gt;
   deli/ &lt;1g.0.2j&gt;
    egg.txt &lt;1i.e.2j&gt;
    soda.txt &lt;1k.0.2j&gt;
    sandwich.txt &lt;1j.0.2j&gt;
</screen>
          
        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-uuid">
        <refnamediv>
          <refname>svnlook uuid</refname>
          <refpurpose>Print the repository's
          <literal>UUID</literal>.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook uuid REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the <literal>UUID</literal> for the repository.
            the UUID is the repository's
            <emphasis>U</emphasis>niversal <emphasis>U</emphasis>nique
            <emphasis>ID</emphasis>entifier.  The Subversion client
            uses this identifier to differentiate between one
            repository and another.</para>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

          <screen>          
$ svnlook uuid /usr/local/svn/repos
e7fe1b91-8cd5-0310-98dd-2f12e793c5e8
</screen>

        </refsect1>
      </refentry>

      <!-- ================================================================= -->
      <refentry id="svn-ch-9-sect-3.2-re-youngest">
        <refnamediv>
          <refname>svnlook youngest</refname>
          <refpurpose>Print the youngest revision number.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopsis</title>
          <programlisting>svnlook youngest REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descripción</title>

          <para>Print the youngest revision number of a repository.</para>
        </refsect1>

        <refsect1>
          <title>Ejemplos</title>

        <para>This shows the youngest revision of our sample
            repository:</para>

          <screen>          
$ svnlook youngest /tmp/repos/ 
42
</screen>

        </refsect1>
      </refentry>

    </sect2>
  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 4 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-9-sect-4">

    <title><command>svnserve</command></title>
    
    <para><command>svnserve</command> allows access to Subversion
      repositories using the <literal>svn</literal> network protocol.
      You can run svnserve either as a standalone server process, or
      you can have another process, such as <command>inetd</command>,
      <command>xinetd</command> or <command>sshd</command>, launch it
      for you.</para>

    <para>Once the client has selected a repository by transmitting
      its URL, <command>svnserve</command> reads a file named
      <filename>conf/svnserve.conf</filename> in the repository
      directory to determine repository-specific settings such as what
      authentication database to use and what authorization policies
      to apply.  See <xref linkend="svn-ch-6-sect-3"/> for details of
      the <filename>svnserve.conf</filename> file.</para>
    
    <sect2 id="svn-ch-9-sect-4.1">
      <title><command>svnserve</command> Switches</title>
      
      <para>Unlike the previous commands we've
        described. <command>svnserve</command> has no
        subcommands&mdash;<command>svnserve</command> is controlled
        exclusively by switches.</para>

      <variablelist>

        <varlistentry>
          <term><option>--daemon</option> (<option>-d</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to run in daemon
              mode.  <command>svnserve</command> backgrounds itself
              and accepts and serves TCP/IP connections on the svn
              port (3690, by default).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--listen-port</option>=<replaceable>PORT</replaceable></term>
          <listitem>
            <para>Causes svnserve to listen on
              <replaceable>PORT</replaceable> when run in daemon
              mode.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--listen-host</option>=<replaceable>HOST</replaceable></term>
          <listitem>
            <para>Causes <command>svnserve</command> to listen on the
              interface specified by <replaceable>HOST</replaceable>,
              which may be either a hostname or an IP address.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--foreground</option></term>
          <listitem>
            <para>When used together with <option>-d</option>, this
              switch causes <command>svnserve</command> to stay in the
              foreground.  This switch is mainly useful for
              debugging.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--inetd</option> (<option>-i</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to use the
              stdin/stdout file descriptors, as is appropriate for a
              daemon running out of <command>inetd</command>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--help</option> (<option>-h</option>)</term>
          <listitem>
            <para>Displays a usage summary and exits.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--root</option>=<replaceable>ROOT</replaceable>
          (<option>-r</option>=<replaceable>ROOT</replaceable>)</term>
          <listitem>
            <para>Sets the virtual root for repositories served by
              <command>svnserve</command>.  The pathname in URLs
              provided by the client will be interpreted relative to
              this root, and will not be allowed to escape this
              root.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--tunnel</option> (<option>-t</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to run in tunnel
              mode, which is just like the <command>inetd</command>
              mode of operation (serve one connection over
              stdin/stdout) except that the connection is considered
              to be pre-authenticated with the username of the current
              uid.  This flag is selected by the client when running
              over a tunnel agent such as
              <command>ssh</command>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--threads</option> (<option>-T</option>)</term>
          <listitem>
            <para>When running in daemon mode, causes
              <command>svnserve</command> to spawn a thread instead of
              a process for each connection.  The
              <command>svnserve</command> process still backgrounds
              itself at startup time.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--listen-once</option> (<option>-X</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to accept one
              connection on the svn port, serve it, and exit.  This
              option is mainly useful for debugging.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

  </sect1>

</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
