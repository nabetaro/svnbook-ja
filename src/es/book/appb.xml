<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- originated from English revision 10817 -->
  <appendix id="svn-ap-b">
    <title>Solución de problemas</title>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 1 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ap-b-sect-1">
    <title>Problemas comunes</title>
    
    <para>Hay un número de problemas que usted puede encontrar<!--TODO:
      you may run into--> en el transcurso de instalar y usar Subversion.
      Álgunos de estos serán resueltos una vez que usted tenga una mejor
      idea de cómo hace las cosas Subversion, mientras que otros son
      <!--TODO:you're used to the way that other version control systems
      work--> causados porque usted está acostumbrado a la manera de
      funcionar de otros sistemas de control de versiones. <!--TODO:
      Still-->Otros problemas pueden ser insalvables<!--TODO:unsolvable-->
      debido a fallos en alguno de los sistemas operativos donde
      Subversion funciona (considerando la amplia gama de SO donde
      Subversion funciona, es asombroso que no encontramos
      demasiados<!--TODO:many more--> de éstos).</para>
      

    <para>La siguiente lista ha sido completada en el transcurso de años
      <!--TODO:has been compiled over the course of years-->de usar
      Subversion. Si no puede encontrar aqui el problema que está teniendo,
      mire la versión más actualizada del FAQ en el website principal de
      Subversion. Si todavía está atascado<!--TODO:if you're still stuck-->,
      entonces envíe un mail a <email>users@subversion.tigris.org</email>
      con una descripción detallada del problema que está teniendo.
      <footnote><para>Recuerde que la cantidad de detalle que provea sobre
      su configuración<!--TODO:setup--> y su problema es directamente
      proporcional a la probabilidad de conseguir una respuesta de la
      lista de correo<!--TODO:mailing list-->. Está animado a incluir
      brevemente lo que ha tomado para desayunar o el nombre de soltera
      de su madre.<!--TODO:You're encouraged to include everything short of
      what you had for breakfast and your mother's maiden name.-->  </para>
      </footnote> </para>
      
  
    <sect2 id="svn-ap-b-sect-1.2">
      <title>Problemas usando Subversion</title>
      
      <para>Aqui hay algunas de las preguntas más populares del FAQ de
        Subversion.</para>

      <sect3 id="svn-ap-b-sect-1.2.1">
        <title>Cada vez que intento acceder a mi repositorio, mi cliente
          de Subversion se cuelga<!--TODO:just hangs--></title>
        
        <para>Su repositorio no está corrupto, ni sus datos perdidos. Si su
          proceso accede directamente al repositorio (mod_dav_svn, svnlook,
          svnadmin, o si accede a una URL <literal>file://</literal>),
          entonces está usando Berkeley DB para acceder a sus datos.
          Berkeley DB es un sistema transaccional, lo que significa que
          registra todo sobre lo que va a hacer antes de hacerlo. Si su
          proceso es interrumpido (por ejemplo por una señal kill o
          segfault<!--TODO:a kill signal or segfault-->), entonces un
          fichero de bloqueo se deja atrás, junto con un fichero de
          registro que describe el trabajo<!--TODO:unfinished business-->
          inacabado. Cualquier otro proceso que procure tener acceso a
          la base de datos se colgará, esperando a que desaparezca el
          fichero de bloqueo. Para despertar su repositorio, necesita
          pedirle a Berkeley DB que finalice el trabajo, o rebobinar la
          base de datos a un estado anterior que se sepa que es
          consistente.</para>

        <para>Asegurese que ejecuta este comando como el usuario que
          posee<!--TODO:owns--> y administra la base de datos, no como
          superusuario<!--TODO:root-->, o sino<!--TODO:or else--> dejará
          ficheros pertenecientes al superusuario<!--TODO:root-ownned files
          -->en el directorio db. Estos ficheros no pueden ser abiertos
          por el usuario no root que administra la base de datos, que
          tipicamente es usted o su proceso Apache. También asegurese
          de tener fijada correctamente la umask cuando ejecute la
          recuperación<!--TODO:recover-->, si falla<!--TODO:since failing
          to do so will lock out users--> esta bloqueará a usuarios que
          están en el grupo permitido para acceder al repositorio.</para>

        <para>Simplemente ejecute:</para>

<screen>
$ svnadmin recover /path/to/repos
</screen>

        <para>Una vez el comando se haya completado, compruebe los
          permisos en el directorio <filename>db/</filename> del
          repositorio.</para>
        
      </sect3>
      
      
      <sect3 id="svn-ap-b-sect-1.2.2">
        <title>Cada vez que intento ejecutar <command>svn</command>, dice
          que mi copia de trabajo está bloqueada.</title>

        <para>La copia de trabajo de Subversion, como el Berkeley DB, usa
          un mecanismo transaccional para realizar todas las acciones.
          Esto es, registra todo acerca de lo que va a hacer antes de
          hacerlo. Si <command>svn</command> es interrumpido mientras
          realiza una acción, entonces uno o más ficheros de bloqueo son
          dejados atras, junto con ficheros de registro describiendo
          las acciones inacabadas. (<command>svn status</command>mostrará
          una <literal>L</literal> al lado de los directorios bloqueados.)
        </para>
        
        <para>Cualquier otro proceso que intente<!--TODO:attempts--> tener
          acceso a la copia de trabajo fallará cuando vea los bloqueos.
          Para despertar su copia de trabajo, usted necesita pedirle al
          cliente que finalice el trabajo. Para corregir esto, ejecute
          este comando desde<!--TODO:from the top of your working copy-->
          lo alto de su copia de trabajo:</para>
        
        <screen>
$ svn cleanup
</screen>

      </sect3>

      
      <sect3 id="svn-ap-b-sect-1.2.3">
        <title>Estoy teniendo errores encontrando o abriendo un repositorio,
          pero sé que mi URL del repositorio es correcta.</title>

        <para>Vea <xref linkend="svn-ap-b-sect-1.2.1"/>.</para>

        <para>También puede tener un problema de permisos al abrir el
          repositorio. Vea <xref linkend="svn-ch-6-sect-5"/>.</para>
      </sect3>

      
      <sect3 id="svn-ap-b-sect-1.2.4">
        <title>Cómo puedo especificar una letra de un dispositivo Windows
          en una URL <literal>file://</literal>?</title>
        
        <para>Vea <xref linkend="svn-ch-2-sidebar-1"/>.</para>
      </sect3>
      
      <sect3 id="svn-ap-b-sect-1.2.5">
        <title>Estoy teniendo problemas haciendo operaciones de escritura
          en un repositorio de Subversion sobre una red.</title>
        
        <para>Si la importación funciona bien sobre acceso local:</para>
        
        <screen>
$ mkdir test
$ touch test/testfile
$ svn import test file:///var/svn/test -m "Initial import"
Adding         test/testfile
Transmitting file data .
Committed revision 1.
</screen>

        <para>Pero no desde un puesto remoto:</para>
        
        <screen>
$ svn import test http://svn.red-bean.com/test -m "Initial import"
harry's password: xxxxxxx

svn_error: &hellip; The specified activity does not exist.
</screen>
        
        <para>Hemos visto esto cuando el directorio
          <filename>REPOS/dav/</filename> no es escribible por el proceso
          httpd. Compruebe los permisos para asegurarse que el httpd de
          Apache puede escribir en el directorio <filename>dav/</filename>
          (y al directorio correspondiente <filename>db/</filename>, por
          supuesto).<!--TODO:(and to the corresponding db/ directory, of
          course)--></para>
        
      </sect3>


      <sect3 id="svn-ap-b-sect-1.2.6">
        <title>Bajo Windows XP, a veces el servidor de Subversion parece
          enviar datos corruptos.</title>
        
        <para>Necesita instalar Windows XP Service Pack 1 para corregir
          un fallo en la pila TCP/IP en el sistema operativo. Puede
          conseguir toda clase de información sobre este Service Pack en
          <systemitem
          class="url">http://support.microsoft.com/default.aspx?scid=kb;EN-US;q317949</systemitem>.</para>
      </sect3>
      
      
      <sect3 id="svn-ap-b-sect-1.2.7">
        <title>¿Cual es el mejor metodo de hacer un trazo de red<!--TODO:
          a network trace--> de la conversación entre un cliente de
          Subversion y un servidor Apache?</title>
        
        <para>Utilice Ethereal para cuchichear<!--TODO:eavesdrop on the
        conversation... cuchichear o escuchar?-->la conversación:</para>

        <note>
          <para>Las siguientes instrucciones son especificas para la
            versión grafica de Ethereal, y puede no ser aplicable a la
            versión de linea de comandos (cuyo binario se nombra
            generalmente <command>tethereal</command>).</para>
        </note>
        
        <itemizedlist>
          <listitem>
            <para>Desplegar el menu Capture<!--TODO:Pull down the Capture
              menu-->, y elija Start.</para>
          </listitem>
          
          <listitem>
            <para>Escriba puerto 80 para Filter, y desactive el modo
              promiscuo<!--TODO:Type port 80 for Filter, and turn off
              promiscuous mode-->.</para>
          </listitem>
          
          <listitem>
            <para>Ejecute su cliente Subversion.</para>
          </listitem>
          
          <listitem>
            <para>Pulse Stop<!--TODO:hit Stop-->. Ahora usted tiene una
              captura. Parece una lista enorme de lineas<!--TODO:It looks
              like a huge list of lines-->.</para>
          </listitem>
          
          <listitem>
            <para>Haga click en la columna Protocol para abreviar.<!--TODO:
              to sort-->
            </para>
          </listitem>
          
          <listitem>
            <para>Despues, haga clic en la primera linea relevante TCP para
              seleccionarla.</para>
          </listitem>
          
          <listitem>
            <para>Click derecho, y elija "Follow TCP Stream"<!--TODO:Follow
              TCP Stream-->. Le presentarán los pares petición/respuesta
              de la conversión del HTTP del cliente de Subversion.<!--TODO:
              You'll be presented with the request/response pairs of the
              Subversion client's HTTP conversion--></para>
          </listitem>
        </itemizedlist>
        
        <para>Alternativamente, usted puede fijar un parametro en el
          fichero <filename>servers</filename> de configuración de
          tiempo de ejecución de su cliente<!--TODO:in your client's
          <filename>servers</filename> run-time configuration file to
          cause neon's debugging output to appear--> para hacer aparecer
          la salida depurada. El valor numérico de neon-debug<!--TODO:
          qué es "neon-debug"?--> es una combinación de los valores
          <literal>NE_DBG_*</literal> en el fichero de cabecera
          <filename>ne_utils.h</filename>. Fijando la variable
          <literal>neon-debug-mask</literal> a 130 (por ejemplo
          <literal>NE_DBG_HTTP + NE_DBG_HTTPBODY</literal>) hará que
          los datos de HTTP sean mostrados.<!--TODO:will
          cause the HTTP data to be shown--></para>

        <para>Usted puede querer inhabilitar la compresión al hacer una
          traza<!--TODO:doing a network trace--> de red arreglando
          <!--TODO:tweaking--> el parametro
          <literal>http-compression</literal> en el mismo fichero.</para>
      </sect3>

      <sect3 id="svn-ap-b-sect-1.2.8">
        <title>Acabo de construir la distribución binaria, y cuando
          intento descargar <!--TODO:check out--> Subversion, consigo
          un error sobre un "Esquema desconocido de URL."<!--TODO:
          "Unrecognized URL scheme."....traducimos esto, o no?--></title>
        
        <para>Subversion usa un sistema de plugins para permitir el acceso
          a los repositorios.Actualmente hay tres de estos plugins:
          ra_local permite el acceso a un repositorio local, ra_dav permite
          el acceso a un repositorio via WebDAV, y ra_svn permite el
          acceso local o remoto via el servidor svnserve. Cuando intente
          realizar una operación en subversion, el programa intenta
          cargar dinamicamente un plugin basado en el esquema de URL.
          Una URL <literal>file://</literal> intentará cargar ra_local,
          y una URL <literal>http://</literal> intentará cargar ra_dav.
        </para>

        <para>El error que usted está viendo significa que el
          enlazador/cargador dinámico no puede encontrar los plugins
          a cargar. Esto normalmente ocurre cuando compila subversion
          con librerias compartidas, entonces intentar ejecutarlo sin
          ejecutar primero 'make install'. Otra causa posible es que
          usted ejecutó make install, pero las librerias fueron
          instaladas en una localización que el enlazador/cargador
          dinámico no reconoce. Bajo Linux, usted puede permitir al
          enlazador/cargador buscar las librerias añadiendo el directorio
          de biblioteca<!--TODO:library directory--> a
          <filename>/etc/ld.so.conf</filename> y ejecutando ldconfig.
          Si no desea hacer esto, o no tiene acceso de root, usted también
          puede especificar el directorio de librería en la variable
          de entorno LD_LIBRARY_PATH.</para>
        </sect3>


      <sect3 id="svn-ap-b-sect-1.2.9">
        <title>¿Por qué el comando 'svn revert' requiere un target
          <!--TODO:require an explicit target--> explícito? ¿Por qué
          no es recursivo por defecto? Este comportamiento difiere
          <!--TODO:differs..."difiere" o "se diferencia"?--> de casi
          el resto de subcomandos<!--TODO:from almost all the other
          subcommands-->.</title>

        <para>La respuesta corta: es para su propio bien.</para>

        <para>Subversion pone una prioridad muy alta en la protección
          de sus datos, y no solo en sus datos versionados. Las
          modificaciones que usted hace a los ficheros recien
          versionados<!--TODO:already-versioned-->, y los nuevos
          ficheros programados para ser añadidos al sistema de control
          de versiones, deben ser tratados con cuidado.</para>
        
        <para>Haciendo el comando <command>svn revert</command>
          requiere un objetivo
          explícito<!--TODO:explicit target-->&mdash;incluso si este
          objetivo<!--TODO:target--> es '.'&mdash;es una manera de
          lograr eso. Este requisito (así como requerirle para proveer
          el parametro <option>--recursive</option> si usted desea este
          comportamiento) está pensado para hacerle pensar realmente
          que está haciendo, porque una vez que se invierten sus
          ficheros, sus modificaciones locales se van para siempre.</para>        
      </sect3>


      <sect3 id="svn-ap-b-sect-1.2.10">
        <title>Cuando arranco<!--TODO:start--> Apache, mod_dav_svn se
          queja por una "mala versión de la base de datos"<!--TODO:
          "bad database version"...hay que traducirlo?-->, que
          encontró db-3.X, en vez de<!--TODO:rather than-->
          db-4.X.</title>

        <para>Su apr-util está enlazado contra DB-3, y svn enlazado contra
          DB-4. Desafortunadamente, los simbolos de la BD <!--TODO: the
          DB symbols--> no son diferentes. Cuando mod_dav_svn está
          cargado en el espacio de proceso de Apache, termina resolviendo
          <!--TODO:it ends up resolving--> los nombres de los simbolos
          contra la libreria DB-3 de apr-util.</para>

        <para>La solución es asegurarse de que apr-util compila contra
          DB-4. Puede hacer esto pasando opciones específicas al
          fichero de configuración<!--TODO:configure... cómo traducir?-->
          de apr-util o al de apache: "--with-dbm=db4
          --with-berkeley-db=/the/db/prefix".</para>
      </sect3>


      <sect3 id="svn-ap-b-sect-1.2.11">
        <title>Estoy obteniendo errores de "Función no implementada"
          <!--TODO:"Function not implemented"--> en RedHat 9, y nada
          funciona. ¿Cómo arreglo esto?</title>

        <para>Esto realmente no es un problema con Subversion, pero
          afecta a menudo a usuarios de Subversion.</para>

        <para>RedHat 9 y Fedora vienen <!--TODO:ship with-->con una
          libreria de Berkeley DB que confía<!--TODO:relies on the
          kernel support for NPTL (the Native Posix Threads Library)-->
          en el soporte del núcleo para NPTL (la Librería Posix Nativa
          de Threads). Los núcleos que proporciona RedHat tiene este
          soporte incluido, pero si usted compila su propio núcleo,
          entonces puede no tener el soporte para NPTL. Si este es el
          caso, entonces usted verá errores como estos:</para>

<screen>
svn: Berkeley DB error
svn: Berkeley DB error while creating environment for filesystem tester/db:
Function not implemented
</screen>

        <para>Esto puede ser arreglado en una de varias maneras:<!--TODO:
        This can be fixed in one of several ways:--></para>

        <itemizedlist>
          <listitem><para>Reconstruir db4 para el núcleo que usted está
          usando.</para></listitem>

          <listitem><para>Usar un núcleo de RedHat 9.</para></listitem>

          <listitem><para>Aplicar los parches NPTL al núcleo que está
            usando.</para></listitem>

          <listitem><para>Usar un núcleo reciente (2.5.x) con soporte
              NPTL incluído.</para></listitem>

          <listitem><para>Comprobar si la variable de entorno
              <literal>LD_ASSUME_KERNEL</literal> está definida como 2.2.5,
              y si es así, desasignarla<!--TODO:unset--> antes de
              arrancar Subversion (Apache). (Generalmente usted fijaría
              esta variable para ejecutar Wine o Winex en RedHat 9)</para></listitem>
        </itemizedlist>          
      </sect3>


      <sect3 id="svn-ap-b-sect-1.2.12">
        <title>¿Por qué el informe de cambios dice "(no author)" para
          los ficheros enviados o importados via Apache (ra_dav)?</title>

        <para>Si usted permite acceso anónimo de escritura al repositorio
          via Apache, el servidor Apache nunca pide al cliente un
          nombre de usuario<!--TODO: the Apache server never challenges
          the client for a username-->, y en lugar de eso permite la
          operación de escritura sin autentificación. Dado que Subversion
          no tiene ni idea de quien hizo la operación, esto da lugar a
          un registro como este:</para>

<screen>
$ svn log
------------------------------------------------------------------------
rev 24:&nbsp; (no author) | 2003-07-29 19:28:35 +0200 (Tue, 29 Jul 2003)
&hellip;
</screen>

        <para>Lea sobre añadir autentificación en <xref
            linkend="svn-ch-6"/>.</para>
      </sect3>


      <sect3 id="svn-ap-b-sect-1.2.13">
        <title>Estoy obteniendo errores ocasionales de "Acceso Denegado"
          <!--TODO:"Access Denied"--> en Windows. Parece que sucede al
          azar<!--They seem to happen at random-->.</title>

        <para>These appear to be due to the various Windows services
          that monitor the filesystem for changes (anti-virus
          software, indexing services, the COM+ Event Notification
          Service).  This is not really a bug in Subversion, which
          makes it difficult for to fix.  A summary of the current
          state of the investigation is available at <systemitem
          class="url">http://www.contactor.se/~dast/svn/archive-2003-10/0136.shtml</systemitem>.
          A workaround that should reduce the incidence rate for most
          people was implemented in revision 7598.</para>
      </sect3>


      <sect3 id="svn-ap-b-sect-1.2.14">
        <title>On FreeBSD, certain operations (especially svnadmin
          create) sometimes hang.</title>

        <para>This is usually due to a lack of available entropy on
          the system.  Subversion asks APR to generate random numbers
          to create UUIDs from time to time, and certain operating
          systems will block for high-quality randomness.  You
          probably need to configure the system to gather entropy from
          sources such as hard-disk and network interrupts.  Consult
          your system manpages, specifically
          <command>random(4)</command> and
          <command>rndcontrol(8)</command> on how to effect this
          change.  Another workaround is to compile APR against
          <filename>/dev/urandom</filename> instead of
          <filename>/dev/random</filename>.</para>
      </sect3>


      <sect3 id="svn-ap-b-sect-1.2.15">
        <title>I can see my repository in a web browser, but 'svn
          checkout' gives me an error about "301 Moved
          Permanently".</title> 

        <para>It means your httpd.conf is misconfigured.  Usually this
          error happens when you've defined the Subversion virtual
          "location" to exist within two different scopes at the same
          time.</para>

        <para>For example, if you've exported a repository as
            <literal>&lt;Location /www/foo&gt;</literal>, but you've
            also set your <literal>DocumentRoot</literal> to be
            <filename>/www</filename>, then you're in trouble.  When
            the request comes in for
            <filename>/www/foo/bar</filename>, apache doesn't know
            whether to find a <emphasis>real</emphasis> file named
            <filename>/foo/bar</filename> within your
            <literal>DocumentRoot</literal>, or whether to ask
            mod_dav_svn to fetch a file <filename>/bar</filename> from
            the <filename>/www/foo</filename> repository.  Usually the
            former case wins, and hence the "Moved Permanently"
            error.</para>

        <para>The solution is to make sure your repository
          <literal>&lt;Location&gt;</literal> does not overlap or live
          within any areas already exported as normal web
          shares.</para>
      </sect3>

      
      <sect3 id="svn-ap-b-sect-1.2.16">
        <title>I'm trying to look at an old version of my file, but svn
          says something about "path not found".</title>

        <para>A nice feature of Subversion is that the repository
          understands copies and renames, and preserves the historical
          connections.  For example, if you copy
          <filename>/trunk</filename> to
          <filename>/branches/mybranch</filename>, then the repository
          understands that every file in the branch has a
          "predecessor" in the trunk.  Running <filename>svn log
          --verbose</filename> will show you the historical copy, so
          you can see the rename:</para>

<screen>
r7932 | joe | 2003-12-03 17:54:02 -0600 (Wed, 03 Dec 2003) | 1 line
Changed paths:
   A /branches/mybranch (from /trunk:7931)
</screen>

        <para>Unfortunately, while the repository is aware of copies
          and renames, almost all the svn client subcommands in
          version 1.0 are <emphasis>not</emphasis> aware.  Commands
          like <command>svn diff</command>, <command>svn
          merge</command>, and <command>svn cat</command> ought to
          understand and follow renames, but don't yet do this.  It's
          scheduled as a post-1.0 feature.  For example, if you ask
          <command>svn diff</command> to compare two earlier versions
          of <filename>/branches/mybranch/foo.c</filename>, the
          command will not automatically understand that the task
          actually requires comparing two versions of
          <filename>/trunk/foo.c</filename>, due to the rename.
          Instead, you'll see an error about how the branch-path
          doesn't exist in the earlier revisions.</para>

        <para>The workaround for all problems of this sort is to do
          the legwork yourself.  That is: <emphasis>you</emphasis>
          need to be aware of any renamed paths, discover them
          yourself using <command>svn log -v</command>, and then
          provide them explicitly to the svn client.  For example,
          instead of running</para>

<screen>
$ svn diff -r 1000:2000 http://host/repos/branches/mybranch/foo.c
svn: Filesystem has no item
svn: '/branches/mybranch/foo.c' not found in the repository at revision 1000
</screen>

        <para>...you would instead run</para>

<screen>
$ svn diff -r1000:2000 http://host/repos/trunk/foo.c
...
</screen>
      </sect3>

      </sect2>

    </sect1>

</appendix>

<!--
local variables: 
sgml-parent-document: ("book.xml" "appendix")
end:
-->
