<?xml version="1.0" encoding="UTF-8"?>
<chapter id="svn.customization">

  <!-- @ENGLISH {{{
  <title>Customizing Your Subversion Experience</title>
  @ENGLISH }}} -->
  <title>Профессиональная настройка Subversion</title>
  <!-- See also svn.preface.organization -->

  <para>### TODO: Chapter opening ###</para>

  <para>### TODO: Gut the runtime config stuff like I did the property
            stuff, making larger topical sections to which the runtime
            config stuff generally refers.  Like already exists for
            external diff/diff3, add, for example, a section on
            external editors. ###</para>

  <sect1 id="svn.advanced.confarea">
    <!-- @ENGLISH {{{
    <title>Runtime Configuration Area</title>

    <para>Subversion provides many optional behaviors that can be
      controlled by the user.  Many of these options are of the kind
      that a user would wish to apply to all Subversion operations.
      So, rather than forcing users to remember command-line arguments
      for specifying these options, and to use them for each and every
      operation they perform, Subversion uses configuration files,
      segregated into a Subversion configuration area.</para>

    <para>The Subversion <firstterm>configuration area</firstterm> is
      a two-tiered hierarchy of option names and their values.
      Usually, this boils down to a special directory that contains
      <firstterm>configuration files</firstterm> (the first tier),
      which are just text files in standard INI format (with
      <quote>sections</quote> providing the second tier).  These files
      can be easily edited using your favorite text editor (such as
      Emacs or vi), and contain directives read by the client to
      determine which of several optional behaviors the user
      prefers.</para>
    @ENGLISH }}} -->
    <title>Параметры времени выполнения</title>

    <para>Subversion имеет множество контролируемых пользователем
      опциональных параметров поведения. Возможно пользователь
      хотел бы применять некоторые из этих параметров во всех
      операциях Subversion. Поэтому для того, что бы не заставлять
      пользователей помнить ключи командной строки используемые для
      указания этих параметров и не указывать их при всех выполняемых
      операциях, Subversion использует конфигурационные файлы, выделенные
      в область конфигурации Subversion.</para>

    <para><firstterm>Область конфигурации</firstterm> Subversion
      имеет двухуровневую иерархию имен параметров и их значений.
      Как правило, она сводится к отдельной директории, содержащей
      <firstterm>конфигурационные файлы</firstterm> (первый уровень)
      являющиеся простыми текстовыми файлами в стандартном INI формате
      (с <quote>разделами</quote>, обеспечивающими второй уровень).
      Эти файлы содержат директивы используемые клиентом для определения
      поведения клиента предпочитаемого пользователем, и могут быть легко
      отредактированы используя ваш любимый редактор (например, Emacs
      или vi).</para>

    <!-- =============================================================== -->
    <sect2 id="svn.advanced.confarea.layout">
      <!-- @ENGLISH {{{
      <title>Configuration Area Layout</title>

      <para>The first time that the <command>svn</command>
        command-line client is executed, it creates a per-user
        configuration area.  On Unix-like systems, this area appears
        as a directory named <filename>.subversion</filename> in the
        user's home directory.  On Win32 systems, Subversion creates a
        folder named <filename>Subversion</filename>, typically inside
        the <filename>Application Data</filename> area of the user's
        profile directory (which, by the way, is usually a hidden
        directory).  However, on this platform the exact location
        differs from system to system, and is dictated by the Windows
        registry.
        <footnote>
          <para>The <literal>APPDATA</literal> environment variable
            points to the <filename>Application Data</filename> area,
            so you can always refer to this folder as
            <filename>%APPDATA%\Subversion</filename>.</para>
        </footnote>
        We will refer to the per-user configuration area using its Unix
        name, <filename>.subversion</filename>.</para>
      @ENGLISH }}} -->
      <title>Структура области конфигурации</title>

      <para>Во время первого запуска клиент для командной строки
        <command>svn</command> создает отдельную для каждого пользователя
        область конфигурации. На Unix-подобных системах эта директория
        называется <filename>.subversion</filename> и находиться в домашней
        директории пользователя. На Win32 системах Subversion создает
        папку с именем <filename>Subversion</filename> в области
        <filename>Application Data</filename> директории с профилем
        пользователя (которая, кстати говоря, обычно является скрытой
        директорией). Однако на этой платформе точное местоположение
        отличается от системы к системе и указывается в реестре
        Windows. <footnote><para>Переменная среды окружения
        <literal>APPDATA</literal> указывает на папку <filename>Application
        Data</filename> поэтому к этой директории можно всегда обращаться
        как к <filename>%APPDATA%\Subversion</filename>.</para></footnote>
        При обращении к пользовательской области конфигурации мы будем
        использовать ее Unix-название.</para>

      <!-- @ENGLISH {{{
      <para>In addition to the per-user configuration area, Subversion
        also recognizes the existence of a system-wide configuration
        area.  This gives system administrators the ability to
        establish defaults for all users on a given machine.  Note
        that the system-wide configuration area does not alone dictate
        mandatory policy&mdash;the settings in the per-user
        configuration area override those in the system-wide one, and
        command-line arguments supplied to the <command>svn</command>
        program have the final word on behavior.  On Unix-like
        platforms, the system-wide configuration area is
        expected to be the <filename>/etc/subversion</filename>
        directory; on Windows machines, it looks for a
        <filename>Subversion</filename> directory inside the common
        <filename>Application Data</filename> location (again, as
        specified by the Windows Registry).  Unlike the per-user
        case, the <command>svn</command> program does not attempt
        to create the system-wide configuration area.</para>
      @ENGLISH }}} -->
      <para>В дополнение к пользовательской области конфигурации,
        Subversion использует общесистемную область конфигурации. Это
        дает возможность системным администраторам устанавливать
        параметры по умолчанию для всех пользователей отдельно взятой
        машины. Помните, что системная область конфигурации не
        устанавливает безоговорочные правила &mdash; параметры, заданные
        пользовательской конфигурацией переопределяют системные параметры,
        а аргументы командной строки, передаваемые программе
        <command>svn</command>, имеют последнее слово. На Unix-подобных
        платформах ожидаемым местоположением системной области конфигурации
        является директория <filename>/etc/subversion</filename>; на
        Windows машинах ищется директория <filename>Subversion</filename>
        внутри общесистемной области <filename>Application Data</filename>
        (также определяемой реестром). В отличие от пользовательской,
        системную область конфигурации <command>svn</command> не
        создает.</para>

      <!-- @ENGLISH {{{
      <para>The per-user configuration area currently contains three
        files&mdash;two configuration files (<filename>config</filename> and
        <filename>servers</filename>), and a <filename>README.txt</filename>
        file which describes the INI format.  At the time of their
        creation, the files contain default values for each of the
        supported Subversion options, mostly commented out and grouped
        with textual descriptions about how the values for the key
        affect Subversion's behavior.  To change a certain behavior,
        you need only to load the appropriate configuration file into
        a text editor, and modify the desired option's value.  If at
        any time you wish to have the default configuration settings
        restored, you can simply remove (or rename) your configuration
        directory and then run some innocuous <command>svn</command>
        command, such as <command>svn -&#64738;-version</command>.  A new
        configuration directory with the default contents will be
        created.</para>

      <para>The per-user configuration area also contains a cache of
        authentication data.  The <filename>auth</filename> directory
        holds a set of subdirectories that contain pieces of cached
        information used by Subversion's various supported
        authentication methods.  This directory is created in such a
        way that only the user herself has permission to read its
        contents.</para>
      @ENGLISH }}} -->
      <para>На сегодняшний момент пользовательская область конфигурации
        содержит три файла &mdash; два файла конфигурации
        (<filename>config</filename> и <filename>servers</filename>) и
        <filename>README.txt</filename>, который содержит описание INI формата.
        После их создания, эти файлы содержат значения по умолчанию для всех,
        поддерживаемых Subversion параметров, обычно закомментированных и
        объединенных с текстовым описанием значений ключей, влияющих на
        поведение Subversion. Для того, что бы изменить отдельный параметр все,
        что нужно, просто загрузить соответствующий файл в текстовый редактор
        и изменить значение нужного параметра. Если в какой-то момент вы
        захотите восстановить параметры по умолчанию, необходимо просто
        удалить (или переименовать) директорию с конфигурацией, после чего
        выполнить какую-то безобидную команду <command>svn</command>,
        например, <command>svn --version</command>. В результате будет
        создана новая директория с конфигурацией и содержимым по
        умолчанию.</para>

      <para>Кроме того, пользовательская область конфигурации содержит
        кеш идентификационной информации. Директория <filename>auth</filename>
        объединяет набор поддиректорий, содержащих кешированну информацию,
        используемую в различных, поддерживаемых Subversion методах
        авторизации. Эта директория создается так, что бы только сам
        пользователь имел право просматривать ее содержимое.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.advanced.confarea.windows-registry">
      <!-- @ENGLISH {{{
      <title>Configuration and the Windows Registry</title>

      <para>In addition to the usual INI-based configuration area,
        Subversion clients running on Windows platforms may also use
        the Windows registry to hold the configuration data.  The
        option names and their values are the same as in the INI
        files.  The <quote>file/section</quote> hierarchy is
        preserved as well, though addressed in a slightly different
        fashion&mdash;in this schema, files and sections are just
        levels in the registry key tree.</para>

      <para>Subversion looks for system-wide configuration values
        under the
        <literal>HKEY_LOCAL_MACHINE\Software\Tigris.org\Subversion</literal>
        key.  For example, the <literal>global-ignores</literal> option,
        which is in the <literal>miscellany</literal> section of the
        <filename>config</filename> file, would be found at
        <literal>HKEY_LOCAL_MACHINE\Software\Tigris.org\Subversion\Config\Miscellany\global-ignores</literal>.
        Per-user configuration values should be stored under
        <literal>HKEY_CURRENT_USER\Software\Tigris.org\Subversion</literal>.
      </para>
      @ENGLISH }}} -->
      <title>Конфигурация и реестр Windows</title>

      <para>В дополнение к обычным INI-настройкам, Subversion-клиент,
        работающий на платформе Windows, может использовать для
        хранения настроек Windows-реестр. Имена параметров и их значения
        точно такие же, как и в INI-файлах. Иерархия <quote>файлов</quote>
        сохраняется, только немного меняется способ адресации &mdash;
        файлы и разделы просто заменяются уровнями в дереве ключей
        реестра.</para>

      <para>За общесистемными настройками Subversion обращается к ключу
        <literal>HKEY_LOCAL_MACHINE\Software\Tigris.org\Subversion</literal>
        Например, параметр <literal>global-ignores</literal>, находящийся в
        разделе <literal>miscellany</literal> файла
        <filename>config</filename> будет находиться в <literal>HKEY_LOCAL_MACHINE\Software\Tigris.org\Subversion\Config\Miscellany\global-ignores</literal>. Пользовательские настройки хранятся в ключе
        <literal>HKEY_CURRENT_USER\Software\Tigris.org\Subversion</literal>.
      </para>

      <!-- @ENGLISH {{{
      <para>Registry-based configuration options are parsed
        <emphasis>before</emphasis> their file-based counterparts,
        so are overridden by values found in the configuration
        files.  In other words, configuration priority is granted in
        the following order on a Windows system:</para>

      <orderedlist>
        <listitem>
          <para>Command-line options</para>
        </listitem>
        <listitem>
          <para>The per-user INI files</para>
        </listitem>
        <listitem>
          <para>The per-user Registry values</para>
        </listitem>
        <listitem>
          <para>The system-wide INI files</para>
        </listitem>
        <listitem>
          <para>The system-wide Registry values</para>
        </listitem>
      </orderedlist>
      @ENGLISH }}} -->
      <para>Параметры конфигурации, указанные в реестре обрабатываются
        <emphasis>до</emphasis> эквивалентных параметров в файлах
        конфигурации, поэтому они заменяются значениями, найденными,
        в файлах конфигурации. Другими словами, на Windows-системе
        приоритеты расположены в следующем порядке:</para>

      <orderedlist>
        <listitem>
          <para>Параметры командной строки</para>
        </listitem>
        <listitem>
          <para>Пользовательские INI-файлы</para>
        </listitem>
        <listitem>
          <para>Параметры в реестре</para>
        </listitem>
        <listitem>
          <para>Системные INI-файлы</para>
        </listitem>
        <listitem>
          <para>Общесистемные параметры в реестре</para>
        </listitem>
      </orderedlist>

      <!-- @ENGLISH {{{
      <para>Also, the Windows Registry doesn't really support the
        notion of something being <quote>commented out</quote>.
        However, Subversion will ignore any option key whose name
        begins with a hash (<literal>#</literal>) character.  This
        allows you to effectively comment out a Subversion option
        without deleting the entire key from the Registry, obviously
        simplifying the process of restoring that option.</para>

      <para>The <command>svn</command> command-line client never
        attempts to write to the Windows Registry, and will not
        attempt to create a default configuration area there.  You can
        create the keys you need using the <command>REGEDIT</command>
        program.  Alternatively, you can create a
        <filename>.reg</filename> file, and then double-click on that
        file from the Explorer shell, which will cause the data to be
        merged into your registry.</para>

      <example id="svn.advanced.confarea.windows-registry.ex-1">
        <title>Sample Registration Entries (.reg) File.</title>
      @ENGLISH }}} -->
      <para>Кроме того, реестр Windows не поддерживает механизма
        <quote>комментирования</quote>. Тем не менее, Subversion
        игнорирует параметры, у которых имена начинаются с
        символа <quote>решетка</quote> (<literal>#</literal>).
        Это позволяет закомментировать параметр, не удаляя ключ из
        реестра, что значительно упрощает процесс восстановления этого
        параметра.</para>

      <para>Клиент для командной строки <command>svn</command>
        никогда ничего не записывает и не создает первоначальные
        <quote>умолчательные</quote> параметры в реестре Windows.
        Нужные вам ключи вы можете создать используя программу
        <command>REGEDIT</command>. Либо, можно создать
        <filename>.reg</filename>-файл и двойным щелчком на этом файле
        в Explorer добавить информацию в реестр.</para>

      <example id="svn.advanced.confarea.windows-registry.ex-1">
        <title>Пример указания параметров в (.reg) файле реестра.</title>

        <programlisting>
REGEDIT4

[HKEY_LOCAL_MACHINE\Software\Tigris.org\Subversion\Servers\groups]

[HKEY_LOCAL_MACHINE\Software\Tigris.org\Subversion\Servers\global]
"#http-proxy-host"=""
"#http-proxy-port"=""
"#http-proxy-username"=""
"#http-proxy-password"=""
"#http-proxy-exceptions"=""
"#http-timeout"="0"
"#http-compression"="yes"
"#neon-debug-mask"=""
"#ssl-authority-files"=""
"#ssl-trust-default-ca"=""
"#ssl-client-cert-file"=""
"#ssl-client-cert-password"=""

[HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\auth]
"#store-auth-creds"="no"

[HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\helpers]
"#editor-cmd"="notepad"
"#diff-cmd"=""
"#diff3-cmd"=""
"#diff3-has-program-arg"=""

[HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\miscellany]
"#global-ignores"="*.o *.lo *.la #*# .*.rej *.rej .*~ *~ .#* .DS_Store"
"#log-encoding"=""
"#use-commit-times"=""
"#template-root"=""
"#enable-auto-props"=""

[HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\tunnels]

[HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\auto-props]
</programlisting>
      </example>

      <!-- @ENGLISH {{{
      <para>The previous example shows the contents of a
        <filename>.reg</filename> file which contains some of the most
        commonly used configuration options and their default values.
        Note the presence of both system-wide (for network
        proxy-related options) and per-user settings (editor programs
        and password storage, among others).  Also note that all the
        options are effectively commented out.  You need only to
        remove the hash (<literal>#</literal>) character from the
        beginning of the option names, and set the values as you
        desire.</para>
      @ENGLISH }}} -->
      <para>В предыдущем примере показано содержимое
        <filename>.reg</filename>-файла, содержащего часто используемые
        параметры и их значения по умолчанию. Обратите внимание, что
        приведены как общесистемные (сетевые настройки, относящиеся к
        прокси-серверу) и пользовательские параметры (программы-редакторы
        и сохранение паролей, среди прочего). Так же обратите внимание,
        что все параметры закомментированы. Необходимо будет просто удалить
        символ <quote>решетка</quote> (<literal>#</literal>) и установить
        нужное значение.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.advanced.confarea.opts">
      <!-- @ENGLISH {{{
      <title>Configuration Options</title>

      <para>In this section, we will discuss the specific
        run-time configuration options that are currently supported
        by Subversion.</para>
      @ENGLISH }}} -->
      <title>Параметры конфигурации</title>

      <para>В этом разделе рассматриваются поддерживаемые
        Subversion параметры времени выполнения.</para>

      <sect3 id="svn.advanced.confarea.opts.servers">
        <title>Servers</title>

        <!-- @ENGLISH {{{
        <para>The <filename>servers</filename> file contains
          Subversion configuration options related to the network
          layers.  There are two special section names in this
          file&mdash;<literal>groups</literal> and
          <literal>global</literal>.  The <literal>groups</literal>
          section is essentially a cross-reference table.  The keys in
          this section are the names of other sections in the file;
          their values are <firstterm>globs</firstterm>&mdash;textual
          tokens which possibly contain wildcard
          characters&mdash;that are compared against the hostnames of
          the machine to which Subversion requests are sent.</para>
        @ENGLISH }}} -->
        <para>В файле <filename>servers</filename> находятся настройки,
          относящиеся к работе Subversion через сеть. Он содержит
          два специальных раздела &mdash; <literal>groups</literal> и
          <literal>global</literal>. Раздел <literal>groups</literal>
          представляет собой просто перекрестную таблицу. Ключи этого
          раздела являются именами последующих разделов файла; значения
          ключей представляют собой <firstterm>обобщения</firstterm> &mdash;
          текстовые блоки, которые могут содержать подстановочные символы
          &mdash; сравниваемые с именами машин, к которым Subversion
          направляет запросы.</para>

        <programlisting>
[groups]
beanie-babies = *.red-bean.com
collabnet = svn.collab.net

[beanie-babies]
&hellip;

[collabnet]
&hellip;
</programlisting>

        <!-- @ENGLISH {{{
        <para>When Subversion is used over a network, it attempts to
          match the name of the server it is trying to reach with a
          group name under the <literal>groups</literal> section.  If
          a match is made, Subversion then looks for a section in the
          <filename>servers</filename> file whose name is the matched
          group's name.  From that section it reads the actual network
          configuration settings.</para>

        <para>The <literal>global</literal> section contains the
          settings that are meant for all of the servers not matched
          by one of the globs under the <literal>groups</literal>
          section.  The options available in this section are
          exactly the same as those valid for the other server
          sections in the file (except, of course, the special
          <literal>groups</literal> section), and are as
          follows:</para>
        @ENGLISH }}} -->
        <para>При работе через сеть, Subversion ищет совпадения между
          именем сервера, с которым устанавливается связь и именем группы
          в разделе <literal>groups</literal>. Если найдено совпадение,
          Subversion обращается к файлу <filename>servers</filename>,
          к разделу с именем, совпадающим с именем группы. Из этого раздела
          берутся необходимые сетевые настройки.</para>

        <para>Раздел <literal>global</literal> содержит настройки,
          используемые для всех серверов, не подпадающих ни под одно
          обобщение раздела <literal>groups</literal>. Здесь указываются
          те-же, что и для остальных серверных разделов файла параметры
          (конечно, за исключением специального раздела
          <literal>groups</literal>), используемые параметры приведены
          ниже:</para>

        <variablelist>
          <varlistentry>
            <term><literal>http-proxy-host</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies the hostname of the proxy computer
                through which your HTTP-based Subversion requests must
                pass.  It defaults to an empty value, which means that
                Subversion will not attempt to route HTTP requests
                through a proxy computer, and will instead attempt to
                contact the destination machine directly.</para>
              @ENGLISH }}} -->
              <para>Указывает имя компьютера-посредника, через который
                Subversion должна отправлять HTTP-запросы. По умолчанию,
                этот параметр имеет пустое значение, которое говорит
                Subversion о том, что она должна направлять HTTP-запросы
                не через компьютер-посредник, а связываться с целевой машиной
                напрямую.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>http-proxy-port</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies the port number on the proxy host
                to use.  It defaults to an empty value.</para>
              @ENGLISH }}} -->
              <para>Указывает номер используемого порта на промежуточном
                компьютере. По умолчанию имеет пустое значение.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>http-proxy-username</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies the username to supply to the proxy
                machine.  It defaults to an empty value.</para>
              @ENGLISH }}} -->
              <para>Указывает имя пользователя, передаваемого
                компьютеру-посреднику. По умолчанию имеет пустое
                значение.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>http-proxy-password</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies the password to supply to the proxy
                machine.  It defaults to an empty value.</para>
              @ENGLISH }}} -->
              <para>Указывает пароль, передаваемый
                компьютеру-посреднику. По умолчанию имеет пустое
                значение.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>http-timeout</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies the amount of time, in seconds, to
                wait for a server response.  If you experience
                problems with a slow network connection causing
                Subversion operations to timeout, you should increase
                the value of this option.  The default value is
                <literal>0</literal>, which instructs the underlying
                HTTP library, Neon, to use its default timeout
                setting.</para>
              @ENGLISH }}} -->
              <para>Указывает, в секундах, промежуток времени ожидания
                ответа сервера. Если при низкоскоростном сетевом соединении
                у вас возникает проблема превышения времени ожидания,
                следует увеличить это значение. Значение по умолчанию
                <literal>0</literal> означает для низлежащей HTTP библиотеки,
                Neon, использовать свое собственное значение времени
                ожидания.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>http-compression</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies whether or not Subversion should
                attempt to compress network requests made to DAV-ready
                servers.  The default value is <literal>yes</literal>
                (though compression will only occur if that capability
                is compiled into the network layer).  Set this to
                <literal>no</literal> to disable compression, such as
                when debugging network transmissions.</para>
              @ENGLISH }}} -->
              <para>Указывает, должна или нет Subversion использовать
                сжатие сетевых запросов, выполняющихся к DAV-серверам.
                Значением по умолчанию является <literal>yes</literal>
                (однако выполняться сжатие будет только если такая
                возможность поддерживается сетевым слоем). Установите
                этот параметр в <literal>no</literal>, для отключения
                сжатия, например при отладке сетевых транзакций.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>neon-debug-mask</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This is an integer mask that the underlying HTTP
                library, Neon, uses for choosing what type of
                debugging output to yield.  The default value is
                <literal>0</literal>, which will silence all debugging
                output.  For more information about how Subversion
                makes use of Neon, see <xref linkend="svn.developer" />.</para>
                @ENGLISH }}} -->
              <para>Целочисленная маска, которая используется низлежащей
                HTTP-библиотекой, Neon, для определения типа выводимой
                отладочной информации. По умолчанию установлено значение
                <literal>0</literal>, скрывающие весь отладочный вывод.
                Подробнее о том как Subversion использует Neon читайте в
                разделе <xref linkend="svn.developer" />.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>ssl-authority-files</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This is a semicolon-delimited list of paths to files
                containing certificates of the certificate authorities
                (or CAs) that
                are accepted by the Subversion client when accessing the
                repository over HTTPS.</para>
              @ENGLISH }}} -->
              <para>Разделенный точкой с запятой перечень путей к файлам,
                содержащим сертификаты авторизации (или CAs), используемые
                Subversion-клиентом при обращении к хранилищу через
                HTTPS.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>ssl-trust-default-ca</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>Set this variable to <literal>yes</literal> if you
                want Subversion to automatically trust the set of
                default CAs that ship with OpenSSL.</para>
              @ENGLISH }}} -->
              <para>Установите значение этой переменной в
                <literal>yes</literal>, если хотите чтобы Subversion
                автоматически доверяла набору поставляемых вместе
                с OpenSSL сертификатов (CAs).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>ssl-client-cert-file</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>If a host (or set of hosts) requires an SSL client
                certificate, you'll normally be prompted for a path to
                your certificate.  By setting this variable to that
                same path, Subversion will be able to find your client
                certificate automatically without prompting you.
                There's no standard place to store your certificate on
                disk; Subversion will grab it from any path you
                specify.</para>
              @ENGLISH }}} -->
              <para>Если хост (или хосты) требуют SSL сертификат клиента,
                у вас будет запрошен путь к вашему сертификату. Установите
                значение этой переменной и Subversion сможет автоматически
                находить ваш сертификат, без запроса. Нет стандартного места
                для хранения сертификата на диске; Subversion будет
                использовать тот, который располагается по указанному вами
                пути.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>ssl-client-cert-password</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>If your SSL client certificate file is encrypted
                by a passphrase, Subversion will prompt you for the
                passphrase whenever the certificate is used.  If you
                find this annoying (and don't mind storing the
                password in the <filename>servers</filename> file),
                then you can set this variable to the certificate's
                passphrase.  You won't be prompted anymore.</para>
              @ENGLISH }}} -->
              <para>Если ваш клиентский SSL сертификат защищен паролем,
                при обращении к нему Subversion запросит у вас пароль.
                Если это вам надоедает (и вас не пугает хранить пароль
                в файле <filename>servers</filename>), можно присвоить
                значению этой переменной пароль сертификата. После этого
                пароль больше запрашиваться не будет.</para>
            </listitem>
          </varlistentry>
        </variablelist>

      </sect3>
      <sect3 id="svn.advanced.confarea.opts.config">
        <title>Config</title>

        <!-- @ENGLISH {{{
        <para>The <filename>config</filename> file contains the rest
          of the currently available Subversion run-time options,
          those not related to networking.  There are only a few
          options in use at this time, but they are again grouped into
          sections in expectation of future additions.</para>

        <para>The <literal>auth</literal> section contains settings
          related to Subversion's authentication and authorization
          against the repository.  It contains:</para>
        @ENGLISH }}} -->
        <para>Остальные доступные параметры времени выполнения Subversion,
          не относящиеся к сетевой работе, находятся в файле
          <filename>config</filename>. В данный момент существует всего
          несколько параметров, но они тоже сгруппированы в разделы,
          в расчете на их увеличение в будущем.</para>

        <para>Раздел <literal>auth</literal> содержит параметры, относящиеся
          к аутентификации и авторизации в хранилище. Он содержит:</para>

        <variablelist>
          <varlistentry>
            <term><literal>store-passwords</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This instructs Subversion to cache, or not to
                cache, passwords that are supplied by the user in
                response to server authentication challenges.  The
                default value is <literal>yes</literal>.  Set this to
                <literal>no</literal> to disable this on-disk password
                caching.  You can override this option for a single
                instance of the <command>svn</command> command using
                the <option>-&#64738;-no-auth-cache</option> command-line
                parameter (for those subcommands that support it).
                For more information, see <xref
                linkend="svn.serverconfig.netmodel.credcache"/>.</para>
              @ENGLISH }}} -->
              <para>Устанавливает, используется или не используется
                кеширование паролей, введенных пользователем в ответ на
                запрос при аутентификации на сервере. Значением по умолчанию
                является <literal>да</literal>. Для запрета кеширования
                паролей на диск установите этот параметр в
                <literal>нет</literal>. Для отдельного запуска
                <command>svn</command> этот параметр можно переопределить,
                используя параметр командной строки
                <option>--no-auth-cache</option> (для тех команд, которые его
                поддерживают). За более подробной информацией обратитесь к
                разделу <xref linkend="svn.serverconfig.netmodel.credcache"/>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>store-auth-creds</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This setting is the same as
                <literal>store-passwords</literal>, except that it
                enables or disables disk-caching of
                <emphasis>all</emphasis> authentication information:
                usernames, passwords, server certificates, and any
                other types of cacheable credentials.</para>
              @ENGLISH }}} -->
              <para>Этот параметр такой же как и
                <literal>store-passwords</literal>, за исключением того,
                что он разрешает или запрещает дисковое кеширование
                <emphasis>всей</emphasis> информации для аутентификации:
                имен пользователей, паролей, серверных сертификатов и всей
                другой кешируемой информации.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <!-- @ENGLISH {{{
        <para>The <literal>helpers</literal> section controls which
          external applications Subversion uses to accomplish its
          tasks.  Valid options in this section are:</para>
        @ENGLISH }}} -->
        <para>Раздел <literal>helpers</literal> определяет, какие внешние
          приложения, при выполнении своих задач, будет использовать
          Subversion. Доступные параметры:</para>

        <variablelist>
          <varlistentry>
            <term><literal>editor-cmd</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies the program Subversion will use to
                query the user for a log message during a commit
                operation, such as when using <command>svn
                commit</command> without either the
                <option>-&#64738;-message</option> (<option>-m</option>) or
                <option>-&#64738;-file</option> (<option>-F</option>) options.
                This program is also used with the <command>svn
                propedit</command> command&mdash;a temporary file is
                populated with the current value of the property the
                user wishes to edit, and the edits take place right
                in the editor program (see <xref
                linkend="svn.advanced.props" />).  This option's default
                value is empty.  The order of priority for determining the
                editor command is:</para>
              <orderedlist>
                <listitem>
                  <para>Command-line option <literal>-&#64738;-editor-cmd</literal></para>
                </listitem>
                <listitem>
                  <para>Environment variable <literal>SVN_EDITOR</literal></para>
                </listitem>
                <listitem>
                  <para>Configuration option <literal>editor-cmd</literal></para>
                </listitem>
                <listitem>
                  <para>Environment variable <literal>VISUAL</literal></para>
                </listitem>
                <listitem>
                  <para>Environment variable <literal>EDITOR</literal></para>
                </listitem>
                <listitem>
                  <para>Possibly, a default value built in to Subversion
                    (not present in the official builds)</para>
                </listitem>
              </orderedlist>
              <para>The value of any of these options or variables is
                (unlike <literal>diff-cmd</literal>) the beginning of a
                command line to be executed by the shell.  Subversion
                appends a space and the pathname of the temporary file to be
                edited.  The editor should modify the temporary file and
                return a zero exit code to indicate success.</para>
              @ENGLISH }}} -->
              <para>Определяет программу, которую будет использовать
                Subversion для ввода лог сообщений, в тех случаях, когда
                <command>svn commit</command> используется без параметров
                <option>--message</option> (<option>-m</option>) или
                <option>--file</option> (<option>-F</option>). Эта же
                программа используется с командой <command>svn
                propedit</command> &mdash; вызывается временный файл,
                содержащий текущее значение редактируемого пользователем
                свойства и редактирование выполняется прямо в
                программе-редакторе (см. <xref
                linkend="svn.advanced.props" />). По умолчанию значение
                этого свойства не установлено. Порядок определения
                используемого редактора следующий:</para>
              <orderedlist>
                <listitem>
                  <para>Command-line option <literal>--editor-cmd</literal></para>
                </listitem>
                <listitem>
                  <para>Environment variable <literal>SVN_EDITOR</literal></para>
                </listitem>
                <listitem>
                  <para>Configuration option <literal>editor-cmd</literal></para>
                </listitem>
                <listitem>
                  <para>Environment variable <literal>VISUAL</literal></para>
                </listitem>
                <listitem>
                  <para>Environment variable <literal>EDITOR</literal></para>
                </listitem>
                <listitem>
                  <para>Possibly, a default value built in to Subversion
                    (not present in the official builds)</para>
                </listitem>
              </orderedlist>
              <para>The value of any of these options or variables is
                (unlike <literal>diff-cmd</literal>) the beginning of a
                command line to be executed by the shell.  Subversion
                appends a space and the pathname of the temporary file to be
                edited.  The editor should modify the temporary file and
                return a zero exit code to indicate success.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>diff-cmd</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies the absolute path of a differencing
                program, used when Subversion generates
                <quote>diff</quote> output (such as when using the
                <command>svn diff</command> command).  By default
                Subversion uses an internal differencing
                library&mdash;setting this option will cause it to
                perform this task using an external program.  See
                <xref linkend="svn.advanced.externaldifftools"/> for
                more details on using such programs.</para>
              @ENGLISH }}} -->
              <para>Здесь указывается абсолютный путь к программе
                определения отличий, используемой, Subversion для
                <quote>diff</quote>-вывода (такого как при использовании
                команды <command>svn diff</command>). По умолчанию для
                определения отличий Subversion использует внутреннюю
                библиотеку &mdash; установка этого параметра
                заставит ее использовать внешнюю программу. Подробнее
                об использовании таких программ читайте в разделе
                <xref linkend="svn.advanced.externaldifftools"/>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>diff3-cmd</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This specifies the absolute path of a three-way
                differencing program.  Subversion uses this program to
                merge changes made by the user with those received
                from the repository.  By default Subversion uses an
                internal differencing library&mdash;setting this
                option will cause it to perform this task using an
                external program.  See <xref
                linkend="svn.advanced.externaldifftools"/> for more
                details on using such programs.</para>
              @ENGLISH }}} -->
              <para>Здесь указывается абсолютный путь к программе
                трехстороннего сравнения. Subversion использует эту
                программу при объединении изменений, сделанных
                пользователем, с теми, которые были получены из
                хранилища. По умолчанию для определения отличий Subversion
                использует внутреннюю библиотеку &mdash; установка этого
                параметра заставит ее использовать внешнюю программу.
                Подробнее об использовании таких программ читайте в разделе
                <xref linkend="svn.advanced.externaldifftools"/>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>diff3-has-program-arg</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This flag should be set to <literal>true</literal>
                if the program specified by the
                <literal>diff3-cmd</literal> option accepts a
                <option>-&#64738;-diff-program</option> command-line
                parameter.</para>
              @ENGLISH }}} -->
              <para>Этот флаг должен быть установлен в
                <literal>true</literal> если программа, указанная в
                параметре <literal>diff3-cmd</literal> использует
                параметр командной строки
                <option>--diff-program</option>.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <!-- @ENGLISH {{{
        <para>The <literal>tunnels</literal> section allows you to
          define new tunnel schemes for use with
          <command>svnserve</command> and <literal>svn://</literal>
          client connections.  For more details, see <xref
          linkend="svn.serverconfig.svnserve.sshauth"/>.</para>

        <para>The <literal>miscellany</literal> section is where
          everything that doesn't belong elsewhere winds up.
          <footnote>
            <para>Anyone for potluck dinner?</para>
          </footnote>
          In this section, you can find:</para>
        @ENGLISH }}} -->
        <para>Раздел <literal>tunnels</literal> позволяет определить
          новые схемы туннелирования при использовании
          <command>svnserve</command> и клиентских подключений через
          <literal>svn://</literal>. За более подробной информацией
          обращайтесь в раздел <xref
          linkend="svn.serverconfig.svnserve.sshauth"/>.</para>

        <para>Все что не попало в другие разделы собирается в разделе
          <literal>miscellany</literal><footnote><para>Anyone for potluck
          dinner?</para></footnote>. В этом разделе можно найти:</para>

        <variablelist>
          <varlistentry>
            <term><literal>global-ignores</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>When running the <command>svn status</command>
                command, Subversion lists unversioned files and
                directories along with the versioned ones, annotating
                them with a <literal>?</literal> character (see <xref
                linkend="svn.tour.cycle.examine.status" />).  Sometimes, it can
                be annoying to see uninteresting, unversioned
                items&mdash;for example, object files that result from
                a program's compilation&mdash;in this display.  The
                <literal>global-ignores</literal> option is a list of
                whitespace-delimited globs which describe the names of
                files and directories that Subversion should not
                display unless they are versioned.  The default value
                is <literal>*.o *.lo *.la #*# .*.rej *.rej .*~ *~
                .#* .DS_Store</literal>.</para>

              <para>As well as <command>svn status</command>, the
                <command>svn add</command> and <command>svn import</command>
                commands also ignore files that match the list
                when they are scanning a directory.  You can override this
                behaviour for a single instance of any of these commands
                by explicitly specifying the file name, or by using
                the <option>-&#64738;-no-ignore</option> command-line flag.</para>

              <para>For information on more fine-grained control of
                ignored items, see <xref linkend="svn.advanced.props.special.ignore"
                />.</para>
              @ENGLISH }}} -->
              <para>Про выполнении команды <command>svn status</command>,
                Subversion перечисляет не версионированные файлы и
                директории вместе с версионированными, отмечая их
                символом <literal>?</literal> (см. <xref
                linkend="svn.tour.cycle.examine.status" />). Просмотр
                не интересных, не версионированных элементов при просмотре
                может раздражать &mdash; например объектные файлы, полученные
                в результате компиляции программы. Параметр
                <literal>global-ignores</literal> является перечислением
                разделннных пробелом обобщений, представляющих имена файлов и
                директорий которые Subversion не должна показывать, если они
                не версионированны. Значением, присвоенным по умолчанию,
                является <literal>*.o *.lo *.la #*# .*.rej *.rej .*~ *~
                .#* .DS_Store</literal>.</para>

              <para>Также как и <command>svn status</command>, команды
                <command>svn add</command> и <command>svn import</command>
                при просмотре директорий тоже игнорируют файлы, подходящие
                к этому списку. Можно переопределить этот параметр, используя
                флаг командной строки <option>--no-ignore</option>. Более
                подробнее о контроле игнорирования см. <xref
                linkend="svn.advanced.props.special.ignore" />.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>enable-auto-props</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This instructs Subversion to automatically set
                properties on newly added or imported files.  The
                default value is <literal>no</literal>, so set this to
                <literal>yes</literal> to enable Auto-props.
                The <literal>auto-props</literal> section of this file
                specifies which properties are to be set on which files.</para>
              @ENGLISH }}} -->
              <para>Определяет автоматическую установку свойств
                для вновь добавляемых или импортированных файлов.
                Значением по умолчанию является <literal>no</literal>,
                поэтому для разрешения авто-свойств установите
                <literal>yes</literal>. Раздел <literal>auto-props</literal>
                этого файла определяет, какие свойства и для каких файлов
                должны устанавливаться.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>log-encoding</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>This variable sets the default character set
                encoding for commit log messages.  It's a permanent
                form of the <option>-&#64738;-encoding</option> option (see
                <xref linkend="svn.ref.svn.sw"/>).  The Subversion
                repository stores log messages in UTF-8, and assumes
                that your log message is written using your operating
                system's native locale.  You should specify a
                different encoding if your commit messages are written
                in any other encoding.</para>
              @ENGLISH }}} -->
              <para>Эта переменная задает набор символов кодировки для
                лог-сообщений фиксаций. Это перманентная форма параметра
                <option>--encoding</option> (см. <xref
                linkend="svn.ref.svn.sw"/>). Хранилище Subversion
                хранит лог-сообщения в UTF8, и предполагает, что ваше
                лог-сообщение написано используя родную локаль операционной
                ситемы. Кодировку необходимо указывать, если
                используется любая другая кодировка.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>use-commit-times</literal></term>
            <listitem>
              <!-- @ENGLISH {{{
              <para>Normally your working copy files have timestamps
                that reflect the last time they were touched by any
                process, whether that be your own editor or by some
                <command>svn</command> subcommand.  This is generally
                convenient for people developing software, because
                build systems often look at timestamps as a way of
                deciding which files need to be recompiled.</para>

              <para>In other situations, however, it's sometimes nice
                for the working copy files to have timestamps that
                reflect the last time they were changed in the
                repository.  The <command>svn export</command> command
                always places these <quote>last-commit
                timestamps</quote> on trees that it produces.  By
                setting this config variable to
                <literal>yes</literal>, the <command>svn
                checkout</command>, <command>svn update</command>,
                <command>svn switch</command>, and <command>svn
                revert</command> commands will also set last-commit
                timestamps on files that they touch.</para>
              @ENGLISH }}} -->
              <para>Как правило, файлы рабочей копии имеют отметки
                времени, отражающие время последнего обращения к
                ним какого-либо процесса, был ли это ваш редактор,
                или подкоманды <command>svn</command>. Это должно
                быть близко людям, разрабатывающим программное
                обеспечение, потому, что как правило, системы
                сборки определяют по метке времени какие файлы
                требуют перекомпиляции.</para>

              <para>С другой стороны, иногда бывает выгодно, что бы
                рабочие файлы имели метки времени отражающие время их
                последнего изменения в хранилище. Команда <command>svn
                export</command> всегда устанавливает <quote>метку времени
                последней фиксации</quote> для создаваемого ею дерева
                файлов. При установке значения этой переменной в
                <literal>yes</literal> команды <command>svn
                checkout</command>, <command>svn update</command>,
                <command>svn switch</command> и <command>svn
                revert</command> для используемых ими файлов,
                так же будут устанавливать метку времени последней
                фиксации.</para>
            </listitem>
          </varlistentry>

    <!-- ###TODO add description of other options shown in example
          registry file, e.g., template-root -->
        </variablelist>

        <!-- @ENGLISH {{{
        <para>The <literal>auto-props</literal> section controls
          the Subversion client's ability to automatically set
          properties on files when they are added or imported.
          It contains any number of key-value pairs in the
          format <literal>PATTERN = PROPNAME=PROPVALUE</literal>
          where <literal>PATTERN</literal> is a file pattern
          that matches a set of filenames and the rest of the
          line is the property and its value.  Multiple matches
          on a file will result in multiple propsets for that
          file; however, there is no guarantee that auto-props
          will be applied in the order in which they are listed
          in the config file, so you can't have one rule
          <quote>override</quote> another.  You can find several
          examples of auto-props usage in the
          <filename>config</filename> file.  Lastly, don't
          forget to set <literal>enable-auto-props</literal> to
          <literal>yes</literal> in the <literal>miscellany</literal>
          section if you want to enable auto-props.</para>
        @ENGLISH }}} -->
        <para>Раздел <literal>auto-props</literal> определяет возможность
          Subversion-клиента автоматически устанавливать свойства файлов,
          когда они добавлялись или импортировались. Он содержит любое
          количество пар ключ-значение, в формате
          <literal>PATTERN = PROPNAME=PROPVALUE</literal>, где
          <literal>PATTERN</literal> является файловым шаблоном,
          соответствующих набору имен файлов, а остальная часть строки
          является свойством и его значением. Множественные совпадения
          для одного файла приведут к множественной установке свойств для
          этого файла; однако не гарантируется, что порядок установки
          авто-свойств будет таким же в каком они указаны в файле
          конфигурации, поэтому нельзя будет одним правилом
          <quote>перекрыть</quote> другое. Несколько примеров использования
          авто-свойств можно найти в файле <filename>config</filename>.
          Наконец, если хотите использовать авто-свойства, не забудьте в
          разделе <literal>miscellany</literal> установить
          <literal>enable-auto-props</literal> в
          <literal>yes</literal>.</para>

      </sect3>

    </sect2>
  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.advanced.l10n">
    <title>Localization</title>

    <para><firstterm>Localization</firstterm> is the act of making
      programs behave in a region-specific way.  When a program
      formats numbers or dates in a way specific to your part of the
      world, or prints messages (or accepts input) in your native
      language, the program is said to
      be <firstterm>localized</firstterm>.  This section describes
      steps Subversion has made towards localization.</para>

    <!-- =============================================================== -->
    <sect2 id="svn.advanced.l10n.understanding">
      <title>Understanding locales</title>

      <para>Most modern operating systems have a notion of the
        <quote>current locale</quote>&mdash;that is, the region or
        country whose localization conventions are honored.  These
        conventions&mdash;typically chosen by some runtime
        configuration mechanism on the computer&mdash;affect the way
        in which programs present data to the user, as well as the way
        in which they accept user input.</para>

      <para>On Unix-like systems, you can check the values of the
        locale-related runtime configuration options by running the
        <command>locale</command> command:</para>

      <screen>
$ locale
LANG=
LC_COLLATE="C"
LC_CTYPE="C"
LC_MESSAGES="C"
LC_MONETARY="C"
LC_NUMERIC="C"
LC_TIME="C"
LC_ALL="C"
</screen>

      <para>The output is a list of locale-related environment
        variables and their current values.  In this example, the
        variables are all set to the default <literal>C</literal>
        locale, but users can set these variables to specific
        country/language code combinations.  For example, if one were
        to set the <literal>LC_TIME</literal> variable to
        <literal>fr_CA</literal>, then programs would know to present
        time and date information formatted according a
        French-speaking Canadian's expectations.  And if one were to
        set the <literal>LC_MESSAGES</literal> variable to
        <literal>zh_TW</literal>, then programs would know to present
        human-readable messages in Traditional Chinese.  Setting the
        <literal>LC_ALL</literal> variable has the effect of changing
        every locale variable to the same value.  The value of
        <literal>LANG</literal> is used as a default value for any
        locale variable that is unset.  To see the list of available
        locales on a Unix system, run the command <command>locale
        -a</command>.</para>

      <para>On Windows, locale configuration is done via the
        <quote>Regional and Language Options</quote> control panel
        item.  There you can view and select the values of individual
        settings from the available locales, and even customize (at a
        sickening level of detail) several of the display formatting
        conventions.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.advanced.l10n.svnuse">
      <title>Subversion's use of locales</title>

      <para>The Subversion client, <command>svn</command>, honors the
        current locale configuration in two ways.  First, it notices
        the value of the <literal>LC_MESSAGES</literal> variable and
        attempts to print all messages in the specified language.  For
        example:</para>

      <screen>
$ export LC_MESSAGES=de_DE
$ svn help cat
cat: Gibt den Inhalt der angegebenen Dateien oder URLs aus.
Aufruf: cat ZIEL[@REV]...
&hellip;
</screen>

      <para>This behavior works identically on both Unix and Windows
        systems.  Note, though, that while your operating system might
        have support for a certain locale, the Subversion client still
        may not be able to speak the particular language.  In order to
        produce localized messages, human volunteers must provide
        translations for each language.  The translations are written
        using the GNU gettext package, which results in translation
        modules that end with the <filename>.mo</filename> filename
        extension.  For example, the German translation file is named
        <filename>de.mo</filename>.  These translation files are
        installed somewhere on your system.  On Unix, they typically
        live in <filename>/usr/share/locale/</filename>, while
        on Windows they're often found in the
        <filename>\share\locale\</filename> folder in Subversion's
        installation area.  Once installed, a module is named after
        the program it provides translations for.  For example, the
        <filename>de.mo</filename> file may ultimately end up
        installed as
        <filename>/usr/share/locale/de/LC_MESSAGES/subversion.mo</filename>.
        By browsing the installed <filename>.mo</filename> files, you
        can see which languages the Subversion client is able to
        speak.</para>

      <para>The second way in which the locale is honored involves how
        <command>svn</command> interprets your input.  The repository
        stores all paths, filenames, and log messages in Unicode,
        encoded as UTF-8.  In that sense, the repository is
        <firstterm>internationalized</firstterm>&mdash;that is, the
        repository is ready to accept input in any human language.
        This means, however, that the Subversion client is responsible
        for sending only UTF-8 filenames and log messages into the
        repository.  In order to do this, it must convert the data
        from the native locale into UTF-8.</para>

      <para>For example, suppose you create a file named
        <filename>caffè.txt</filename>, and then when committing the
        file, you write the log message as <quote>Adesso il caffè è
        più forte</quote>.  Both the filename and log message contain
        non-ASCII characters, but because your locale is set to
        <literal>it_IT</literal>, the Subversion client knows to
        interpret them as Italian.  It uses an Italian character set
        to convert the data to UTF-8 before sending them off to the
        repository.</para>

      <para>Note that while the repository demands UTF-8 filenames and
        log messages, it <emphasis>does not</emphasis> pay attention
        to file contents.  Subversion treats file contents as opaque
        strings of bytes, and neither client nor server makes an
        attempt to understand the character set or encoding of the
        contents.</para>

      <sidebar>
        <title>Character set conversion errors</title>

        <para>While using Subversion, you might get hit with an error
          related to character set conversions:</para>

        <screen>
svn: Can't convert string from native encoding to 'UTF-8':
&hellip;
svn: Can't convert string from 'UTF-8' to native encoding:
&hellip;
</screen>

        <para>Errors like this typically occur when the Subversion
          client has received a UTF-8 string from the repository, but
          not all of the characters in that string can be represented
          using the encoding of the current locale.  For example, if
          your locale is <literal>en_US</literal> but a collaborator
          has committed a Japanese filename, you're likely to see this
          error when you receive the file during an <command>svn
          update</command>.</para>

        <para>The solution is either to set your locale to something
          which <emphasis>can</emphasis> represent the incoming UTF-8
          data, or to change the filename or log message in the
          repository.  (And don't forget to slap your collaborator's
          hand&mdash;projects should decide on common languages ahead of
          time, so that all participants are using the same
          locale.)</para>
      </sidebar>

    </sect2>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.advanced.externaldifftools">
    <title>Using External Differencing Tools</title>

    <para>The presence of <option>--diff-cmd</option> and
      <option>--diff3-cmd</option> options, and similarly named
      runtime configuration parameters (see <xref
      linkend="svn.advanced.confarea.opts.config"/>), can lead to a
      false notion of how easy it is to use external differencing (or
      <quote>diff</quote>) and merge tools with Subversion.  While
      Subversion can use most of popular such tools available, the
      effort invested in setting this up often turns out to be
      non-trivial.</para>

    <para>The interface between Subversion and external diff and merge
      tools harkens back to a time when Subversion's only contextual
      differencing capabilities were built around invocations of the
      GNU diffutils toolchain, specifically the
      <command>diff</command> and <command>diff3</command> utilities.
      To get the kind of behavior Subversion needed, it called these
      utilities with more than a handful of options and parameters,
      most of which were quite specific to the utilities.  Some time
      later, Subversion grew its own internal differencing library,
      and as a failover mechanism,
      <footnote>
        <para>Subversion developers are good, but even the best make
          mistakes.</para>
      </footnote>
      the <option>--diff-cmd</option> and <option>--diff3-cmd</option>
      options were added to the Subversion command-line client so
      users could more easily indicate that they preferred to use the
      GNU diff and diff3 utilities instead of the newfangled internal
      diff library.  If those options were used, Subversion would
      simply ignore the internal diff library, and fall back to
      running those external programs, lengthy argument lists and all.
      And that's where things remain today.</para>

    <para>It didn't take long for folks to realize that having such
      easy configuration mechanisms for specifying that Subversion
      should use the external GNU diff and diff3 utilities located at
      a particular place on the system could be applied toward the use
      of other diff and merge tools, too.  After all, Subversion
      didn't actually verify that the things it was being told to run
      were members of the GNU diffutils toolchain.  But the only
      configurable aspect of using those external tools is their
      location on the system&mdash;not the option set, parameter
      order, etc.  Subversion continues throwing all those GNU utility
      options at your external diff tool regardless of whether or not
      that program can understand those options.  And that's where
      things get unintuitive for most users.</para>

    <para>The key to using external diff and merge tools (other than
      GNU diff and diff3, of course) with Subversion is to use wrapper
      scripts which convert the input from Subversion into something
      that your differencing tool can understand, and then to convert
      the output of your tool back into a format which Subversion
      expects&mdash;the format that the GNU tools would have used.
      The following sections cover the specifics of those
      expectations.</para>

    <note>
      <para>The decision on when to fire off a contextual diff or
        merge as part of a larger Subversion operation is made
        entirely by Subversion, and is affected by, among other
        things, whether or not the files being operated on are
        human-readable as determined by their
        <literal>svn:mime-type</literal> property.  This means, for
        example, that even if you had the niftiest Microsoft
        Word-aware differencing or merging tool in the Universe, it
        would never be invoked by Subversion so long as your versioned
        Word documents had a configured MIME type that denoted that
        they were not human-readable (such as
        <literal>application/msword</literal>).  For more about MIME
        type settings, see <xref
        linkend="svn.advanced.props.special.mime-type"/></para>
    </note>

    <!-- =============================================================== -->
    <sect2 id="svn.advanced.externaldifftools.diff">
      <title>External diff</title>

      <para>Subversion calls external diff programs with parameters
        suitable for the GNU diff utility, and expects only that the
        external program return with a successful error code.  For
        most alternative diff program, only the sixth and seventh
        arguments, the paths of the files which represent the left and
        right sides of the diff, respectively, are of interest.  Note
        that Subversion runs the diff program once per modified file
        covered by the Subversion operation, so if your program runs
        in an asynchronous fashion (or <quote>backgrounded</quote>),
        you might have several instances of it all running
        simultaneously.  Finally, Subversion expects that your program
        return an errorcode of 1 if your program detected differences,
        or 0 if it did not&mdash;any other errorcode is considered a
        fatal error.
        <footnote>
          <para>The GNU diff manual page puts it this way: <quote>An
            exit status of 0 means no differences were found, 1 means some
            differences were found, and 2 means trouble.</quote></para>
        </footnote>
      </para>

      <para><xref linkend="svn.advanced.externaldifftools.diff.ex-1"/>
        and <xref linkend="svn.advanced.externaldifftools.diff.ex-2"/>
        are templates for external diff tool wrappers in the Bourne
        shell and Windows batch scripting languages,
        respectively.</para>

      <example id="svn.advanced.externaldifftools.diff.ex-1">
        <title>diffwrap.sh</title>
        <programlisting>
#!/bin/sh

# Configure your favorite diff program here.
DIFF="/usr/local/bin/my-diff-tool"

# Subversion provides the paths we need as the sixth and seventh
# parameters.
LEFT=${6}
RIGHT=${7}

# Call the diff command (change the following line to make sense for
# your merge program).
$DIFF --left $LEFT --right $RIGHT

# Return an errorcode of 0 if no differences were detected, 1 if some were.
# Any other errorcode will be treated as fatal.
</programlisting>
      </example>

      <example id="svn.advanced.externaldifftools.diff.ex-2">
        <title>diffwrap.bat</title>
        <programlisting>
@ECHO OFF

REM Configure your favorite diff program here.
SET DIFF="C:\Program Files\Funky Stuff\My Diff Tool.exe"

REM Subversion provides the paths we need as the sixth and seventh
REM parameters.
SET LEFT=%6
SET RIGHT=%7

REM Call the diff command (change the following line to make sense for
REM your merge program).
%DIFF% --left %LEFT% --right %RIGHT%

REM Return an errorcode of 0 if no differences were detected, 1 if some were.
REM Any other errorcode will be treated as fatal.
</programlisting>
      </example>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.advanced.externaldifftools.diff3">
      <title>External diff3</title>

      <para>Subversion calls external merge programs with parameters
        suitable for the GNU diff3 utility, expecting that the
        external program return with a successful error code and that
        the full file contents which result from the completed merge
        operation are printed on the standard output stream (so that
        Subversion can redirect them into the appropriate version
        controlled file).  For most alternative merge programs, only
        the ninth, tenth, and eleventh arguments, the paths of the
        files which represent the <quote>mine</quote>,
        <quote>older</quote>, and <quote>yours</quote> inputs,
        respectively, are of interest.  Note that because Subversion
        depends on the output of your merge program, you wrapper
        script must not exit before that output has been delivered to
        Subversion.  When it finally does exit, it should return an
        errorcode of 0 if the merge was successful, or 1 if unresolved
        conflicts remain in the output&mdash;any other errorcode is
        considered a fatal error.</para>

      <para><xref linkend="svn.advanced.externaldifftools.diff3.ex-1"/>
        and <xref linkend="svn.advanced.externaldifftools.diff3.ex-2"/> are
        templates for external merge tool wrappers in the Bourne shell
        and Windows batch scripting languages, respectively.</para>

      <example id="svn.advanced.externaldifftools.diff3.ex-1">
        <title>diff3wrap.sh</title>
        <programlisting>
#!/bin/sh

# Configure your favorite diff3/merge program here.
DIFF3="/usr/local/bin/my-merge-tool"

# Subversion provides the paths we need as the ninth, tenth, and eleventh
# parameters.
MINE=${9}
OLDER=${10}
YOURS=${11}

# Call the merge command (change the following line to make sense for
# your merge program).
$DIFF3 --older $OLDER --mine $MINE --yours $YOURS

# After performing the merge, this script needs to print the contents
# of the merged file to stdout.  Do that in whatever way you see fit.
# Return an errorcode of 0 on successful merge, 1 if unresolved conflicts
# remain in the result.  Any other errorcode will be treated as fatal.
</programlisting>
      </example>

      <example id="svn.advanced.externaldifftools.diff3.ex-2">
        <title>diff3wrap.bat</title>
        <programlisting>
@ECHO OFF

REM Configure your favorite diff3/merge program here.
SET DIFF3="C:\Program Files\Funky Stuff\My Merge Tool.exe"

REM Subversion provides the paths we need as the ninth, tenth, and eleventh
REM parameters.  But we only have access to nine parameters at a time, so we
REM shift our nine-parameter window twice to let us get to what we need.
SHIFT
SHIFT
SET MINE=%7
SET OLDER=%8
SET YOURS=%9

REM Call the merge command (change the following line to make sense for
REM your merge program).
%DIFF3% --older %OLDER% --mine %MINE% --yours %YOURS%

REM After performing the merge, this script needs to print the contents
REM of the merged file to stdout.  Do that in whatever way you see fit.
REM Return an errorcode of 0 on successful merge, 1 if unresolved conflicts
REM remain in the result.  Any other errorcode will be treated as fatal.
</programlisting>
      </example>

    </sect2>
  </sect1>

</chapter>

<!--
local variables:
sgml-parent-document: ("book.xml" "chapter")
end:
vim: tw=78:ft=svnbook
-->
