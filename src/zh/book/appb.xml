<appendix id="svn.webdav">
<title>WebDAV和自动版本化</title>

  <simplesect>

    <para>WebDAV是HTTP的一个扩展，作为一个文件共享的标准不断发展。当今的操作系统变得极端的web化，许多内置了对装配WebDAV服务器导出的<quote>共享</quote>的支持。
   </para>

    <para>如果你使用Apache/mod_dav_svn作为你的Subversion网络服务器，某种程度上，你也是在运行一个WebDAV服务器。这个附录提供了这种协议一些背景知识，Subversion如何使用它，Subversion如何和认识WebDAV的软件交互工作。
   </para>

  </simplesect>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.webdav.basic">
    <title>WebDAV基本概念</title> 

    <para>这个小节提供了对WebDAV背后思想的一个非常简短和普通的总体看法，为理解WebDAV在客户端和服务器之间的兼容性问题打下基础。
   </para>

    <!-- =============================================================== -->
    <sect2 id="svn.webdav.basic.original">
      <title>最初的WebDAV</title>

      <para>RFC 2518为HTTP 1.1定义了一组概念和附加扩展方法来把web变成一个更加普遍的读/写媒体，基本思想是一个WebDAV兼容的web服务器可以像普通的文件服务器一样工作；客户端可以装配类似于NFS或SMB的WebDAV共享文件夹。
      </para>
      
      <para>悲惨的是，WebDAV规范RFC 2518并<emphasis>没有</emphasis>提供任何版本控制模型，尽管DAV中有<quote>V</quote>。基本的DAV客户端和服务器只是假定每个文件或目录只有一个版本存在，可以重复的覆盖。<footnote><para>因为这个原因，一些人开玩笑说WebDAV的客户端是<quote>WebDA</quote>客户端！
        </para></footnote></para>
  
      <para>这是基本的WebDAV引入的概念和术语：
      </para>

      <variablelist>

        <varlistentry>
          <term>Resources</term>
          <listitem>
            <para> WebDAV lingo refers to any server-side object
              (that can be described with a URI) as a
              <firstterm>resource</firstterm>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>新的写方法</term>
          <listitem>
            <para>超出了标准HTTP的<literal>PUT</literal>方法（用来创建和覆盖web资源），WebDAV定义了新的<literal>COPY</literal>和<literal>MOVE</literal>方法用来复制或重新组织资源。
           </para>
          </listitem>
        </varlistentry>
                
        <varlistentry>
          <term>集合</term>
          <listitem>
            <para><firstterm>collection</firstterm>是一个简单的WebDAV术语用来表示一组资源，在大多数情况下可以看作一个目录，文件资源可以使用<literal>PUT</literal>方法写或创建，而集合资源使用<literal>MKCOL</literal>方法创建。
           </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>属性</term>
          <listitem>
            <para>这与Subversion中是同一个思想&mdash;附加在文件和集合上的元数据，一个客户端可以使用新方法<literal>PROPFIND</literal>列出或检索附加在一个资源上的属性，也可以使用<literal>PROPPATCH</literal>方法修改这些属性。一些属性是完全由用户控制的（例如，一个<quote>color</quote>属性），还有一些是WebDAV服务器创建和控制的（例如，一个保存文件最后修改时间的属性）。前一种叫做<quote>dead属性</quote>，后一种叫做<quote>live属性</quote>。
           </para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>锁定</term>
          <listitem>
            <para>WebDAV服务器可以决定为客户端提供一个锁定特性&mdash;这部分的规范是可选的，尽管大多数WebDAV服务器提供了这个特性。如果提供这个特性，客户端可以使用新的<literal>LOCK</literal>和<literal>UNLOCK</literal>方法来调节访问资源的过程，在大多数情况下是使用独占写锁（在<xref linkend="svn.basic.vsn-models.lock-unlock"/>讨论的），尽管在一些服务器实现里共享写锁也是可以的。
           </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Access control</term>
          <listitem>             
            <para>A more recent specification (RFC 3744) defines a
              system for defining access control lists (ACLs) on
              WebDAV resources.  Some clients and servers have begun
              to implement this feature.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.webdav.basic.deltav">
      <title>DeltaV扩展</title>
  
      <para>因为RFC 2518漏下了版本概念，另一个委员会留下来负责撰写RFC 3253来添加WebDAV的版本化，也就是<quote>DeltaV</quote>。WebDAV/DeltaV客户端和服务器经常叫做<quote>DeltaV</quote>客户端和服务器，因为DeltaV暗含了基本的WebDAV。
      </para>

      <para>DeltaV引入了完全的新的首字母缩写，但并不是被逼迫的，想法相当的直接：
     </para>

      <variablelist>

        <varlistentry>
          <term>每资源的版本化</term>
          <listitem>
            <para>像CVS和其他版本控制系统，DeltaV假定每个资源有一个潜在的无穷的状态，一个客户端可以使用<literal>VERSION-CONTROL</literal>放置一个版本控制之下的资源。
           </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>服务器端的工作拷贝模型</term>
          <listitem>
            <para>一些DeltaV服务器支持在服务器创建虚拟工作区，所有的工作在这里执行。客户端使用<literal>MKWORKSPACE</literal>方法来创建私有区域，然后他们说明修改特定的资源，<quote>把它们检出到</quote>工作区，编辑，然后再次<quote>检入</quote>。在HTTP术语里，方法的顺序可能是<literal>CHECKOUT</literal>、<literal>PUT</literal>、<literal>CHECKIN</literal>。
           </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>客户端工作拷贝模型</term>
          <listitem>
            <para>一些DeltaV服务器也支持客户端可以有完全特定私有工作拷贝的思想，当客户端希望提交修改到服务器，它通过使用<literal>MKACTIVITY</literal>方法创建一个临时服务器事务（叫做一个<firstterm>活动</firstterm>）开始。然后客户端在每个希望修改和发送<literal>PUT</literal>请求的资源上执行一个<literal>CHECKOUT</literal>操作，最后，客户端对每个工作资源执行一个<literal>CHECKIN</literal>，在每个VCR创建了一个VR，并且整个活动会被删除。
           </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>配置</term>
          <listitem>
            <para>DeltaV允许你定义叫做<quote>配置</quote>的灵活的资源集合，不需要对应特定的目录。一个配置可以指向特定的文件的版本，然后可以做<quote>基线</quote>快照，这很像标签。
           </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>扩展性</term>
          <listitem>
            <para>DeltaV定义了新方法<literal>REPORT</literal>，允许客户端和服务器执行自定义的数据交换。尽管DeltaV定义了一系列客户端可以请求的标准历史报告，服务器也可以自由定义报告。客户端发送一个带有包含自定义数据的完全标记的XML主体的<literal>REPORT</literal>请求；假定服务器理解特定的报告类型，它使用一个等同的XML主体来响应，这个技术与XML-RPC很类似。
           </para>
          </listitem>
        </varlistentry>
       
      </variablelist>
      
    </sect2>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.webdav.svn-and-deltav">
    <title>Subversion和DeltaV</title> 
    
    
    <para>The original WebDAV standard has been widely successful.
      Every modern computer operating system has a general WebDAV
      client built-in (details to follow), and a number of popular
      standalone applications are also able to speak WebDAV &mdash;
      Microsoft Office, Dreamweaver, and Photoshop to name a few.  On
      the server end, the Apache webserver has been able to provide
      WebDAV services since 1998 and is considered the de-facto
      open-source standard.  There are several other commercial WebDAV
      servers available, including Microsoft's own IIS.</para>

    <para>DeltaV, unfortunately, has not been so successful.  It's
      very difficult to find any DeltaV clients or servers.  The few
      that do exist are relatively unknown commercial products, and
      thus it's very difficult to test interoperability.  It's not
      entirely clear as to why DeltaV has remained stagnant.  Some
      argue that the specification is just too complex, others argue
      that while WebDAV's features have mass appeal (even the least
      technical users appreciate network file-sharing), version
      control features aren't interesting or necessary for most users.
      Finally, some have argued that DeltaV remains unpopular because
      there's still no open-source server product which implements
      it.</para>
   
    <para>When Subversion was still in its design phase, it seemed
      like a great idea to use Apache httpd as the main network
      server.  It already had a module to provide WebDAV services.
      DeltaV was a relatively new specification.  The hope was that
      the Subversion server module (mod_dav_svn) would eventually
      evolve into an open-source DeltaV reference implementation.
      Unfortunately, DeltaV has a very specific versioning model that
      doesn't quite line up with Subversion's model.  Some concepts
      were mappable, others were not.</para>

    <para>The upshot is that</para>

    <orderedlist>

      <listitem>
        <para>The Subversion client is not a fully-implemented DeltaV
          client.</para>
        
        <para>The client needs certain things from the server that
          DeltaV cannot provide, and thus is largely dependent on a
          number of Subversion-specific <literal>REPORT</literal>
          requests that only mod_dav_svn understands.</para>
      </listitem>

      <listitem>
        <para>mod_dav_svn is not a fully-implemented DeltaV server.</para>

        <para>Many portions of the DeltaV specification were irrelevant to
          Subversion, and thus left unimplemented.</para>
      </listitem>
      
    </orderedlist>

    <para>There is still some debate in the developer community as to
      whether or not it's worthwhile to remedy either of these
      situations.  It's fairly unrealistic to change Subversion's
      design to match DeltaV, so there's probably no way the client
      can ever learn to get everything it needs from a general DeltaV
      server.  On the other hand,
      mod_dav_svn <emphasis>could</emphasis> be further developed to
      implement all of DeltaV, but it's hard to find motivation to do
      so&mdash;there are almost no DeltaV clients to interoperate
      with.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.webdav.autoversioning">
    <title>Autoversioning</title>

    <para>While the Subversion client is not a full DeltaV client, nor
      the Subversion server a full DeltaV server, there's still a
      glimmer of WebDAV interoperability to be happy about:  it's
      called autoversioning.</para>

    <para>Autoversioning is an optional feature defined in the DeltaV
      standard.  A typical DeltaV server will reject an ignorant
      WebDAV client attempting to do a <literal>PUT</literal> to a
      file that's under version control.  To change a
      version-controlled file, the server expects a series proper
      versioning requests: something like
      <literal>MKACTIVITY</literal>, <literal>CHECKOUT</literal>,
      <literal>PUT</literal>, <literal>CHECKIN</literal>.  But if the
      DeltaV server supports autoversioning, then write-requests from
      basic WebDAV clients are accepted.  The server behaves *as if*
      the client had issued the proper series of versioning requests,
      performing a commit under the hood.  In other words, it allows a
      DeltaV server to interoperate with ordinary WebDAV
      clients.</para>

    <para>Because so many operating systems already have integrated
      WebDAV clients, the use case for this feature borders on
      fantastical: imagine an office of ordinary users running
      Microsoft Windows or Mac OS.  Each user <quote>mounts</quote>
      the Subversion repository, which appears to be an ordinary
      network folder.  They use the shared folder as they always do:
      open files, edit them, save them.  Meanwhile, the server is
      automatically versioning everything.  Any administrator (or
      knowledgeable user) can still use a Subversion client to search
      history and retrieve older versions of data.</para>

    <para>This scenario isn't fiction: it's real and it works, as of
      Subversion 1.2 and later.  To activate autoversioning in
      mod_dav_svn, use the <literal>SVNAutoversioning</literal>
      directive within the <filename>httpd.conf</filename> Location
      block, like so:</para>

    <screen>
&lt;Location /repos&gt;
  DAV svn
  SVNPath /path/to/repository
  SVNAutoversioning on
&lt;/Location&gt;
</screen>

    <para>When SVNAutoversioning is active, write requests from WebDAV
      clients result in automatic commits.  A generic log message is
      auto-generated and attached to each revision.</para>

    <para>Before activating this feature, however, understand what
      you're getting into.  WebDAV clients tend to do
      <emphasis>many</emphasis> write requests, resulting in a huge
      number of automatically committed revisions.  For example, when
      saving data, many clients will do a <literal>PUT</literal> of a
      0-byte file (as a way of reserving a name) followed by another
      <literal>PUT</literal> with the real filedata.  The single
      file-write results in two separate commits.  Also consider that
      many applications auto-save every few minutes, resulting in even
      more commits.</para>

    <para>If you have a post-commit hook program that sends email, for
      example, you may want to disable email generation either
      altogether, or on certain sections of the repository; it depends
      on whether you think the influx of emails will still prove to be
      valuable notifications or not.  Also, a smart post-commit hook
      program can distinguish between a transaction created via
      autoversioning and one created through a normal <command>svn
      commit</command>.  The trick is to look for a revision property
      named <literal>svn:autoversioned</literal>.  If present, the
      commit was made by a generic WebDAV client.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.webdav.clients">
    <title>Client Interoperability</title> 

    <para>All WebDAV clients fall into one of three
      categories&mdash;standalone applications, file-explorer
      extensions, or filesystem implementations.  These categories
      broadly define the types of WebDAV functionality available to
      users.  <xref linkend="svn.webdav.clients.tbl-1"/> gives our
      categorization and a quick description of some common pieces of
      WebDAV-enabled software.  More details about these software
      offerings, as well as their general category, can be found in
      the sections that follow.</para>

    <table id="svn.webdav.clients.tbl-1">
      <title>Common WebDAV Clients</title>
      <tgroup cols="3">
        <thead>
          <row>
            <entry>Software</entry>
            <entry>Category</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>Adobe Photoshop</entry>
            <entry>Standalone WebDAV applications</entry>
            <entry>Image editing software, allowing direct opening
              from, and writing to, WebDAV URLs</entry>
          </row>
          <row>
            <entry>Cadaver</entry>
            <entry>Standalone WebDAV applications</entry>
            <entry>Command-line WebDAV client supporting file
              transfer, tree, and locking operations</entry>
          </row>
          <row>
            <entry>DAV Explorer</entry>
            <entry>Standalone WebDAV applications</entry>
            <entry>GUI tool for exploring WebDAV shares</entry>
          </row>
          <row>
            <entry>davfs2</entry>
            <entry>WebDAV filesystem implementation</entry>
            <entry>Linux file system driver that allows you to mount a
              WebDAV share</entry>
          </row>
          <row>
            <entry>GNOME Nautilus</entry>
            <entry>File-explorer WebDAV extensions</entry>
            <entry>GUI file explorer able to perform tree
              operations on a WebDAV share</entry>
          </row>
          <row>
            <entry>KDE Konqueror</entry>
            <entry>File-explorer WebDAV extensions</entry>
            <entry>GUI file explorer able to perform tree
              operations on a WebDAV share</entry>
          </row>
          <row>
            <entry>Mac OS X</entry>
            <entry>WebDAV filesystem implementation</entry>
            <entry>Operating system with built-in support for mounting
              WebDAV shares locally</entry>
          </row>
          <row>
            <entry>Macromedia Dreamweaver</entry>
            <entry>Standalone WebDAV applications</entry>
            <entry>Web production software able to directly read from
              and write to WebDAV URLs</entry>
          </row>
          <row>
            <entry>Microsoft Office</entry>
            <entry>Standalone WebDAV applications</entry>
            <entry>Office productivity suite with several components
              able to directly read from and write to WebDAV
              URLs</entry>
          </row>
          <row>
            <entry>Microsoft Webfolders</entry>
            <entry>File-explorer WebDAV extensions</entry>
            <entry>GUI file explorer program able to perform tree
              operations on a WebDAV share</entry>
          </row>
          <row>
            <entry>Novell NetDrive</entry>
            <entry>WebDAV filesystem implementation</entry>
            <entry>Drive-mapping program for assigning Windows drive
              letters to a mounted remote WebDAV share</entry>
          </row>
          <row>
            <entry>SRT WebDrive</entry>
            <entry>WebDAV filesystem implementation</entry>
            <entry>File transfer software which, among other things,
              allows the assignment of Windows drive letters to a
              mounted remote WebDAV share</entry>
          </row>
          
        </tbody>
      </tgroup>      
    </table>

    <!-- =============================================================== -->
    <sect2 id="svn.webdav.clients.standalone">
      <title>Standalone WebDAV applications</title>

      <para>A WebDAV application is a program which contains built-in
        functionality for speaking WebDAV protocols with a WebDAV
        server.  We'll cover some of the most popular programs with
        this kind of WebDAV support.</para>

      <sect3 id="svn.webdav.clients.standalone.windows">
        <title>Microsoft Office, Dreamweaver, Photoshop</title> 
  
        <para>On Windows, there are several well-known applications
          that contain integrated WebDAV client functionality, such as
          Microsoft's Office,
          <footnote>
            <para>WebDAV support was removed from Microsoft Access for
              some reason, but exists in the rest of the Office
              suite.</para>
          </footnote>
          Adobe's Photoshop, and Macromedia's Dreamweaver programs.
          They're able to directly open and save to URLs, and tend to
          make heavy use of WebDAV locks when editing a file.</para>
  
        <para>Note that while many of these programs also exist for
          the Mac OS X, they do not appear to support WebDAV directly
          on that platform.  In fact, on Mac OS X, the
          <guimenu>File-&gt;Open</guimenu> dialog box doesn't allow
          one to type a path or URL at all.  It's likely that the
          WebDAV features were deliberately left out of Macintosh
          versions of these programs, since OS X already provides such
          excellent low-level filesystem support for WebDAV.</para>
  
      </sect3>

      <sect3 id="svn.webdav.clients.standalone.free">
        <title>Cadaver, DAV Explorer</title>
  
        <para>Cadaver is a bare-bones Unix commandline program for
          browsing and changing WebDAV shares.  Like the Subversion
          client, it uses the neon HTTP library&mdash;not surprisingly,
          both neon and cadaver are written by the same author.  Cadaver
          is free software (GPL license) and is available at <ulink
          url="http://www.webdav.org/cadaver/"/>.</para>
  
        <para>Using cadaver is similar to using a commandline FTP
          program, and thus it's extremely useful for basic WebDAV
          debugging.  It can be used to upload or download files in a
          pinch, and also to examine properties, copy, move, lock or
          unlock files:</para>
        
        <screen>
$ cadaver http://host/repos
dav:/repos/&gt; ls
Listing collection `/repos/': succeeded.
Coll: &gt; foobar                                 0  May 10 16:19
      &gt; playwright.el                       2864  May  4 16:18
      &gt; proofbypoem.txt                     1461  May  5 15:09
      &gt; westcoast.jpg                      66737  May  5 15:09

dav:/repos/&gt; put README
Uploading README to `/repos/README':
Progress: [=============================&gt;] 100.0% of 357 bytes succeeded.

dav:/repos/&gt; get proofbypoem.txt
Downloading `/repos/proofbypoem.txt' to proofbypoem.txt:
Progress: [=============================&gt;] 100.0% of 1461 bytes succeeded.
</screen>

        <para>DAV Explorer is another standalone WebDAV client, written
          in Java.  It's under a free Apache-like license and is
          available at <ulink url="http://www.ics.uci.edu/~webdav/"/>.
          DAV Explorer does everything cadaver does, but has the
          advantages of being portable and being more user-friendly GUI
          application.  It's also one of the first clients to support
          the new WebDAV Access Control Protocol (RFC 3744).</para>
  
        <para>Of course, DAV Explorer's ACL support is useless in this
          case, since mod_dav_svn doesn't support it.  The fact that
          both Cadaver and DAV Explorer support some limited DeltaV
          commands isn't particularly useful either, since they don't
          allow <literal>MKACTIVITY</literal> requests.  But it's not
          relevant anyway; we're assuming all of these clients are
          operating against an autoversioning repository.</para>
  
      </sect3>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.webdav.clients.file-explorer-extensions">
      <title>File-explorer WebDAV extensions</title>

      <para>Some popular file explorer GUI programs support WebDAV
        extensions which allow a user to browse a DAV share as if it
        was just another directory on the local computer, and allowing
        basic tree editing operations on the items in that share.  For
        example, Windows Explorer is able to browse a WebDAV server as
        a <quote>network place</quote>.  Users can drag files to and
        from the desktop, or can rename, copy, or delete files in the
        usual way.  But because it's only a feature of the
        file-explorer, the DAV share isn't visible to ordinary
        applications.  All DAV interaction must happen through the
        explorer interface.</para>

      <sect3 id="svn.webdav.clients.file-explorer-extensions.windows">
        <title>Microsoft Webfolders</title> 
  
        <para>Microsoft was one of the original backers of the WebDAV
          specification, and first started shipping a client in Windows
          98, known as <quote>Webfolders</quote>.  This client was also
          shipped in Windows NT4 and 2000.</para>
  
        <para>The original Webfolders client was an extension to
          Explorer, the main GUI program used to browse filesystems.  It
          works well enough.  In Windows 98, the feature might need to
          be explicitly installed if Webfolders aren't already visible
          inside <quote>My Computer</quote>.  In Windows 2000, simply
          add a new <quote>network place</quote>, enter the URL, and the
          WebDAV share will pop up for browsing.</para>
  
        <para>With the release of Windows XP, Microsoft started shipping
          a new implementation of Webfolders, known as the <quote>WebDAV
          mini-redirector</quote>.  The new implementation is a
          filesystem-level client, allowing WebDAV shares to be mounted
          as drive letters.  Unfortunately, this implementation is
          incredibly buggy.  The client usually tries to convert http
          URLs (<literal>http://host/repos</literal>) into UNC share
          notation (<literal>\\host\repos</literal>); it also often
          tries to use Windows Domain authentication to respond to
          basic-auth HTTP challenges, sending usernames as
          <literal>HOST\username</literal>.  These interoperability
          problems are severe and documented in numerous places around
          the web, to the frustration of many users.  Even Greg Stein,
          the original author of Apache's WebDAV module, recommends
          against trying to use XP Webfolders against an Apache
          server.</para>
  
        <para>It turns out that the original
          <quote>Explorer-only</quote> Webfolders implementation isn't
          dead in XP, it's just buried.  It's still possible to find it
          by using this technique:</para>
  
        <orderedlist>
  
          <listitem>
            <para>Go to 'Network Places'.</para>
          </listitem>
  
          <listitem>
            <para>Add a new network place.</para>
          </listitem>
  
          <listitem>
            <para>When prompted, enter the URL of the repository, but
              <emphasis>include a port number</emphasis> in the URL.
              For example, <literal>http://host/repos</literal> would be
              entered as <literal>http://host:80/repos</literal> instead.
            </para>
          </listitem>
  
          <listitem>
            <para>Respond to any authentication prompts.</para>
          </listitem>
  
        </orderedlist>
  
        <para>There are a number of other rumored workarounds to the
          problems, but none of them seem to work on all versions and
          patchlevels of Windows XP.  In our tests, only the previous
          algorithm seems to work consistently on every system.  The
          general consensus of the WebDAV community is that you should
          avoid the new Webfolders implementation and use the old one
          instead, and that if you need real a real filesystem-level
          client for Windows XP, then use a third-party program like
          WebDrive or NetDrive.</para>

      </sect3>

      <sect3 id="svn.webdav.clients.file-explorer-extensions.linux-de">
        <title>Nautilus, Konqueror</title> 
  
        <para>Nautilus is the official file manager/browser for the
          GNOME desktop (<ulink url="http://www.gnome.org"/>), and
          Konqueror is the manager/browser for KDE desktop (<ulink
          url="http://www.kde.org"/>).  Both of these applications have
          an explorer-level WebDAV client built-in, and operate just
          fine against an autoversioning repository.</para>
  
        <para>In GNOME's Nautilus, from the <guimenu>File
          menu</guimenu>, select <guimenuitem>Open
          location</guimenuitem> and enter the URL.  The repository
          should then be displayed like any other filesystem.</para>
  
        <para>In KDE's Konqueror, you need to use the
          <literal>webdav://</literal> scheme when entering the URL in
          the location bar.  If you enter an <literal>http://</literal>
          URL, Konqueror will behave like an ordinary web browser.
          You'll likely see the generic HTML directory listing produced
          by mod_dav_svn.  By entering
          <literal>webdav://host/repos</literal> instead of
          <literal>http://host/repos</literal>, Konqueror becomes a
          WebDAV client and displays the repository as a
          filesystem.</para>
  
      </sect3>
    </sect2>

    <sect2 id="svn.webdav.clients.fs-impl">
      <title>WebDAV filesystem implementation</title>

      <para>The WebDAV filesystem implementation is arguably the best
        sort of WebDAV client.  It's implemented as a low-level
        filesystem module, typically within the operating system's
        kernel.  This means that the DAV share is mounted like any
        other network filesystem, similar to mounting an NFS share on
        Unix, or attaching an SMB share as drive-letter in Windows.
        As a result, this sort of client provides completely
        transparent read/write WebDAV access to all programs.
        Applications aren't even aware that WebDAV requests are
        happening.</para>

      <sect3 id="svn.webdav.clients.fs-impl.windows">
        <title>WebDrive, NetDrive</title> 
  
        <para>Both WebDrive and NetDrive are excellent commercial
          products which allows a WebDAV share to be attached as drive
          letters in Windows.  We've had nothing but success with
          these products.  At the time of writing, WebDrive can be
          purchased from South River Technologies (<ulink
          url="http://www.southrivertech.com"/>).  NetDrive ships with
          Netware, is free of charge, and can be found by searching
          the web for <quote>netdrive.exe</quote>.  Though it is
          freely available online, users are required to have a
          Netware license.  (If any of that sounds odd to you, you're
          not alone.  See this page on Novell's website: <ulink
          url="http://www.novell.com/coolsolutions/qna/999.html"/>)</para>
  
      </sect3>

      <sect3 id="svn.webdav.clients.fs-impl.macosx">
        <title>Mac OS X</title> 

        <para>Apple's OS X operating system has an integrated
          filesystem-level WebDAV client.  From the Finder, select the
          <guimenuitem>Connect to Server</guimenuitem> item from the
          <guimenu>Go menu</guimenu>.  Enter a WebDAV URL, and it
          appears as a disk on the desktop, just like any other mounted
          volume.<footnote><para>From the Darwin terminal, one can also
          run <literal>mount -t webdav URL
          /mountpoint</literal></para></footnote>.</para>
  
        <para>Note that if your mod_dav_svn is older than version 1.2,
          OS X will refuse to mount the share as read-write; it will
          appear as read-only.  This is because the OS X insists on
          locking support for read-write shares, and the ability to lock
          files first appeared in Subversion 1.2.</para>
  
        <para>One more word of warning: OS X's WebDAV client can
          sometimes be overly sensitive to HTTP redirects. If OS X is
          unable to mount the repository at all, you may need to enable
          the BrowserMatch directive in the Apache server's
          <filename>httpd.conf</filename>:</para>
  
        <screen>
BrowserMatch "^WebDAVFS/1.[012]" redirect-carefully
</screen>
  
      </sect3>

      <sect3 id="svn.webdav.clients.fs-impl.linux">
        <title>Linux davfs2</title> 
  
        <para>Linux davfs2 is a filesystem module for the Linux kernel,
          whose development is located at <ulink
          url="http://dav.sourceforge.net/"/>. Once installed, a WebDAV
          network share can be mounted with the usual Linux mount
          command:</para>
  
        <screen>
$ mount.davfs http://host/repos /mnt/dav
</screen>
  
      </sect3>
    </sect2>
  </sect1>

</appendix>

<!--
local variables: 
sgml-parent-document: ("book.xml" "appendix")
end:
-->

