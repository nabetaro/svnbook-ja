<appendix id="svn.intro">

  <title>Guide de démarrage rapide avec Subversion</title>


  <para>Si vous êtes pressé d'installer et d'utiliser Subversion
    (et que vous aimez apprendre en expérimentant), cette annexe
    vous indiquera comment créer un dépôt, importer votre code
    puis comment en extraire une copie de travail. Tout au long
    de l'exposé, nous vous fournirons des liens vers les chapitres
    correspondants de ce livre.</para>

  <warning>
  <para>Si vous débutez avec les concepts de suivi de versions
    ou avec le modèle <quote>Copier-Modifier-Fusionner</quote>
    utilisé par CVS et Subversion, nous vous conseillons de lire le
    <xref linkend="svn.basic"/> avant d'aller plus loin.</para>
  </warning>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.intro.install">

    <title>Installer Subversion</title>

    <para>Subversion est construit sur une couche de portabilité
      appelée APR (<quote>Apache Portable Runtime</quote> en anglais, pour
      bibliothèque Apache de portabilité des exécutables). Cette
      bibliothèque APR fournit toutes les interfaces dont Subversion
      a besoin pour fonctionner sur différents systèmes d'exploitation&nbsp;:
      accès aux disques, au réseau, gestion de la mémoire, et bien d'autres
      choses encore. Bien que Subversion soit capable d'utiliser Apache
      comme serveur réseau, la dépendance envers APR
      <emphasis>ne signifie pas</emphasis> qu'Apache soit un composant
      indispensable. APR est une bibliothèque autonome, utilisable par
      n'importe quelle application. Cela signifie en revanche que, tout
      comme Apache, les clients et serveurs Subversion fonctionnent sur
      n'importe quel système d'exploitation sur lequel fonctionne le
      serveur Apache <command>httpd</command>&nbsp;: Windows, Linux, tous
      les systèmes BSD, Mac OS X, NetWare entre autres.</para>

    <para>La manière la plus simple d'obtenir Subversion est de
      télécharger un programme précompilé pour votre système
      d'exploitation. Le site Web de Subversion
      (<ulink url="http://subversion.tigris.org"/>) tient à disposition
      de nombreux paquets produits par des volontaires.
      Le site contient généralement des exécutables avec une interface
      graphique d'installation pour les utilisateurs de systèmes
      Microsoft. Si votre système d'exploitation est de type Unix,
      vous pouvez utiliser le gestionnaire de paquets fourni avec
      votre distribution (RPM, DEB, l'arbre des ports, etc.) pour
      obtenir Subversion.
      </para>

    <para>Sinon, vous pouvez aussi compiler Subversion directement
      à partir des sources, bien que ce ne soit pas toujours facile
      (si vous n'avez pas l'habitude de compiler vos logiciels,
      choisissez plutôt de télécharger un paquet précompilé pour votre
      distribution). Sur le site Web de Subversion, téléchargez la
      dernière version du code source. Puis, après l'avoir décompacté,
      suivez les instructions fournies dans le fichier
      <filename>INSTALL</filename> pour la compilation. Notez que le
      fichier contenant le code source n'inclut pas forcément tout
      ce dont vous avez besoin pour construire un client en ligne de
      commande apte à communiquer avec un dépôt distant. Depuis
      Subversion 1.4, les bibliothèques dont dépend Subversion (apr,
      apr-util et neon) sont distribuées dans un paquet source distinct
      suffixé par<filename>-deps</filename>. Ces bibliothèques sont
      maintenant tellement courantes qu'elles sont peut-être déjà
      installées sur votre système. Sinon, vous devrez décompacter
      le paquet des dépendances à l'endroit où vous avez décompacté
      le code source de Subversion. Indépendamment de ces paquets
      obligatoires, vous voudrez peut-être également installer d'autres
      bibliothèques optionnelles telles que Berkeley DB et Apache
      <command>httpd</command>. Si vous voulez effectuer une
      compilation complète, assurez-vous bien d'avoir l'ensemble des
      paquets documentés dans le fichier <filename>INSTALL</filename>.
      </para>

    <para>Si vous êtes de ceux qui aiment avoir la toute dernière
      version des logiciels, vous pouvez aussi obtenir le code source
      de Subversion depuis le dépôt Subversion. Évidemment, il faudra
      pour y parvenir que vous disposiez déjà d'un client Subversion&hellip;
      Mais, si c'est le cas, vous pouvez extraire une copie de travail
      du dépôt contenant le code source de Subversion à l'adresse
      <ulink url="http://svn.collab.net/repos/svn/trunk/"/>&nbsp;:
      <footnote>
        <para>Notez que l'URL que l'on extrait dans cet exemple ne se
          termine pas par <literal>svn</literal>, mais par un
          sous-répertoire nommé <literal>trunk</literal>. Reportez-vous
          à notre discussion sur le modèle de gestion des branches de
          Subversion pour en comprendre la raison. </para>
      </footnote>
    </para>

    <screen>
$ svn checkout http://svn.collab.net/repos/svn/trunk subversion
A    subversion/HACKING
A    subversion/INSTALL
A    subversion/README
A    subversion/autogen.sh
A    subversion/build.conf
&hellip;
</screen>

    <para>La commande précédente crée une copie de travail de la dernière
      version (non officielle) du code source de Subversion dans un
      sous-répertoire appelé <filename>subversion</filename> de votre
      répertoire de travail courant. Vous pouvez modifier le dernier
      argument à votre convenance. Indépendamment du nom que vous donnez
      au répertoire contenant la nouvelle copie de travail, une fois
      cette opération terminée, vous aurez à votre disposition le code
      source de Subversion. Bien sûr, il vous faudra encore récupérer
      quelques autres bibliothèques (apr, apr-util, etc.)&mdash;consultez
      le fichier <filename>INSTALL</filename> dans le répertoire racine
      de la copie de travail pour plus de détails.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.intro.quickstart">

    <title>Tutoriel rapide</title>

    <blockquote>
      <para><quote>Vérifiez que le dossier de votre siège est relevé, que
        votre ceinture est correctement bouclée et que la tablette devant
        vous est rangée et verrouillée. Personnel de cabine, attention au
        décollage&hellip;</quote></para>
        </blockquote>

    <para>Ce qui suit est un bref tutoriel qui couvre quelques opérations
      élémentaires, ainsi que la configuration de base de Subversion. Une
      fois que vous l'aurez terminé, vous devriez avoir une compréhension
      globale de la façon dont Subversion peut être utilisé.</para>

    <note>
      <para>Les exemples utilisés dans cette annexe supposent que vous
        disposez de <command>svn</command> (le client en ligne de commande
        de Subversion) et de <command>svnadmin</command> (l'outil
        d'administration) prêts à l'emploi sur un système de type Unix
        (ce tutoriel fonctionne également en ligne de commande sous
        Windows, sous réserve de quelques adaptations triviales). Nous
        supposons également que vous utilisez la version 1.2 ou ultérieure
        de Subversion (tapez <userinput>svn --version</userinput>
        pour vous en assurer).</para>
    </note>

    <para>Subversion stocke toutes les données suivies en version dans un
      dépôt central. Pour commencer, créez un nouveau dépôt&nbsp;:</para>

    <screen>
$ svnadmin create /var/svn/depot
$ ls /var/svn/depot
conf/  dav/  db/  format  hooks/  locks/  README.txt
</screen>

    <para>Cette commande crée un nouveau répertoire,
      <filename>/var/svn/depot</filename>, qui contient un dépôt
      Subversion. Ce nouveau répertoire contient (entre autres choses)
      un ensemble de fichiers constituant une base de données. Vous ne
      verrez pas vos fichiers suivis en version si vous examinez le
      contenu de ces fichiers. Pour plus d'informations sur la création
      et la maintenance des dépôts, consultez le
      <xref linkend="svn.reposadmin"/>.</para>

    <para>Dans Subversion, il n'existe pas de concept de 
      <quote>projet</quote>. Le dépôt est juste un système de fichiers 
      virtuel suivi en versions, une arborescence qui peut contenir tout ce
      que vous voulez. Certains administrateurs préfèrent ne stocker qu'un
      seul projet par dépôt, d'autres préfèrent stocker plusieurs projets
      par dépôt en les plaçant dans des répertoires distincts. Les mérites
      de chacune de ces approches sont discutés dans
      <xref linkend="svn.reposadmin.projects.chooselayout"/>.
      De toute façon, le dépôt ne fait que gérer des fichiers et des
      répertoires, c'est donc aux humains de faire le lien entre
      répertoires et <quote>projets</quote>. Ainsi, bien que vous trouverez
      mention de projets dans ce livre, gardez en mémoire que nous ne
      parlons jamais que d'un répertoire (ou d'un ensemble de répertoires)
      du dépôt.</para>

    <para>Dans cet exemple, nous supposons que vous avez déjà une sorte de
      projet (c'est-à-dire un ensemble de fichiers et de répertoires) que
      vous voulez importer dans votre dépôt Subversion tout neuf.
      Commencez par organiser vos données dans un répertoire unique appelé
      <filename>monprojet</filename> (ou quoi que ce soit d'autre). Pour
      des raisons que nous expliquons au
      <xref linkend="svn.branchmerge"/>, la structure de votre
      arborescence doit contenir trois répertoires à la racine&nbsp;:
      <filename>branches</filename>, <filename>tags</filename>, et
      <filename>trunk</filename>. Le répertoire <filename>trunk</filename>
      doit contenir toutes vos données et les répertoires
      <filename>branches</filename> et <filename>tags</filename>
      doivent être vides&nbsp;:</para>

    <screen>
/tmp/monprojet/branches/
/tmp/monprojet/tags/
/tmp/monprojet/trunk/
                     Makefile
                     machin.c
                     truc.c
                     &hellip;
</screen>

    <para>Les sous-répertoires <filename>branches</filename>,
      <filename>tags</filename> et <filename>trunk</filename>
      ne sont pas réellement requis par Subversion. Ils font simplement
      partie des conventions d'utilisation que vous voudrez certainement
      suivre par la suite. </para>

    <para>Une fois l'arborescence de vos données prête, importez-la dans
      le dépôt avec la commande <command>svn import</command> (reportez-vous
      à <xref linkend="svn.tour.importing"/>)&nbsp;:</para>

    <screen>
$ svn import /tmp/monprojet file:///var/svn/depot/monprojet \
             -m "Import initial"
Ajout          /tmp/monprojet/branches
Ajout          /tmp/monprojet/tags
Ajout          /tmp/monprojet/trunk
Ajout          /tmp/monprojet/trunk/Makefile
Ajout          /tmp/monprojet/trunk/truc.c
Ajout          /tmp/monprojet/trunk/machin.c
&hellip;
Révision 1 propagée.
$
</screen>

    <para>À présent, le dépôt contient cette arborescence de données.
      Comme indiqué précédemment, vous ne verrez pas vos fichiers
      directement en regardant dans le dépôt&nbsp;: ils sont stockés dans un
      magasin de données. Mais le système de fichiers imaginaire du dépôt
      contient désormais un répertoire racine appelé
      <filename>monprojet</filename>, qui à son tour contient vos données.
      </para>

    <para>Notez que le répertoire original
      <filename>/tmp/monprojet</filename> n'a pas été modifié&nbsp;; Subversion
      ignore tout de son existence (en fait, vous pouvez même le supprimer
      si vous voulez). Pour commencer à manipuler les données du dépôt,
      vous devez créer une nouvelle <quote>copie de travail</quote> des
      données, une sorte d'espace de travail privé. Demandez à Subversion
      de vous <quote>extraire</quote> une copie de travail du répertoire
      <filename>monprojet/trunk</filename> du dépôt&nbsp;:</para>

    <screen>
$ svn checkout file:///var/svn/depot/monprojet/trunk monprojet
A  monprojet/Makefile
A  monprojet/machin.c
A  monprojet/truc.c
&hellip;
Révision 1 extraite.
</screen>

    <para>À présent, vous disposez d'une copie personnelle d'une partie
      du dépôt, située dans un nouveau répertoire appelé
      <filename>monprojet</filename>. Vous pouvez éditer les fichiers
      dans votre copie de travail puis propager ces changements vers le
      dépôt.</para>

    <itemizedlist>
      <listitem>
        <para>Entrez dans le répertoire de votre copie de travail et
          éditez le contenu d'un fichier&nbsp;;</para>
      </listitem>
      <listitem>
        <para>lancez la commande <userinput>svn diff</userinput> pour
          obtenir la liste des différences que vos modifications ont
          engendrée&nbsp;;</para>
      </listitem>
      <listitem>
        <para>lancez la commande <userinput>svn commit</userinput> pour
          propager la nouvelle version de votre fichier vers le dépôt&nbsp;;
        </para>
      </listitem>
      <listitem>
        <para>lancez la commande <userinput>svn update</userinput> pour
          <quote>mettre à jour</quote> votre copie de travail à partir
          du dépôt.</para>
      </listitem>
    </itemizedlist>

    <para>Pour une description complète de ce que vous pouvez faire avec
      votre copie de travail, reportez-vous au
      <xref linkend="svn.tour"/>.</para>

    <para>Dès lors, vous pouvez mettre votre dépôt à disposition sur le
      réseau. Consultez le <xref linkend="svn.serverconfig"/>
      pour découvrir les différents serveurs disponibles et la manière de
      les configurer.</para>

    <!-- ### TODO: Let's make this into a full tutorial, rather than
             simply referring off to other sections. ### -->

  </sect1>


</appendix>

<!--
local variables:
sgml-parent-document: ("book.xml" "appendix")
end:
-->