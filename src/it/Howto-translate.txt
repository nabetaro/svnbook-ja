-*- coding: utf-8; -*-
$Id$
--------------------------------------------------------------------------------
Manutentore di questo file: nebiac alias federico.nebiacolombo@softeco.it
e singoli traduttori per la sezione 'Piano di Lavoro'.


INTRODUZIONE
--------------------------------------------------------------------------------
Questo documento raccoglie appunti, convenzioni e procedure adottate dal gruppo
di persone che desiderano contribuire all'opera di traduzione dall'inglese
all'italiano del libro riguardante SVN.


PIANO DI LAVORO
--------------------------------------------------------------------------------
In sintesi ogni capitolo viene diviso in diverse parti, ogni parte viene
tradotta da una persona e verificata da almeno un'altra.
In entrambe le fasi, tramite l'uso della mail list svn-it sono ovviamente ben
accetti contributi.
La scelta di utilizzare sigle in inglese permette di poter condividere con la
comunità SVN org il piano fin dalle fasi legate alla proposta dell'attività.
Al fine di evitare sovrapposizioni: è molto importante che l'assegnazione della
parte da tradurre sia notificata sulla mail list e riportata nella seguente
tabella.
Di norma chi accetta o si propone per tradurre un pezzo aggiorna la seguente
tabella completando anche i dati relativi alla presunta data di INIZIO attività.

Legenda:
NA =NOT ASSIGNED                   TIP=TRANSLATION IN PROGRESS
TBV=TO BE VERIFIED                 VIP=VERIFY IN PROGRESS
TC =TRANSLATION COMPLETED (INCLUDED VERIFY)

Nome  #       chi ci lavora per             data INIZIO    stato
File  pag.    traduzione o verifica         attività      capitolo      altri dettagli
---------------------------------------------------------------------------------------------------------------------------------
foreword     [bpietro]+[nebiac]                 [20-09-2006] [TC]  Finito.

Ch00 - 9pg   [ender]+[basetta]    per verifica  [??-??-2006] [TC]  Finito da inizio fino  <sect2 id="svn.preface.conventions.icons"> esclusa
             [nebiac]+[Miky]      per verifica  [??-??-2006] [TC]  Finito da  <sect2 id="svn.preface.conventions.icons"> fino a fine capitolo

Ch01 - 10pg  [g0blin]+[nebiac]    per verifica  [23-06-2006] [TC]  Finito da inizio fino a fino a  <sect1 id="svn.intro.architecture"> esclusa
             [nebiac]+[ilmatte]   per verifica  [23-06-2006] [VIP] da <sect1 id="svn.intro.architecture"> fino a fine cap.
 
Ch02 - 14pg  [aronnax]+[ilmatte]  per verifica  [29-11-2006] [VIP] da inizio fino <sect2 id="svn.basic.in-action.track-repos">
             [zup]+[ender]        per verifica  [??-07-2006] [TC]  Finito da <sect2 id="svn.basic.in-action.track-repos"> fino a fine capitolo

Ch03 - 36pg  [Miky]+[aronnax]     per verifica  [07-07-2006] [TC]  Finito da inizio fino a <sect2 id="svn.tour.revs.dates"> esclusa
             [basetta]+[ender]    per verifica  [01-10-2006] [TC]  Finito fino da <sect2 id="svn.tour.revs.dates"> fino <sect1 id="svn.tour.cycle"> esclusa
             [Miky]+[aronnax]     per verifica  [21-07-2006] [TC]  Finito da <sect1 id="svn.tour.cycle"> fino alla fine del capitolo

Ch04 - 34pg  [ilmatte]+[nebiac]   per verifica  [30-09-2006] [TIP] Tutto, oltre verifica si devono tradurre alcune parole, cercare ??parola?
                                                                   12-10-2006 Nebiac deve ancora iniziare la verifica.

Ch05 - 46pg  [??????]+[????]      per verifica  [01-10-2006] [TIP] In cerca di traduttore: Iniziato a tradurre da basetta (persona attualmente in pausa).

Ch06 - 50pg  [kalos]+[????]       per verifica  [18-09-2006] [TIP] Tutto. (spera)

Ch07 - 61pg  [Miky]+[????]        per verifica  [04/10/2006] [TIP] Miky cerca aiuto per concludere la traduzione.

Ch08 - 50pg  [andreaz]+[???]      per verifica  [30/10/2006] [TBV] Traduzione completa, resta da verificare.

Ch09 - 104pg [bpietro]+[andreaz]  per verifica  [??-??-2006] [TBV] Pagine da 1 a 30
             [??]                               [??        ] [NA]  da pag. 30 in poi.

appa - 9pg   [andreaz]+[ender]    per verifica  [15-10-2006] [TC]  Finito Tutta.
appb - 14pg  [andreaz]+[ender]    per verifica  [03-10-2006] [TC]  Finito Tutta.
appc - 1pg   [bpietro]+[ender]    per verifica  [10-09-2006] [TC]  Finito Tutta.
copyright    [nebiac]+[bpietro]   per verifica  [14-07-2006] [TC]  Finito Tutto.


SVN ITALIAN TEAM
--------------------------------------------------------------------------------
==========================================================================================
NAME                   EMAIL                               NICKNAME          NOTES
==========================================================================================
Federico Nebiacolombo  federico.nebiacolombo@softeco.it    nebiac            CONFIRMED
Daniele Piaggesi       d.piaggesi@fastwebnet.it            g0blin            CONFIRMED
Giovanni               xphenix2000@yahoo.it                phoenix           CONFIRMED
Piero Proietti         piero.proietti@gmail.com            TheWind           CONFIRMED
Lorenzo Verna          v.lorenzo@gmail.com                 zup               CONFIRMED
Pietro Bernardi        pietro@dwpc.it                      bpietro           CONFIRMED
Calogero Lo Leggio     kalos@autistici.org                 kalos             CONFIRMED
Andrea Zagli           azagli@inwind.it                    andreaz           CONFIRMED
Giuseppe Laurita       glaurita@tim.it                     glaurita          CONFIRMED
Mario Gazzeri          mgazzeri@gmail.com                  babbonto          CONFIRMED
Matteo  Tontini        il_matte@yahoo.it                   ilmatte           CONFIRMED
Alessio Spadaro        alessio.spadaro@finservice.com      ender             PAUSED
Michela Pilla          michelapilla@hotmail.com            Miky              PAUSED
Massimiliano Bariola   m.bariola@gmail.com                 maxter            PAUSED
Matteo Staurenghi      fa_stu@katamail.com                 fa_stu            PAUSED
Patrick Martini        patrick@pupazzo.org                 basetta           PAUSED
Andrea Laforgia        a.laforgia@gmail.com                walkietalkie      PAUSED
Andrea Sbarigia        boiacky@yahoo.it                    boiacky           PAUSED
Alessandro Rossini     aronnax@openlug.org                 aronnax           PAUSED
Mauro Franceschini     mauro.franceschini@gmail.com        -                 NOT CONFIRMED
Michele Odorizzi       michele.odorizzi@tin.it             -                 NOT CONFIRMED


ASPETTI OPERATIVI
--------------------------------------------------------------------------------
I sorgenti del libro sono in formato XML conservati presso il repository svn
ufficiale della SVN.org il cui URL è:

http://svn.red-bean.com/svnbook/trunk/src/it

La stessa repository può essere comodamente esplorata/monitorata tramite il
link:

http://viewvc.red-bean.com/svnbook/trunk/src/it/

La prima cosa da fare è quindi installare un client SVN ed effettuare il
checkout dei src xml del libro dal precedente URL. Per i dettagli consultare la
sezione 'Checkout dei src XML (sezione italiana)' di questo documento.


SW CONSIGLIATO
--------------------------------------------------------------------------------
In questa sezione saranno descritti i TOOL consigliati e le procedure da
utilizzare per effettuare /validare la traduzione a seconda delle piattaforme
che verranno utilizzate.

Client SVN
----------
- svn: client command line.
http://subversion.tigris.org/project_packages.html

- Tortoisesvn: client svn integrato in Windows Explorer.
http://tortoisesvn.tigris.org/
Comodo e completo client grafico per utenti Windows.

- jsvn: client Java per accedere ad una repository SVN.
Molto comodo se si deve lavorare sia sotto Windows che Linux.
Download from: http://jsvn.alternatecomputing.com/jsvn-0.8.jar
I dettagli riguardo l'installazione e l'uso sono raccolti nei file
Appunti-JSVN.doc e Appunti-JSVN.odt.

- Jedit: potente editor multipiattaforma, estensibile tramite Plugin.
Caldamente raccomandato poiché il dizionario attualmente è in un formato
utilizzabile ANCHE (ma non solo) tramite un plugin di Jedit.
http://www.jedit.org/


IL FILE test-me.txt
--------------------------------------------------------------------------------
È presente nella dir src/it della nostra repository.
Lo scopo di questo file è quello di fornire l'opportunità di provare liberamente
i comandi svn svn (commit, update,...) tramite l'accesso alla rep. svn-it via
internet.
In particolare sentitevi liberi di modificare questo file aggiungendo righe,
cancellandole,...
È un file di lavoro dove è importante che ognuno impari a prendere dimestichezza
con svn con il client che preferisce (command line, TortoiseSVN, jsvn,...).


PROCEDURE & ALTRE INFORMAZIONI
--------------------------------------------------------------------------------
Nelle sezioni che seguono saranno descritte le 'procedure' di routine quali ad
esempio:
- Checkout,modifica,commit/update dei src XML (sezione italiana)
- Validazione dei src XML
- Dai SRC XML ad HTML
- Dai SRC XML ad PDF
- Dai SRC XML ad CHM
- Nightly builds


CHECKOUT DEI SRC XML (SEZIONE ITALIANA)
--------------------------------------------------------------------------------
L'operazione di checkout, permette di creare una copia locale sincronizzata
con il repository svn.
Normalmente, quindi, va effettuata all'inizio, ed ogni volta sia necessario
effettuare un 'reset' della copia locale.
Effettuare un'operazione di checkout su una copia locale che contiene modifiche
per le quali NON si è ancora effettuato commit equivale a PERDERE le modifiche
locali poiché vengono sovrascritte dai contributi provenienti dal repository.

Supponiamo di avere la seguente directory:

c:\user\prj\svn-book\DEV\src

e di utilizzare il client command line 'svn'.
Nel caso di un client diverso (jsvn, tortoise svn) la procedura va adattata.

I comandi da eseguire sono:

cd c:\user\prj\svn-book\DEV\src
svn checkout http://svn.red-bean.com/svnbook/trunk/src/it

Viene creata la directory .\it, quindi la struttura ora è:

c:\user\prj\svn-book\DEV\src\it

- Modificare i src XML ponendo attenzione a non cancellare anche parzialmente i
tags XML.

ATTENZIONE: Per evitare di incappare in problemi relativi alla codifica (specie
in fase di validazione dei src xml) causati ad esempio dall'uso di lettere
accentate italiane.
Siate sicuri di salvare il file (almeno la prima volta) utilizzando un editor
che permetta di scegliere il tipo di codifica UTF-8. Sotto Windows ad esempio
Notepad -> save as.

- Prima di effettuare un commit, validarli (vedi sezione seguente)
- Commit dei files
Per verificare quali files necessitano commit è sufficiente usare  il comando
svn status

Effettuare il commit dei src modificati tramite il comando:

svn commit <myfile> -m "this is a remark" --username <user>

<myfile> : va sostituito con il file specifico.
<user>   : va sostituito con il proprio utente.

La prima volta viene richiesta la password, le seguenti la specifica dell'utente
con l'opzione '--username' è opzionale.

Riguardo la lingua (inglese) da utilizzare per esprimere i commenti, vedi anche
la nota "COMMENTI AI COMMIT" più avanti in questo documento.


VALIDAZIONE DEI SRC XML
--------------------------------------------------------------------------------

Su Linux
--------
Verificato su: Red Hat Enterprise 4, Gentoo Linux 2006.1
Prerequisiti:
- Il validatore XML 'xmllint' come parte della libxml2, tipicamente disponibile
nelle distribuzioni Red Hat (RH).

Cosa fare:
Effettuare il checkout di
src/it     (ed applicare le eventuali modifiche)
src/tools

$ cd src/it
$ make valid

In caso di errori, risolvere il problema partendo dal primo segnalato.


Su Windows
----------
Verificato su: Windows Server 2003, Windows XP Pro.
Prerequisiti:
- Installare Cygwin (http://www.cygwin.com) (*1) assicurandosi di includere i
pacchetti:
    - make
    - libxml2
    - subversion
	- diffutils

Cosa fare:
Effettuare il checkout di
src/it     (ed applicare le eventuali modifiche)
src/tools

$ cd src/it
$ make valid

In caso di errori, risolvere il problema partendo dal primo segnalato.

(*1) Per chi non fosse pratico di Cygwin: è una sorta di porting sotto Windows
di un ambiente Unix/Linux. Si basa su un meccanismo di installazione molto
particolare: collegandosi al sito cygwin è possibile selezionare i componenti
che servono da una lista molto ampia. Nel nostro caso, il set minimo per la sola
validazione, i componenti da selezionare sono:
Devel->make
Devel->libxml2
Devel->Subversion (il primo della lista, basta solo il client command line)
Shells->bash (in realtà è presente di default, non va selezionato)
Utils->diffutils

Nel caso non abbiate una connessione abbastanza veloce, oppue abbiate fretta,
non esitate a scrivere presso la mail list svn-it chiedendo se qualche anima di
buona volontà può inviarsi uno zip con i precedenti componenti già inclusi,
sperando nella solidarietà :-)
Al termine cygwin si presenta come una shell Linux che accede ai dischi locali
del pc.
Per validare basta copiare (usando ad esempio Windows explorer) i propri src
tradotti sotto la directory

C:\cygwin\home\Administrator

usata da Cygwin come home dir, nel tipico esempio nel caso si usi Windows e
l'utente Administrator.
Se si usa un altro utente, ovviamente si deve cambiare la dir.

In alternativa si può configurare Cygwin in modo da aprire la shell di comandi
direttamente nella directory:

c:\user\prj\svn-book\DEV\src\it

invece che nella home dell'utente loggato.
Per ottenere questo risultato basta aprire il file:

C:\cygwin\home\Administrator\.bash_profile

con un editor di testo ed aggiungere, in fondo, la riga:

cd  c:\user\prj\svn-book\DEV\src\it (con il percorso eventualmente racchiuso tra virgolette)

DAI SRC XML AD HTML
--------------------------------------------------------------------------------

Premessa
--------
Il libro di Subversion è scritto usando DocBook Lite, una versione semplificata
di DocBook.
DocBook è una collezione di DTD e schemi XML che definiscono la struttura di un
documento (una specie di HTML, più ricco e più adatto alla definizione di
libri).
I file XML che compongono questo libro su Subversion rispettano i DTD definiti
da DocBook Lite; nel nostro caso si trovano in src/tools/dtd/ e vengono usati
per la validazione quando eseguiamo il comando make valid.

Recuperare i file XSLT
----------------------
Un grande vantaggio che deriva dall'adozione di DocBook è la grande
disponibilità di fogli di stile XSL in grado di trasformare i file XML in
diversi formati e con diversi layout.
Quindi per generare le pagine HTML o i file .fo e quindi i documenti PDF
partendo dai file XML del libro è necessario avere i fogli di stile per DocBook.

"DocBook Open Repository" su Sourceforge rende disponibile una grande collezione
di XSL specifici per DocBook.
Scaricare l'ultimo pacchetto 'docbook-xsl' dall'indirizzo

    http://sourceforge.net/project/showfiles.php?group_id=21935

una volta scaricato, scompattare l'archivio e rinominarlo in src/tools/xsl
I passi dovrebbero essere qualcosa come:

    $ cd src/tools
    $ tar zxvf docbook-xsl-X.YY.Z.tar.gz
    $ mv docbook-xsl-X.YY.Z xsl

Il processo di build si aspetta di trovare i fogli di stile in src/tools/xsl/


Utilizzo di XSLT per trasformare il libro
------------------------------------------
XSLT applica un foglio di stile .xsl a un file .xml e produce un nuovo documento
a markup. Recuperare libxslt, una libreria C per XSLT,

    Per Linux
    ---------
    Scaricare da http://xmlsoft.org/XSLT/

    Per Windows
    -----------
    Usando cygwin, si può scaricare il pacchetto utilizzando il programma di
    setup. Doc->libxslt


Generazione delle pagine HTML
-----------------------------
Dalla directory src/it lanciare il comando

    $ make all-html

Ciò produrrà una versione del libro su una singola pagina HTML in
book/svn-book.html
ed una versione multipagina in book/html-chunk/.
Nota che è un processo piuttosto pesante e può impiegare parecchi minuti.


DAI SRC XML A PDF
--------------------------------------------------------------------------------
Per Windows (mediante Cygwin)
-----------------------------
1)	Prima di tutto occorre assicurarsi che lo script:
 
	c:\user\prj\svn-book\DEV\src\it\tools\bin\run-fop.sh
	
	sia salvato in un formato riconoscibile dalla shell bash di Cygwin.
	Quindi, se avete effettuato il checkout della cartella 'tools' mediante un client svn per Windows 
	(es.: TortoiseSVN), è necessario modificare lo script in modo che il carattere 'carriage return'
	utilizzato sia unix-like.
	In caso contrario si otterrebbero errori del tipo: "/r command not found" quando si tentasse di generare
	il file pdf.
	a) 	Dato che si sta per modificare un file sotto versionamento è consigliabile effettuare un export della
		cartella 'tools' e sostituirla a quella versionata nella posizione:
		
		c:/user/prj/svn-book/DEV/src/it/tools
		
		In tal modo si evita di committare per sbaglio modifiche alla cartella tools.
	b)	A questo punto basta utilizzare la utility dos2unix già presente nell'installazione di Cygwin fatta al punto
		precedente (v. VALIDAZIONE DEI SRC XML).
		Il comando da lanciare è: 
	
		$ cd src/tools/bin
		$ dos2unix -U run-fop.sh
		
2)	All'indirizzo: http://xmlgraphics.apache.org/fop/ potete trovare Apache FOP (Formatting Objects Processor),
	il software necessario per produrre il file pdf a partire dai source xml.
	La procedura seguente spiegherà come fare funzionare la versione 0.20.5, 
	che è la stessa utilizzata per le nightly builds, e non la più aggiornata (ad oggi la 0.94).
	Scaricare la versione per windows all'indirizzo:

    http://archive.apache.org/dist/xmlgraphics/fop/binaries/fop-0.20.5-bin.zip

	una volta scaricato, scompattare l'archivio e rinominarlo in src/tools/fop
	Il processo di build si aspetta di trovarlo in quella posizione.
	
	Per permettere alla shell di eseguire lo script src/tools/fop/fop.sh occorre aggiungere alla variabile
	d'ambiente di windows: PATH il percorso:
	
	c:/user/prj/svn-book/DEV/src/it/tools/fop

3)	Per il funzionamento della versione 0.20.5 di fop è necessario installare una versione un po' vecchia del
	java runtime environment, contenuta nel pacchetto: j2sdk-1.4.2, reperibile all'indirizzo:
	
	http://java.sun.com/j2se/1.4.2/download.html
	
	alla voce "J2SE v 1.4.2_16  SDK".
	
	Una volta installata è necessario creare altre due variabili d'ambiente di windows:
	
	JAVA_HOME: contenente il path alla directory di installazione 'C:\j2sdk1.4.2_16'
	LOCALCLASSPATH: contenente il path 'C:\j2sdk1.4.2_16\bin'

4)	Bisogna quindi procurarsi la class library: jimi.
	Effettuare il download dello zip all'indirizzo: 
	
	http://java.sun.com/products/jimi/
	
	Scompattarlo e copiare l'archivio: Jimi\examples\AppletDemo\JimiProClasses.jar
	in c:/user/prj/svn-book/DEV/src/it/tools/fop/lib/JimiProClasses.jar

	Aggiungere alla variabile d'ambiente: LOCALCLASSPATH, il percorso:
	
	c:/user/prj/svn-book/DEV/src/it/tools/fop/lib/JimiProClasses.jar
	
5)	Durante il processo di build viene generato un file intermedio: svn-book.fo in src/it/book.
	Quando FOP si trova a processare file '.fo' troppo grandi si possono avere errori di memoria insufficiente,
	con messaggi del tipo:
	
	Exception in thread "main" java.lang.OutOfMemoryError
	
	Per ovviare a questo problema posizionarsi nella root dell'utente Cygwin:
	
	$ cd ~
	
	e creare il file .foprc che verrà processato da FOP:
	
	$ cat > ~/.foprc << "EOF"
	> FOP_OPTS="-Xmx500m"
	> EOF
	
	dove il valore assegnato alla variabile FOP_OPTS prevede al posto di 500 la quantità di ram (in Megabyte)
	disponibile	sul vostro pc, secondo la sintassi: "-Xmx[RAM_Installed]m".
	
6)	Infine posizionarsi nella directory src/it e lanciare il comando:
	
	$ make pdf
	
	La console produrrà innumerevoli righe di output, tra cui numerosi errori del tipo:
	
	[ERROR] property - "background-position-horizontal" is not implemented yet.
	(dovuti all'utilizzo della versione 0.20.5)
	
	e warning del tipo:
	[INFO] area contents overflows area in line
	
	Nonostante ciò verrà prodotto il file src/it/svn-book.pdf.
	
	NOTA:
	L'elenco degli errori e dei warning visualizzati a console durante la generazione è praticamente identico
	a quello riportato nei log relativi alle nigthly build (v. NIGHTLY BUILDS)
	
	
DAI SRC XML A CHM
--------------------------------------------------------------------------------
...da completare (benvenuti i contributi di qualche anima volenterosa:-)


NIGHTLY BUILDS
--------------------------------------------------------------------------------
A cura della comunità svn, ogni notte, a partire dai sorgenti tradotti in
italiano, vengono ricostruite sia la forma HTML che quella PDF del libro svn.

See http://svnbook.red-bean.com/nightly/ for the new look of the nightlybuild
index.
And see the following links for nightly build logs of the currently
brokenlocales:
it:    http://svnbook.red-bean.com/nightly/nightly-build.it.log


CONVENZIONI
--------------------------------------------------------------------------------

Elenco di oggetti (list of items)
---------------------------------
Nel caso di elenchi del tipo:
"List of items: first item, second item, third one, ... ,
last but one item, and last item."

Si traduce in italiano come:

"Elenco dei pezzi: primo pezzo, secondo pezzo, anche terzo, ... ,
penultimo pezzo e l'ultimo pezzo."

La forma in inglese (giusta secondo le loro regole) utilizza la virgola anche
prima del 'and' che chiude la lista con l'ultimo pezzo.
In italiano secondo le regole italiane questa virgola finale non c'è.
Questa convenzione ha impatto in particolare sulla traduzione del capitolo che
descrive i comandi, il relativo outout e le opzioni (switch).


Title capitalization
--------------------
In inglese i titoli dei libri sono riportati utilizzando le maiuscole per ogni
parola del titolo, in italiano non è richiesto, segue un esempio:

"How to Read This Book,..."

in italiano si traduce come:
"Come leggere questo libro,..."

ed è considerata quindi ERRATA una traduzione del tipo:
"Come Leggere Questo Libro,..."


Lettere accentate
-----------------
Le lettere accententate o comunque tutti i caratteri estesi (non-ASCII) devono
essere inseriti usando UTF-8 come codifica di riferimento.
Quando si salva il documento è importante assicurarsi di utilizzare la codifica
UTF-8, di solito presente come opzione nella dialog del comando 'save as'.

Si raccomanda di NON sostituire le lettere accentate con il digramma
lettera+apice all'interno del testo tradotto in italiano:
Errato                  Corretto
a',e',i',o',u'          à,è,é,ì,ò,ù
E'                      È

È obbligatorio utilizzare l'accento solo in questi casi:

- nelle parole tronche (vedi oltre) composte da più di una sillaba: (es. Perù,
bensì ecc.)
- nelle seguenti parole monosillabiche: è, dà, dì, là, lì, né, sé, sì, tè, ciò,
già, giù, più, può, scià ma con alcune eccezioni. L'accento non si usa su da
usato come preposizione, e come congiunzione, la come articolo e pronome, li
come pronome, ne come pronome o avverbio, se come congiunzione, si e te come
pronomi, di come preposizione. L'Accademia della Crusca consiglia di usare sé
anche quando seguito da stesso o medesimo e indifferentemente al singolare o al
plurale.
- nelle forme desuete del verbo avere senza l'acca: ò, à, ài, ànno. Tali forme
non sono più utilizzate nell'italiano odierno, ma è possibile incontrarle in
testi datati tra l'Ottocento e il primo Novecento.

Qui di seguito sono elencate le parole più comuni che richiedono l'accento acuto
sulla e finale:

- Affinché, benché, cosicché, finché, giacché, macché, nonché, perché, poiché,
purché, sicché e tutti i composti di che; inoltre, lo stesso ché nel significato
di perché (o affinché);
- Né (= e non o simili);
- Sé, usato come pronome;
- Ventitré e tutti i composti di tre (trentatré, quarantatré, centotré, ecc.);
- Credé (= credette) e tutte le terze persone singolari del passato remoto in -é
(rifletté, dové, ecc.; eccezione: diè, per cui vedi sotto);
- Scimpanzé, nontiscordardimé, mercé, testé, fé (per fede e per fece), affé,
autodafé, viceré.

Infine per ottenere le lettere maiuscole accentate:
Carattere       MS Windows      Linux           MacOS X
È               ALT+212         Caps Lock+'è'   ALT+Shift+e


Tono della traduzione
---------------------
Utilizzare le forme impersonali del tipo 'si può...' oppure 'è possibile...' per
tradurre forme del tipo 'you can...'.


Citazioni
---------
Tradurre riportando anche (prima) la frase in lingua originale, giusto perché
venga mantenuto in modo sicuro lo spirito della frase (originale).


Uso virgolette doppie o singole
-------------------------------
Si mantiene lo stesso standard utilizzato nella lingua originale (inglese).


Plurale e termini in inglese all'interno del testo italiano
-----------------------------------------------------------
I termini in inglese devono perdere il plurale.
In italiano è corretto:

"Ho compilato i book"

ed è considerato quindi ERRATO:

"Ho compilato i books"

poiché utilizza il plurale per il termine inglese "books".
Vedi anche http://www.corriere.it/Rubriche/Scioglilingua/2004/23luglio.shtml


Spaziatura punteggiatura e parentesi
------------------------------------
In accordo con il testo originale in inglese: lasciare uno spazio tra le virgole
o parentesi e la parola successiva.
Esempio corretto: Ecco un testo, molto breve, che contiene (a scopo
dimostrativo) alcune parole.
Esempio Scorretto: Ecco un testo,molto breve,che contiene(a scopo
dimostrativo)alcune parole.


Filename e pathname contenuti negli esempi
------------------------------------------
Non sono tradotti, segue un esempio:
$ svn checkout file:///path/to/repos/myproject/trunk myproject
A  myproject/foo.c
A  myproject/bar.c
A  myproject/Makefile


Conservazione dei paragrafi e titoli in lingua originale
--------------------------------------------------------
Al fine di facilitare la revisione della traduzione, ogni paragrafo viene
conservato nella lingua originale introducendo 'lang="en"' all'interno del tag
<para>.
Tale convenzione permette in fase di costruzione dei file html o pdf di filtrare
i paragrafi in lingua originale (ad oggi tale filtro deve essere ancora
implementato nei makefile che si occupano di passare da xml a html o pdf).

Nel caso dei <title>, poiché non si possono avere doppi titoli, il testo
originale in inglese viene preservato all'interno di un commento.

Segue un esempio:
<!-- <title>Guided Tour</title>  -->
  <title>Guided Tour</title>

    <para lang="en">In the world of open-source software, the Concurrent
      Versions System (CVS) has long been the tool of choice for
      version control.
    </para>

    <para>Nel mondo del software open-source, Concurrent Versions System (CVS)
      è stato a lungo lo strumento preferito per la gestione delle versioni.
    </para>

Trucco: nel plug-in di dizionario per JEdit c'è la voce <para> che serve proprio
a sostituire <para> con <para lang="en"> in modo semi-automatico.


Commenti ai commit
------------------
Su richiesta della comunità svn-book, si prega di introdurre i commenti ai
commit in lingua inglese.
Se si sono già introdotti dei commenti in italiano non è un problema, si possono
modificare, seguono alcuni appunti al riguardo.

set SVN_EDITOR="C:\Programmi\Windows NT\Accessori\wordpad.exe"

Si deve conoscere il numero della revisione per la quale si desidera modificare
i commenti.
Per verificare la revisione corrente o quella da modificare si possono usare i
comandi:

svn status -v myfile

oppure

svn log myfile

Per modificare il msg di log si usa il comando

svn propedit -r2174 --revprop svn:log myfile

Si imposta di un nuovo valore per la proprietà 'svn:log' nella revisione 2174

Da notare che NON è necessario il commit finale poiché NON viene modificato il
contenuto ma solo le proprietà.
Le modifiche alle prorietà vengono quindi direttamente trasmesse al server svn.


Commenti interni al file .xml
-----------------------------
Non sono da tradurre, in quanto non fanno parte del testo del libro ma sono
annotazioni di servizio contenute internamente al file .XML, segue un esempio:
<!-- ### pll - Fri 07 Feb 2003 12:55:07 -->
<!-- I find this sidebar rather confusing here, since you really -->
<!-- haven't gone through explaining the svn command line syntax -->
<!-- anywhere. Maybe a short section explaining that subversion -->

Ciò non vuol dire che per esigenze TEMPORANEE non sia utile introdurre dei
commenti, in particolare in fase di revisione della traduzione oppure quando si
vuole proporre una qualche modifica, segue un esempio che sfrutta la keyword
$Id$ per rendere
riconoscibile chi e quando lo ha introdotto:
<!-- ### $Id$ -->
<!-- Questo è un esempio di commento che può essere utilizzato per  -->
<!-- introdurre comunicazioni di servizio inerenti la traduzione  -->


DIZIONARIO
--------------------------------------------------------------------------------
Vedi file IT-EN-Dizionario.cliplibrary contenuto in src/it nella rep. SVN
BOOK-IT.
Tale file contiene parecchi commenti che ne spiegano il formato interno.
Attualmente (08/06/2006) il dizionario rispetta un formato direttamente
utilizzabile dal plugin 'Clipper' dell'editor JEdit.

I motivo principale è rappresentato dal fatto di poter, in tal modo, inserire
direttamente nel testo che si sta traducendo i termini contenuti nel file di
dizionario, il tutto, ovviamente se si usa Jedit come editor.

Comunque, se proprio, non si desidera usare Jedit il file è sempre utilizzabile
come riferimento in quando leggibile da un normale editor di testi (o da un
altro tool!).

Seguono dettagli riguardo l'installazione di Jedit, l'installazione del Plugin
e la configurazione del Plugin per usare il file IT-EN-Dizionario.cliplibrary.
Il tutto è molto più semplice da fare che non da descrivere:-)


Installazione JEDIT+plugin 'Clipper'
------------------------------------
Scaricare http://www.jedit.org/
Verificato su: Windows XP Prof.+JDK 1.5
Scaricare Jedit 4.2 (es. jedit42install.jar) ed installarlo.
Se necessario, sotto Windows, per attivarlo usare il seguente script
'jedit.bat':
'
start javaw -jar "C:\Program Files\jEdit 4.2\jedit.jar" %1%
'
Da salvare nella directory che contiene jedit.jar (tipicamente C:\Program
Files\jEdit 4.2).

Dalla pagina http://plugins.jedit.org/list.php?category=11
scaricare il plugin 'Clipper', scomprimerlo e copiare Clipper.jar nella
directory
C:\Program Files\jEdit 4.2\jars

Avete appena installato il plugin(!).
Per fare comparire la finestra del plugin:
Plugins-> Clipper -> Clipper


Configurazione  di plugin 'Clipper' per uso dizionario
------------------------------------------------------
Verificato su: Windows XP Prof.+JDK 1.5

Attivare Jedit
menu'Plugins-> PLuginManager -> scegliere 'Clipper' e premere il bottone
'plug-in options'
Nella dialog che si apre, scegliere 'clipper',
introdurre nel campo 'Clipper directory' il percorso dove risiede il file
IT-EN-Dizionario.cliplibrary ad esempio 'C:\mynick\Subversion\src\it'

Una volta aperta la finestra del plugin 'Clipper',
dalla combo del plugin scegliere la voce 'svn-it_book':
comparirà la lista dei termini nel dizionario pronta per l'uso.

Infine, ma è un'opinione personale, consiglio di attivare il plugin come
finestra 'dock at left' facendola comparire/scomparire in modo molto comodo.


Modifica del file di dizionario
-------------------------------
Se Jedit è già attivo, per ottenere la rilettura da parte del plugin del file
di dizionario è necessario scollegare/ricollegare il plugin:
menù Plugins->Plugin Manager
Deselezionare e riselzionare 'Clipper'.
Prima di effettuare un commit del file di dizionario modificato è buona
abitudine validarlo tramite il reload da parte del plugin.

- fine del documento -
